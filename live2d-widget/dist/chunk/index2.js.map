{"version":3,"file":"index2.js","sources":["../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmvector.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmstring.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/id/cubismid.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/id/cubismidmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmatrix44.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmrectf.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismrenderer.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismdebug.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmmap.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismjsonextension.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/live2dcubismframework.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappdefine.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapppal.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappglmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/cubismdefaultparameterid.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/icubismmodelsetting.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/cubismmodelsettingjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismbreath.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismeyeblink.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismpose.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmodelmatrix.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismvector2.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmath.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismtargetpoint.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/acubismmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismexpressionmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionqueueentry.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionqueuemanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismexpressionmotionmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotioninternal.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysicsinternal.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysicsjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysics.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismclippingmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismshader_webgl.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismrenderer_webgl.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodel.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmoc.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodeluserdatajson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodeluserdata.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismusermodel.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappwavfilehandler.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappmodel.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismviewmatrix.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapplive2dmanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapptexturemanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappsprite.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/touchmanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappview.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappsubdelegate.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappdelegate.js","../../build/cubism5/index.js"],"sourcesContent":["export class csmVector {\n    constructor(initialCapacity = 0) {\n        if (initialCapacity < 1) {\n            this._ptr = [];\n            this._capacity = 0;\n            this._size = 0;\n        }\n        else {\n            this._ptr = new Array(initialCapacity);\n            this._capacity = initialCapacity;\n            this._size = 0;\n        }\n    }\n    at(index) {\n        return this._ptr[index];\n    }\n    set(index, value) {\n        this._ptr[index] = value;\n    }\n    get(offset = 0) {\n        const ret = new Array();\n        for (let i = offset; i < this._size; i++) {\n            ret.push(this._ptr[i]);\n        }\n        return ret;\n    }\n    pushBack(value) {\n        if (this._size >= this._capacity) {\n            this.prepareCapacity(this._capacity == 0 ? csmVector.DefaultSize : this._capacity * 2);\n        }\n        this._ptr[this._size++] = value;\n    }\n    clear() {\n        this._ptr.length = 0;\n        this._size = 0;\n    }\n    getSize() {\n        return this._size;\n    }\n    assign(newSize, value) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize);\n        }\n        for (let i = 0; i < newSize; i++) {\n            this._ptr[i] = value;\n        }\n        this._size = newSize;\n    }\n    resize(newSize, value = null) {\n        this.updateSize(newSize, value, true);\n    }\n    updateSize(newSize, value = null, callPlacementNew = true) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize);\n            if (callPlacementNew) {\n                for (let i = this._size; i < newSize; i++) {\n                    if (typeof value == 'function') {\n                        this._ptr[i] = JSON.parse(JSON.stringify(new value()));\n                    }\n                    else {\n                        this._ptr[i] = value;\n                    }\n                }\n            }\n            else {\n                for (let i = this._size; i < newSize; i++) {\n                    this._ptr[i] = value;\n                }\n            }\n        }\n        else {\n            const sub = this._size - newSize;\n            this._ptr.splice(this._size - sub, sub);\n        }\n        this._size = newSize;\n    }\n    insert(position, begin, end) {\n        let dstSi = position._index;\n        const srcSi = begin._index;\n        const srcEi = end._index;\n        const addCount = srcEi - srcSi;\n        this.prepareCapacity(this._size + addCount);\n        const addSize = this._size - dstSi;\n        if (addSize > 0) {\n            for (let i = 0; i < addSize; i++) {\n                this._ptr.splice(dstSi + i, 0, null);\n            }\n        }\n        for (let i = srcSi; i < srcEi; i++, dstSi++) {\n            this._ptr[dstSi] = begin._vector._ptr[i];\n        }\n        this._size = this._size + addCount;\n    }\n    remove(index) {\n        if (index < 0 || this._size <= index) {\n            return false;\n        }\n        this._ptr.splice(index, 1);\n        --this._size;\n        return true;\n    }\n    erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite;\n        }\n        this._ptr.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index);\n        return ite2;\n    }\n    prepareCapacity(newSize) {\n        if (newSize > this._capacity) {\n            if (this._capacity == 0) {\n                this._ptr = new Array(newSize);\n                this._capacity = newSize;\n            }\n            else {\n                this._ptr.length = newSize;\n                this._capacity = newSize;\n            }\n        }\n    }\n    begin() {\n        const ite = this._size == 0 ? this.end() : new iterator(this, 0);\n        return ite;\n    }\n    end() {\n        const ite = new iterator(this, this._size);\n        return ite;\n    }\n    getOffset(offset) {\n        const newVector = new csmVector();\n        newVector._ptr = this.get(offset);\n        newVector._size = this.get(offset).length;\n        newVector._capacity = this.get(offset).length;\n        return newVector;\n    }\n}\ncsmVector.DefaultSize = 10;\nexport class iterator {\n    constructor(v, index) {\n        this._vector = v != undefined ? v : null;\n        this._index = index != undefined ? index : 0;\n    }\n    set(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    preIncrement() {\n        ++this._index;\n        return this;\n    }\n    preDecrement() {\n        --this._index;\n        return this;\n    }\n    increment() {\n        const iteold = new iterator(this._vector, this._index++);\n        return iteold;\n    }\n    decrement() {\n        const iteold = new iterator(this._vector, this._index--);\n        return iteold;\n    }\n    ptr() {\n        return this._vector._ptr[this._index];\n    }\n    substitution(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    notEqual(ite) {\n        return this._index != ite._index || this._vector != ite._vector;\n    }\n}\nimport * as $ from './csmvector';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmVector = $.csmVector;\n    Live2DCubismFramework.iterator = $.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class csmString {\n    append(c, length) {\n        this.s += length !== undefined ? c.substr(0, length) : c;\n        return this;\n    }\n    expansion(length, v) {\n        for (let i = 0; i < length; i++) {\n            this.append(v);\n        }\n        return this;\n    }\n    getBytes() {\n        return encodeURIComponent(this.s).replace(/%../g, 'x').length;\n    }\n    getLength() {\n        return this.s.length;\n    }\n    isLess(s) {\n        return this.s < s.s;\n    }\n    isGreat(s) {\n        return this.s > s.s;\n    }\n    isEqual(s) {\n        return this.s == s;\n    }\n    isEmpty() {\n        return this.s.length == 0;\n    }\n    constructor(s) {\n        this.s = s;\n    }\n}\nimport * as $ from './csmstring';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmString = $.csmString;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmString } from '../type/csmstring';\nexport class CubismId {\n    static createIdInternal(id) {\n        return new CubismId(id);\n    }\n    getString() {\n        return this._id;\n    }\n    isEqual(c) {\n        if (typeof c === 'string') {\n            return this._id.isEqual(c);\n        }\n        else if (c instanceof csmString) {\n            return this._id.isEqual(c.s);\n        }\n        else if (c instanceof CubismId) {\n            return this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    isNotEqual(c) {\n        if (typeof c == 'string') {\n            return !this._id.isEqual(c);\n        }\n        else if (c instanceof csmString) {\n            return !this._id.isEqual(c.s);\n        }\n        else if (c instanceof CubismId) {\n            return !this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    constructor(id) {\n        if (typeof id === 'string') {\n            this._id = new csmString(id);\n            return;\n        }\n        this._id = id;\n    }\n}\nimport * as $ from './cubismid';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismId = $.CubismId;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nimport { CubismId } from './cubismid';\nexport class CubismIdManager {\n    constructor() {\n        this._ids = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._ids.getSize(); ++i) {\n            this._ids.set(i, void 0);\n        }\n        this._ids = null;\n    }\n    registerIds(ids) {\n        for (let i = 0; i < ids.length; i++) {\n            this.registerId(ids[i]);\n        }\n    }\n    registerId(id) {\n        let result = null;\n        if ('string' == typeof id) {\n            if ((result = this.findId(id)) != null) {\n                return result;\n            }\n            result = CubismId.createIdInternal(id);\n            this._ids.pushBack(result);\n        }\n        else {\n            return this.registerId(id.s);\n        }\n        return result;\n    }\n    getId(id) {\n        return this.registerId(id);\n    }\n    isExist(id) {\n        if ('string' == typeof id) {\n            return this.findId(id) != null;\n        }\n        return this.isExist(id.s);\n    }\n    findId(id) {\n        for (let i = 0; i < this._ids.getSize(); ++i) {\n            if (this._ids.at(i).getString().isEqual(id)) {\n                return this._ids.at(i);\n            }\n        }\n        return null;\n    }\n}\nimport * as $ from './cubismidmanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismIdManager = $.CubismIdManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismMatrix44 {\n    constructor() {\n        this._tr = new Float32Array(16);\n        this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n        const c = new Float32Array([\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n            0.0\n        ]);\n        const n = 4;\n        for (let i = 0; i < n; ++i) {\n            for (let j = 0; j < n; ++j) {\n                for (let k = 0; k < n; ++k) {\n                    c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n                }\n            }\n        }\n        for (let i = 0; i < 16; ++i) {\n            dst[i] = c[i];\n        }\n    }\n    loadIdentity() {\n        const c = new Float32Array([\n            1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\n            1.0\n        ]);\n        this.setMatrix(c);\n    }\n    setMatrix(tr) {\n        for (let i = 0; i < 16; ++i) {\n            this._tr[i] = tr[i];\n        }\n    }\n    getArray() {\n        return this._tr;\n    }\n    getScaleX() {\n        return this._tr[0];\n    }\n    getScaleY() {\n        return this._tr[5];\n    }\n    getTranslateX() {\n        return this._tr[12];\n    }\n    getTranslateY() {\n        return this._tr[13];\n    }\n    transformX(src) {\n        return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n        return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n        return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n        return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n        this._tr[12] = x;\n        this._tr[13] = y;\n    }\n    translateX(x) {\n        this._tr[12] = x;\n    }\n    translateY(y) {\n        this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n        const tr1 = new Float32Array([\n            x,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            y,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n        this._tr[0] = x;\n        this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n        CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n        const cloneMatrix = new CubismMatrix44();\n        for (let i = 0; i < this._tr.length; i++) {\n            cloneMatrix._tr[i] = this._tr[i];\n        }\n        return cloneMatrix;\n    }\n}\nimport * as $ from './cubismmatrix44';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMatrix44 = $.CubismMatrix44;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class csmRect {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    getCenterX() {\n        return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n        return this.y + 0.5 * this.height;\n    }\n    getRight() {\n        return this.x + this.width;\n    }\n    getBottom() {\n        return this.y + this.height;\n    }\n    setRect(r) {\n        this.x = r.x;\n        this.y = r.y;\n        this.width = r.width;\n        this.height = r.height;\n    }\n    expand(w, h) {\n        this.x -= w;\n        this.y -= h;\n        this.width += w * 2.0;\n        this.height += h * 2.0;\n    }\n}\nimport * as $ from './csmrectf';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmRect = $.csmRect;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { csmRect } from '../type/csmrectf';\nexport class CubismRenderer {\n    static create() {\n        return null;\n    }\n    static delete(renderer) {\n        renderer = null;\n    }\n    initialize(model) {\n        this._model = model;\n    }\n    drawModel() {\n        if (this.getModel() == null)\n            return;\n        this.saveProfile();\n        this.doDrawModel();\n        this.restoreProfile();\n    }\n    setMvpMatrix(matrix44) {\n        this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n        return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n        if (red < 0.0) {\n            red = 0.0;\n        }\n        else if (red > 1.0) {\n            red = 1.0;\n        }\n        if (green < 0.0) {\n            green = 0.0;\n        }\n        else if (green > 1.0) {\n            green = 1.0;\n        }\n        if (blue < 0.0) {\n            blue = 0.0;\n        }\n        else if (blue > 1.0) {\n            blue = 1.0;\n        }\n        if (alpha < 0.0) {\n            alpha = 0.0;\n        }\n        else if (alpha > 1.0) {\n            alpha = 1.0;\n        }\n        this._modelColor.r = red;\n        this._modelColor.g = green;\n        this._modelColor.b = blue;\n        this._modelColor.a = alpha;\n    }\n    getModelColor() {\n        return JSON.parse(JSON.stringify(this._modelColor));\n    }\n    getModelColorWithOpacity(opacity) {\n        const modelColorRGBA = this.getModelColor();\n        modelColorRGBA.a *= opacity;\n        if (this.isPremultipliedAlpha()) {\n            modelColorRGBA.r *= modelColorRGBA.a;\n            modelColorRGBA.g *= modelColorRGBA.a;\n            modelColorRGBA.b *= modelColorRGBA.a;\n        }\n        return modelColorRGBA;\n    }\n    setIsPremultipliedAlpha(enable) {\n        this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n        return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n        this._isCulling = culling;\n    }\n    isCulling() {\n        return this._isCulling;\n    }\n    setAnisotropy(n) {\n        this._anisotropy = n;\n    }\n    getAnisotropy() {\n        return this._anisotropy;\n    }\n    getModel() {\n        return this._model;\n    }\n    useHighPrecisionMask(high) {\n        this._useHighPrecisionMask = high;\n    }\n    isUsingHighPrecisionMask() {\n        return this._useHighPrecisionMask;\n    }\n    constructor() {\n        this._isCulling = false;\n        this._isPremultipliedAlpha = false;\n        this._anisotropy = 0.0;\n        this._model = null;\n        this._modelColor = new CubismTextureColor();\n        this._useHighPrecisionMask = false;\n        this._mvpMatrix4x4 = new CubismMatrix44();\n        this._mvpMatrix4x4.loadIdentity();\n    }\n}\nexport var CubismBlendMode;\n(function (CubismBlendMode) {\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n})(CubismBlendMode || (CubismBlendMode = {}));\nexport class CubismTextureColor {\n    constructor(r = 1.0, g = 1.0, b = 1.0, a = 1.0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n}\nexport class CubismClippingContext {\n    constructor(clippingDrawableIndices, clipCount) {\n        this._clippingIdList = clippingDrawableIndices;\n        this._clippingIdCount = clipCount;\n        this._allClippedDrawRect = new csmRect();\n        this._layoutBounds = new csmRect();\n        this._clippedDrawableIndexList = [];\n        this._matrixForMask = new CubismMatrix44();\n        this._matrixForDraw = new CubismMatrix44();\n        this._bufferIndex = 0;\n    }\n    release() {\n        if (this._layoutBounds != null) {\n            this._layoutBounds = null;\n        }\n        if (this._allClippedDrawRect != null) {\n            this._allClippedDrawRect = null;\n        }\n        if (this._clippedDrawableIndexList != null) {\n            this._clippedDrawableIndexList = null;\n        }\n    }\n    addClippedDrawable(drawableIndex) {\n        this._clippedDrawableIndexList.push(drawableIndex);\n    }\n}\nimport * as $ from './cubismrenderer';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismBlendMode = $.CubismBlendMode;\n    Live2DCubismFramework.CubismRenderer = $.CubismRenderer;\n    Live2DCubismFramework.CubismTextureColor = $.CubismTextureColor;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CSM_LOG_LEVEL, CSM_LOG_LEVEL_DEBUG, CSM_LOG_LEVEL_ERROR, CSM_LOG_LEVEL_INFO, CSM_LOG_LEVEL_VERBOSE, CSM_LOG_LEVEL_WARNING } from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\nexport const CubismLogPrint = (level, fmt, args) => {\n    CubismDebug.print(level, '[CSM]' + fmt, args);\n};\nexport const CubismLogPrintIn = (level, fmt, args) => {\n    CubismLogPrint(level, fmt + '\\n', args);\n};\nexport const CSM_ASSERT = (expr) => {\n    console.assert(expr);\n};\nexport let CubismLogVerbose;\nexport let CubismLogDebug;\nexport let CubismLogInfo;\nexport let CubismLogWarning;\nexport let CubismLogError;\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n    CubismLogVerbose = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n    };\n    CubismLogDebug = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n    CubismLogDebug = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nexport class CubismDebug {\n    static print(logLevel, format, args) {\n        if (logLevel < CubismFramework.getLoggingLevel()) {\n            return;\n        }\n        const logPrint = CubismFramework.coreLogFunction;\n        if (!logPrint)\n            return;\n        const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n            return args[k];\n        });\n        logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n        for (let i = 0; i < length; i++) {\n            if (i % 16 == 0 && i > 0)\n                this.print(logLevel, '\\n');\n            else if (i % 8 == 0 && i > 0)\n                this.print(logLevel, '  ');\n            this.print(logLevel, '{0} ', [data[i] & 0xff]);\n        }\n        this.print(logLevel, '\\n');\n    }\n    constructor() { }\n}\nimport * as $ from './cubismdebug';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismDebug = $.CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismLogDebug, CubismLogWarning } from '../utils/cubismdebug';\nexport class csmPair {\n    constructor(key, value) {\n        this.first = key == undefined ? null : key;\n        this.second = value == undefined ? null : value;\n    }\n}\nexport class csmMap {\n    constructor(size) {\n        if (size != undefined) {\n            if (size < 1) {\n                this._keyValues = [];\n                this._dummyValue = null;\n                this._size = 0;\n            }\n            else {\n                this._keyValues = new Array(size);\n                this._size = size;\n            }\n        }\n        else {\n            this._keyValues = [];\n            this._dummyValue = null;\n            this._size = 0;\n        }\n    }\n    release() {\n        this.clear();\n    }\n    appendKey(key) {\n        let findIndex = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                findIndex = i;\n                break;\n            }\n        }\n        if (findIndex != -1) {\n            CubismLogWarning('The key `{0}` is already append.', key);\n            return;\n        }\n        this.prepareCapacity(this._size + 1, false);\n        this._keyValues[this._size] = new csmPair(key);\n        this._size += 1;\n    }\n    getValue(key) {\n        let found = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            return this._keyValues[found].second;\n        }\n        else {\n            this.appendKey(key);\n            return this._keyValues[this._size - 1].second;\n        }\n    }\n    setValue(key, value) {\n        let found = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            this._keyValues[found].second = value;\n        }\n        else {\n            this.appendKey(key);\n            this._keyValues[this._size - 1].second = value;\n        }\n    }\n    isExist(key) {\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                return true;\n            }\n        }\n        return false;\n    }\n    clear() {\n        this._keyValues = void 0;\n        this._keyValues = null;\n        this._keyValues = [];\n        this._size = 0;\n    }\n    getSize() {\n        return this._size;\n    }\n    prepareCapacity(newSize, fitToSize) {\n        if (newSize > this._keyValues.length) {\n            if (this._keyValues.length == 0) {\n                if (!fitToSize && newSize < csmMap.DefaultSize)\n                    newSize = csmMap.DefaultSize;\n                this._keyValues.length = newSize;\n            }\n            else {\n                if (!fitToSize && newSize < this._keyValues.length * 2)\n                    newSize = this._keyValues.length * 2;\n                this._keyValues.length = newSize;\n            }\n        }\n    }\n    begin() {\n        const ite = new iterator(this, 0);\n        return ite;\n    }\n    end() {\n        const ite = new iterator(this, this._size);\n        return ite;\n    }\n    erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite;\n        }\n        this._keyValues.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index);\n        return ite2;\n    }\n    dumpAsInt() {\n        for (let i = 0; i < this._size; i++) {\n            CubismLogDebug('{0} ,', this._keyValues[i]);\n            CubismLogDebug('\\n');\n        }\n    }\n}\ncsmMap.DefaultSize = 10;\nexport class iterator {\n    constructor(v, idx) {\n        this._map = v != undefined ? v : new csmMap();\n        this._index = idx != undefined ? idx : 0;\n    }\n    set(ite) {\n        this._index = ite._index;\n        this._map = ite._map;\n        return this;\n    }\n    preIncrement() {\n        ++this._index;\n        return this;\n    }\n    preDecrement() {\n        --this._index;\n        return this;\n    }\n    increment() {\n        const iteold = new iterator(this._map, this._index++);\n        return iteold;\n    }\n    decrement() {\n        const iteold = new iterator(this._map, this._index);\n        this._map = iteold._map;\n        this._index = iteold._index;\n        return this;\n    }\n    ptr() {\n        return this._map._keyValues[this._index];\n    }\n    notEqual(ite) {\n        return this._index != ite._index || this._map != ite._map;\n    }\n}\nimport * as $ from './csmmap';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmMap = $.csmMap;\n    Live2DCubismFramework.csmPair = $.csmPair;\n    Live2DCubismFramework.iterator = $.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { JsonArray, JsonBoolean, JsonFloat, JsonMap, JsonNullvalue, JsonString } from './cubismjson';\nexport class CubismJsonExtension {\n    static parseJsonObject(obj, map) {\n        Object.keys(obj).forEach(key => {\n            if (typeof obj[key] == 'boolean') {\n                const convValue = Boolean(obj[key]);\n                map.put(key, new JsonBoolean(convValue));\n            }\n            else if (typeof obj[key] == 'string') {\n                const convValue = String(obj[key]);\n                map.put(key, new JsonString(convValue));\n            }\n            else if (typeof obj[key] == 'number') {\n                const convValue = Number(obj[key]);\n                map.put(key, new JsonFloat(convValue));\n            }\n            else if (obj[key] instanceof Array) {\n                map.put(key, CubismJsonExtension.parseJsonArray(obj[key]));\n            }\n            else if (obj[key] instanceof Object) {\n                map.put(key, CubismJsonExtension.parseJsonObject(obj[key], new JsonMap()));\n            }\n            else if (obj[key] == null) {\n                map.put(key, new JsonNullvalue());\n            }\n            else {\n                map.put(key, obj[key]);\n            }\n        });\n        return map;\n    }\n    static parseJsonArray(obj) {\n        const arr = new JsonArray();\n        Object.keys(obj).forEach(key => {\n            const convKey = Number(key);\n            if (typeof convKey == 'number') {\n                if (typeof obj[key] == 'boolean') {\n                    const convValue = Boolean(obj[key]);\n                    arr.add(new JsonBoolean(convValue));\n                }\n                else if (typeof obj[key] == 'string') {\n                    const convValue = String(obj[key]);\n                    arr.add(new JsonString(convValue));\n                }\n                else if (typeof obj[key] == 'number') {\n                    const convValue = Number(obj[key]);\n                    arr.add(new JsonFloat(convValue));\n                }\n                else if (obj[key] instanceof Array) {\n                    arr.add(this.parseJsonArray(obj[key]));\n                }\n                else if (obj[key] instanceof Object) {\n                    arr.add(this.parseJsonObject(obj[key], new JsonMap()));\n                }\n                else if (obj[key] == null) {\n                    arr.add(new JsonNullvalue());\n                }\n                else {\n                    arr.add(obj[key]);\n                }\n            }\n            else if (obj[key] instanceof Array) {\n                arr.add(this.parseJsonArray(obj[key]));\n            }\n            else if (obj[key] instanceof Object) {\n                arr.add(this.parseJsonObject(obj[key], new JsonMap()));\n            }\n            else if (obj[key] == null) {\n                arr.add(new JsonNullvalue());\n            }\n            else {\n                const convValue = Array(obj[key]);\n                for (let i = 0; i < convValue.length; i++) {\n                    arr.add(convValue[i]);\n                }\n            }\n        });\n        return arr;\n    }\n}\n","import { strtod } from '../live2dcubismframework';\nimport { csmMap } from '../type/csmmap';\nimport { csmString } from '../type/csmstring';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogInfo } from './cubismdebug';\nconst CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\nconst CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\nexport class Value {\n    constructor() { }\n    getRawString(defaultValue, indent) {\n        return this.getString(defaultValue, indent);\n    }\n    toInt(defaultValue = 0) {\n        return defaultValue;\n    }\n    toFloat(defaultValue = 0) {\n        return defaultValue;\n    }\n    toBoolean(defaultValue = false) {\n        return defaultValue;\n    }\n    getSize() {\n        return 0;\n    }\n    getArray(defaultValue = null) {\n        return defaultValue;\n    }\n    getVector(defaultValue = new csmVector()) {\n        return defaultValue;\n    }\n    getMap(defaultValue) {\n        return defaultValue;\n    }\n    getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getValueByString(s) {\n        return Value.nullValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getKeys() {\n        return Value.dummyKeys;\n    }\n    isError() {\n        return false;\n    }\n    isNull() {\n        return false;\n    }\n    isBool() {\n        return false;\n    }\n    isFloat() {\n        return false;\n    }\n    isString() {\n        return false;\n    }\n    isArray() {\n        return false;\n    }\n    isMap() {\n        return false;\n    }\n    equals(value) {\n        return false;\n    }\n    isStatic() {\n        return false;\n    }\n    setErrorNotForClientCall(errorStr) {\n        return JsonError.errorValue;\n    }\n    static staticInitializeNotForClientCall() {\n        JsonBoolean.trueValue = new JsonBoolean(true);\n        JsonBoolean.falseValue = new JsonBoolean(false);\n        Value.errorValue = new JsonError('ERROR', true);\n        Value.nullValue = new JsonNullvalue();\n        Value.dummyKeys = new csmVector();\n    }\n    static staticReleaseNotForClientCall() {\n        JsonBoolean.trueValue = null;\n        JsonBoolean.falseValue = null;\n        Value.errorValue = null;\n        Value.nullValue = null;\n        Value.dummyKeys = null;\n    }\n}\nexport class CubismJson {\n    constructor(buffer, length) {\n        this._parseCallback = CubismJsonExtension.parseJsonObject;\n        this._error = null;\n        this._lineCount = 0;\n        this._root = null;\n        if (buffer != undefined) {\n            this.parseBytes(buffer, length, this._parseCallback);\n        }\n    }\n    static create(buffer, size) {\n        const json = new CubismJson();\n        const succeeded = json.parseBytes(buffer, size, json._parseCallback);\n        if (!succeeded) {\n            CubismJson.delete(json);\n            return null;\n        }\n        else {\n            return json;\n        }\n    }\n    static delete(instance) {\n        instance = null;\n    }\n    getRoot() {\n        return this._root;\n    }\n    static arrayBufferToString(buffer) {\n        const uint8Array = new Uint8Array(buffer);\n        let str = '';\n        for (let i = 0, len = uint8Array.length; i < len; ++i) {\n            str += '%' + this.pad(uint8Array[i].toString(16));\n        }\n        str = decodeURIComponent(str);\n        return str;\n    }\n    static pad(n) {\n        return n.length < 2 ? '0' + n : n;\n    }\n    parseBytes(buffer, size, parseCallback) {\n        const endPos = new Array(1);\n        const decodeBuffer = CubismJson.arrayBufferToString(buffer);\n        if (parseCallback == undefined) {\n            this._root = this.parseValue(decodeBuffer, size, 0, endPos);\n        }\n        else {\n            this._root = parseCallback(JSON.parse(decodeBuffer), new JsonMap());\n        }\n        if (this._error) {\n            let strbuf = '\\0';\n            strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\n            this._root = new JsonString(strbuf);\n            CubismLogInfo('{0}', this._root.getRawString());\n            return false;\n        }\n        else if (this._root == null) {\n            this._root = new JsonError(new csmString(this._error), false);\n            return false;\n        }\n        return true;\n    }\n    getParseError() {\n        return this._error;\n    }\n    checkEndOfFile() {\n        return this._root.getArray()[1].equals('EOF');\n    }\n    parseValue(buffer, length, begin, outEndPos) {\n        if (this._error)\n            return null;\n        let o = null;\n        let i = begin;\n        let f;\n        for (; i < length; i++) {\n            const c = buffer[i];\n            switch (c) {\n                case '-':\n                case '.':\n                case '0':\n                case '1':\n                case '2':\n                case '3':\n                case '4':\n                case '5':\n                case '6':\n                case '7':\n                case '8':\n                case '9': {\n                    const afterString = new Array(1);\n                    f = strtod(buffer.slice(i), afterString);\n                    outEndPos[0] = buffer.indexOf(afterString[0]);\n                    return new JsonFloat(f);\n                }\n                case '\"':\n                    return new JsonString(this.parseString(buffer, length, i + 1, outEndPos));\n                case '[':\n                    o = this.parseArray(buffer, length, i + 1, outEndPos);\n                    return o;\n                case '{':\n                    o = this.parseObject(buffer, length, i + 1, outEndPos);\n                    return o;\n                case 'n':\n                    if (i + 3 < length) {\n                        o = new JsonNullvalue();\n                        outEndPos[0] = i + 4;\n                    }\n                    else {\n                        this._error = 'parse null';\n                    }\n                    return o;\n                case 't':\n                    if (i + 3 < length) {\n                        o = JsonBoolean.trueValue;\n                        outEndPos[0] = i + 4;\n                    }\n                    else {\n                        this._error = 'parse true';\n                    }\n                    return o;\n                case 'f':\n                    if (i + 4 < length) {\n                        o = JsonBoolean.falseValue;\n                        outEndPos[0] = i + 5;\n                    }\n                    else {\n                        this._error = \"illegal ',' position\";\n                    }\n                    return o;\n                case ',':\n                    this._error = \"illegal ',' position\";\n                    return null;\n                case ']':\n                    outEndPos[0] = i;\n                    return null;\n                case '\\n':\n                    this._lineCount++;\n                case ' ':\n                case '\\t':\n                case '\\r':\n                default:\n                    break;\n            }\n        }\n        this._error = 'illegal end of value';\n        return null;\n    }\n    parseString(string, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!string) {\n            this._error = 'string is null';\n            return null;\n        }\n        let i = begin;\n        let c, c2;\n        const ret = new csmString('');\n        let bufStart = begin;\n        for (; i < length; i++) {\n            c = string[i];\n            switch (c) {\n                case '\"': {\n                    outEndPos[0] = i + 1;\n                    ret.append(string.slice(bufStart), i - bufStart);\n                    return ret.s;\n                }\n                case '//': {\n                    i++;\n                    if (i - 1 > bufStart) {\n                        ret.append(string.slice(bufStart), i - bufStart);\n                    }\n                    bufStart = i + 1;\n                    if (i < length) {\n                        c2 = string[i];\n                        switch (c2) {\n                            case '\\\\':\n                                ret.expansion(1, '\\\\');\n                                break;\n                            case '\"':\n                                ret.expansion(1, '\"');\n                                break;\n                            case '/':\n                                ret.expansion(1, '/');\n                                break;\n                            case 'b':\n                                ret.expansion(1, '\\b');\n                                break;\n                            case 'f':\n                                ret.expansion(1, '\\f');\n                                break;\n                            case 'n':\n                                ret.expansion(1, '\\n');\n                                break;\n                            case 'r':\n                                ret.expansion(1, '\\r');\n                                break;\n                            case 't':\n                                ret.expansion(1, '\\t');\n                                break;\n                            case 'u':\n                                this._error = 'parse string/unicord escape not supported';\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    else {\n                        this._error = 'parse string/escape error';\n                    }\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n        this._error = 'parse string/illegal end';\n        return null;\n    }\n    parseObject(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        const ret = new JsonMap();\n        let key = '';\n        let i = begin;\n        let c = '';\n        const localRetEndPos2 = Array(1);\n        let ok = false;\n        for (; i < length; i++) {\n            FOR_LOOP: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case '\"':\n                        key = this.parseString(buffer, length, i + 1, localRetEndPos2);\n                        if (this._error) {\n                            return null;\n                        }\n                        i = localRetEndPos2[0];\n                        ok = true;\n                        break FOR_LOOP;\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case ':':\n                        this._error = \"illegal ':' position\";\n                        break;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n            if (!ok) {\n                this._error = 'key not found';\n                return null;\n            }\n            ok = false;\n            FOR_LOOP2: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ':':\n                        ok = true;\n                        i++;\n                        break FOR_LOOP2;\n                    case '}':\n                        this._error = \"illegal '}' position\";\n                        break;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n            if (!ok) {\n                this._error = \"':' not found\";\n                return null;\n            }\n            const value = this.parseValue(buffer, length, i, localRetEndPos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndPos2[0];\n            ret.put(key, value);\n            FOR_LOOP3: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ',':\n                        break FOR_LOOP3;\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n        }\n        this._error = 'illegal end of perseObject';\n        return null;\n    }\n    parseArray(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        let ret = new JsonArray();\n        let i = begin;\n        let c;\n        const localRetEndpos2 = new Array(1);\n        for (; i < length; i++) {\n            const value = this.parseValue(buffer, length, i, localRetEndpos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndpos2[0];\n            if (value) {\n                ret.add(value);\n            }\n            FOR_LOOP: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ',':\n                        break FOR_LOOP;\n                    case ']':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case '\\n':\n                        ++this._lineCount;\n                    default:\n                        break;\n                }\n            }\n        }\n        ret = void 0;\n        this._error = 'illegal end of parseObject';\n        return null;\n    }\n}\nexport class JsonFloat extends Value {\n    constructor(v) {\n        super();\n        this._value = v;\n    }\n    isFloat() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        const strbuf = '\\0';\n        this._value = parseFloat(strbuf);\n        this._stringBuffer = strbuf;\n        return this._stringBuffer;\n    }\n    toInt(defaultValue = 0) {\n        return parseInt(this._value.toString());\n    }\n    toFloat(defaultValue = 0.0) {\n        return this._value;\n    }\n    equals(value) {\n        if ('number' === typeof value) {\n            if (Math.round(value)) {\n                return false;\n            }\n            else {\n                return value == this._value;\n            }\n        }\n        return false;\n    }\n}\nexport class JsonBoolean extends Value {\n    isBool() {\n        return true;\n    }\n    toBoolean(defaultValue = false) {\n        return this._boolValue;\n    }\n    getString(defaultValue, indent) {\n        this._stringBuffer = this._boolValue ? 'true' : 'false';\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('boolean' === typeof value) {\n            return value == this._boolValue;\n        }\n        return false;\n    }\n    isStatic() {\n        return true;\n    }\n    constructor(v) {\n        super();\n        this._boolValue = v;\n    }\n}\nexport class JsonString extends Value {\n    constructor(s) {\n        super();\n        if ('string' === typeof s) {\n            this._stringBuffer = s;\n        }\n        if (s instanceof csmString) {\n            this._stringBuffer = s.s;\n        }\n    }\n    isString() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('string' === typeof value) {\n            return this._stringBuffer == value;\n        }\n        if (value instanceof csmString) {\n            return this._stringBuffer == value.s;\n        }\n        return false;\n    }\n}\nexport class JsonError extends JsonString {\n    isStatic() {\n        return this._isStatic;\n    }\n    setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return this;\n    }\n    constructor(s, isStatic) {\n        if ('string' === typeof s) {\n            super(s);\n        }\n        else {\n            super(s);\n        }\n        this._isStatic = isStatic;\n    }\n    isError() {\n        return true;\n    }\n}\nexport class JsonNullvalue extends Value {\n    isNull() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    isStatic() {\n        return true;\n    }\n    setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return JsonError.nullValue;\n    }\n    constructor() {\n        super();\n        this._stringBuffer = 'NullValue';\n    }\n}\nexport class JsonArray extends Value {\n    constructor() {\n        super();\n        this._array = new csmVector();\n    }\n    release() {\n        for (let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.preIncrement()) {\n            let v = ite.ptr();\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n        }\n    }\n    isArray() {\n        return true;\n    }\n    getValueByIndex(index) {\n        if (index < 0 || this._array.getSize() <= index) {\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_INDEX_OF_BOUNDS);\n        }\n        const v = this._array.at(index);\n        if (v == null) {\n            return Value.nullValue;\n        }\n        return v;\n    }\n    getValueByString(s) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getString(defaultValue, indent) {\n        const stringBuffer = indent + '[\\n';\n        for (let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.increment()) {\n            const v = ite.ptr();\n            this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\n        }\n        this._stringBuffer = stringBuffer + indent + ']\\n';\n        return this._stringBuffer;\n    }\n    add(v) {\n        this._array.pushBack(v);\n    }\n    getVector(defaultValue = null) {\n        return this._array;\n    }\n    getSize() {\n        return this._array.getSize();\n    }\n}\nexport class JsonMap extends Value {\n    constructor() {\n        super();\n        this._map = new csmMap();\n    }\n    release() {\n        const ite = this._map.begin();\n        while (ite.notEqual(this._map.end())) {\n            let v = ite.ptr().second;\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n            ite.preIncrement();\n        }\n    }\n    isMap() {\n        return true;\n    }\n    getValueByString(s) {\n        if (s instanceof csmString) {\n            const ret = this._map.getValue(s.s);\n            if (ret == null) {\n                return Value.nullValue;\n            }\n            return ret;\n        }\n        for (let iter = this._map.begin(); iter.notEqual(this._map.end()); iter.preIncrement()) {\n            if (iter.ptr().first == s) {\n                if (iter.ptr().second == null) {\n                    return Value.nullValue;\n                }\n                return iter.ptr().second;\n            }\n        }\n        return Value.nullValue;\n    }\n    getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getString(defaultValue, indent) {\n        this._stringBuffer = indent + '{\\n';\n        const ite = this._map.begin();\n        while (ite.notEqual(this._map.end())) {\n            const key = ite.ptr().first;\n            const v = ite.ptr().second;\n            this._stringBuffer +=\n                indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\n            ite.preIncrement();\n        }\n        this._stringBuffer += indent + '}\\n';\n        return this._stringBuffer;\n    }\n    getMap(defaultValue) {\n        return this._map;\n    }\n    put(key, v) {\n        this._map.setValue(key, v);\n    }\n    getKeys() {\n        if (!this._keys) {\n            this._keys = new csmVector();\n            const ite = this._map.begin();\n            while (ite.notEqual(this._map.end())) {\n                const key = ite.ptr().first;\n                this._keys.pushBack(key);\n                ite.preIncrement();\n            }\n        }\n        return this._keys;\n    }\n    getSize() {\n        return this._keys.getSize();\n    }\n}\nimport * as $ from './cubismjson';\nimport { CubismJsonExtension } from './cubismjsonextension';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismJson = $.CubismJson;\n    Live2DCubismFramework.JsonArray = $.JsonArray;\n    Live2DCubismFramework.JsonBoolean = $.JsonBoolean;\n    Live2DCubismFramework.JsonError = $.JsonError;\n    Live2DCubismFramework.JsonFloat = $.JsonFloat;\n    Live2DCubismFramework.JsonMap = $.JsonMap;\n    Live2DCubismFramework.JsonNullvalue = $.JsonNullvalue;\n    Live2DCubismFramework.JsonString = $.JsonString;\n    Live2DCubismFramework.Value = $.Value;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismIdManager } from './id/cubismidmanager';\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport { CSM_ASSERT, CubismLogInfo, CubismLogWarning } from './utils/cubismdebug';\nimport { Value } from './utils/cubismjson';\nexport function strtod(s, endPtr) {\n    let index = 0;\n    for (let i = 1;; i++) {\n        const testC = s.slice(i - 1, i);\n        if (testC == 'e' || testC == '-' || testC == 'E') {\n            continue;\n        }\n        const test = s.substring(0, i);\n        const number = Number(test);\n        if (isNaN(number)) {\n            break;\n        }\n        index = i;\n    }\n    let d = parseFloat(s);\n    if (isNaN(d)) {\n        d = NaN;\n    }\n    endPtr[0] = s.slice(index);\n    return d;\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = null;\nlet s_cubismIdManager = null;\nexport const Constant = Object.freeze({\n    vertexOffset: 0,\n    vertexStep: 2\n});\nexport function csmDelete(address) {\n    if (!address) {\n        return;\n    }\n    address = void 0;\n}\nexport class CubismFramework {\n    static startUp(option = null) {\n        if (s_isStarted) {\n            CubismLogInfo('CubismFramework.startUp() is already done.');\n            return s_isStarted;\n        }\n        s_option = option;\n        if (s_option != null) {\n            Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n        }\n        s_isStarted = true;\n        if (s_isStarted) {\n            const version = Live2DCubismCore.Version.csmGetVersion();\n            const major = (version & 0xff000000) >> 24;\n            const minor = (version & 0x00ff0000) >> 16;\n            const patch = version & 0x0000ffff;\n            const versionNumber = version;\n            CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\n        }\n        CubismLogInfo('CubismFramework.startUp() is complete.');\n        return s_isStarted;\n    }\n    static cleanUp() {\n        s_isStarted = false;\n        s_isInitialized = false;\n        s_option = null;\n        s_cubismIdManager = null;\n    }\n    static initialize(memorySize = 0) {\n        CSM_ASSERT(s_isStarted);\n        if (!s_isStarted) {\n            CubismLogWarning('CubismFramework is not started.');\n            return;\n        }\n        if (s_isInitialized) {\n            CubismLogWarning('CubismFramework.initialize() skipped, already initialized.');\n            return;\n        }\n        Value.staticInitializeNotForClientCall();\n        s_cubismIdManager = new CubismIdManager();\n        Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\n        s_isInitialized = true;\n        CubismLogInfo('CubismFramework.initialize() is complete.');\n    }\n    static dispose() {\n        CSM_ASSERT(s_isStarted);\n        if (!s_isStarted) {\n            CubismLogWarning('CubismFramework is not started.');\n            return;\n        }\n        if (!s_isInitialized) {\n            CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n            return;\n        }\n        Value.staticReleaseNotForClientCall();\n        s_cubismIdManager.release();\n        s_cubismIdManager = null;\n        CubismRenderer.staticRelease();\n        s_isInitialized = false;\n        CubismLogInfo('CubismFramework.dispose() is complete.');\n    }\n    static isStarted() {\n        return s_isStarted;\n    }\n    static isInitialized() {\n        return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n        if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n            return;\n        }\n        Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n        if (s_option != null) {\n            return s_option.loggingLevel;\n        }\n        return LogLevel.LogLevel_Off;\n    }\n    static getIdManager() {\n        return s_cubismIdManager;\n    }\n    constructor() { }\n}\nexport class Option {\n}\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel[LogLevel[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel[LogLevel[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel[LogLevel[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel[LogLevel[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel[LogLevel[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n})(LogLevel || (LogLevel = {}));\nimport * as $ from './live2dcubismframework';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.Constant = $.Constant;\n    Live2DCubismFramework.csmDelete = $.csmDelete;\n    Live2DCubismFramework.CubismFramework = $.CubismFramework;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { LogLevel } from '@framework/live2dcubismframework';\nexport const CanvasSize = 'auto';\nexport const CanvasNum = 1;\nexport const ViewScale = 1.0;\nexport const ViewMaxScale = 2.0;\nexport const ViewMinScale = 0.8;\nexport const ViewLogicalLeft = -1.0;\nexport const ViewLogicalRight = 1.0;\nexport const ViewLogicalBottom = -1.0;\nexport const ViewLogicalTop = 1.0;\nexport const ViewLogicalMaxLeft = -2.0;\nexport const ViewLogicalMaxRight = 2.0;\nexport const ViewLogicalMaxBottom = -2.0;\nexport const ViewLogicalMaxTop = 2.0;\nexport const ResourcesPath = '../../Resources/';\nexport const BackImageName = 'back_class_normal.png';\nexport const GearImageName = 'icon_gear.png';\nexport const PowerImageName = 'CloseNormal.png';\nexport const ModelDir = [\n    'Haru',\n    'Hiyori',\n    'Mark',\n    'Natori',\n    'Rice',\n    'Mao',\n    'Wanko'\n];\nexport const ModelDirSize = ModelDir.length;\nexport const MotionGroupIdle = 'Idle';\nexport const MotionGroupTapBody = 'TapBody';\nexport const HitAreaNameHead = 'Head';\nexport const HitAreaNameBody = 'Body';\nexport const PriorityNone = 0;\nexport const PriorityIdle = 1;\nexport const PriorityNormal = 2;\nexport const PriorityForce = 3;\nexport const MOCConsistencyValidationEnable = true;\nexport const MotionConsistencyValidationEnable = true;\nexport const DebugLogEnable = true;\nexport const DebugTouchLogEnable = false;\nexport const CubismLoggingLevel = LogLevel.LogLevel_Verbose;\nexport const RenderTargetWidth = 1900;\nexport const RenderTargetHeight = 1000;\n","export class LAppPal {\n    static loadFileAsBytes(filePath, callback) {\n        fetch(filePath)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\n    }\n    static getDeltaTime() {\n        return this.deltaTime;\n    }\n    static updateTime() {\n        this.currentFrame = Date.now();\n        this.deltaTime = (this.currentFrame - this.lastFrame) / 1000;\n        this.lastFrame = this.currentFrame;\n    }\n    static printMessage(message) {\n        console.trace(message);\n    }\n}\nLAppPal.lastUpdate = Date.now();\nLAppPal.currentFrame = 0.0;\nLAppPal.lastFrame = 0.0;\nLAppPal.deltaTime = 0.0;\n","export class LAppGlManager {\n    constructor() {\n        this._gl = null;\n        this._gl = null;\n    }\n    initialize(canvas) {\n        this._gl = canvas.getContext('webgl2');\n        if (!this._gl) {\n            alert('Cannot initialize WebGL. This browser does not support.');\n            this._gl = null;\n            return false;\n        }\n        return true;\n    }\n    release() { }\n    getGl() {\n        return this._gl;\n    }\n}\n","export const CubismDefaultParameterId = Object.freeze({\n    HitAreaPrefix: 'HitArea',\n    HitAreaHead: 'Head',\n    HitAreaBody: 'Body',\n    PartsIdCore: 'Parts01Core',\n    PartsArmPrefix: 'Parts01Arm_',\n    PartsArmLPrefix: 'Parts01ArmL_',\n    PartsArmRPrefix: 'Parts01ArmR_',\n    ParamAngleX: 'ParamAngleX',\n    ParamAngleY: 'ParamAngleY',\n    ParamAngleZ: 'ParamAngleZ',\n    ParamEyeLOpen: 'ParamEyeLOpen',\n    ParamEyeLSmile: 'ParamEyeLSmile',\n    ParamEyeROpen: 'ParamEyeROpen',\n    ParamEyeRSmile: 'ParamEyeRSmile',\n    ParamEyeBallX: 'ParamEyeBallX',\n    ParamEyeBallY: 'ParamEyeBallY',\n    ParamEyeBallForm: 'ParamEyeBallForm',\n    ParamBrowLY: 'ParamBrowLY',\n    ParamBrowRY: 'ParamBrowRY',\n    ParamBrowLX: 'ParamBrowLX',\n    ParamBrowRX: 'ParamBrowRX',\n    ParamBrowLAngle: 'ParamBrowLAngle',\n    ParamBrowRAngle: 'ParamBrowRAngle',\n    ParamBrowLForm: 'ParamBrowLForm',\n    ParamBrowRForm: 'ParamBrowRForm',\n    ParamMouthForm: 'ParamMouthForm',\n    ParamMouthOpenY: 'ParamMouthOpenY',\n    ParamCheek: 'ParamCheek',\n    ParamBodyAngleX: 'ParamBodyAngleX',\n    ParamBodyAngleY: 'ParamBodyAngleY',\n    ParamBodyAngleZ: 'ParamBodyAngleZ',\n    ParamBreath: 'ParamBreath',\n    ParamArmLA: 'ParamArmLA',\n    ParamArmRA: 'ParamArmRA',\n    ParamArmLB: 'ParamArmLB',\n    ParamArmRB: 'ParamArmRB',\n    ParamHandL: 'ParamHandL',\n    ParamHandR: 'ParamHandR',\n    ParamHairFront: 'ParamHairFront',\n    ParamHairSide: 'ParamHairSide',\n    ParamHairBack: 'ParamHairBack',\n    ParamHairFluffy: 'ParamHairFluffy',\n    ParamShoulderY: 'ParamShoulderY',\n    ParamBustX: 'ParamBustX',\n    ParamBustY: 'ParamBustY',\n    ParamBaseX: 'ParamBaseX',\n    ParamBaseY: 'ParamBaseY',\n    ParamNONE: 'NONE:'\n});\nimport * as $ from './cubismdefaultparameterid';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.HitAreaBody = $.CubismDefaultParameterId.HitAreaBody;\n    Live2DCubismFramework.HitAreaHead = $.CubismDefaultParameterId.HitAreaHead;\n    Live2DCubismFramework.HitAreaPrefix = $.CubismDefaultParameterId.HitAreaPrefix;\n    Live2DCubismFramework.ParamAngleX = $.CubismDefaultParameterId.ParamAngleX;\n    Live2DCubismFramework.ParamAngleY = $.CubismDefaultParameterId.ParamAngleY;\n    Live2DCubismFramework.ParamAngleZ = $.CubismDefaultParameterId.ParamAngleZ;\n    Live2DCubismFramework.ParamArmLA = $.CubismDefaultParameterId.ParamArmLA;\n    Live2DCubismFramework.ParamArmLB = $.CubismDefaultParameterId.ParamArmLB;\n    Live2DCubismFramework.ParamArmRA = $.CubismDefaultParameterId.ParamArmRA;\n    Live2DCubismFramework.ParamArmRB = $.CubismDefaultParameterId.ParamArmRB;\n    Live2DCubismFramework.ParamBaseX = $.CubismDefaultParameterId.ParamBaseX;\n    Live2DCubismFramework.ParamBaseY = $.CubismDefaultParameterId.ParamBaseY;\n    Live2DCubismFramework.ParamBodyAngleX = $.CubismDefaultParameterId.ParamBodyAngleX;\n    Live2DCubismFramework.ParamBodyAngleY = $.CubismDefaultParameterId.ParamBodyAngleY;\n    Live2DCubismFramework.ParamBodyAngleZ = $.CubismDefaultParameterId.ParamBodyAngleZ;\n    Live2DCubismFramework.ParamBreath = $.CubismDefaultParameterId.ParamBreath;\n    Live2DCubismFramework.ParamBrowLAngle = $.CubismDefaultParameterId.ParamBrowLAngle;\n    Live2DCubismFramework.ParamBrowLForm = $.CubismDefaultParameterId.ParamBrowLForm;\n    Live2DCubismFramework.ParamBrowLX = $.CubismDefaultParameterId.ParamBrowLX;\n    Live2DCubismFramework.ParamBrowLY = $.CubismDefaultParameterId.ParamBrowLY;\n    Live2DCubismFramework.ParamBrowRAngle = $.CubismDefaultParameterId.ParamBrowRAngle;\n    Live2DCubismFramework.ParamBrowRForm = $.CubismDefaultParameterId.ParamBrowRForm;\n    Live2DCubismFramework.ParamBrowRX = $.CubismDefaultParameterId.ParamBrowRX;\n    Live2DCubismFramework.ParamBrowRY = $.CubismDefaultParameterId.ParamBrowRY;\n    Live2DCubismFramework.ParamBustX = $.CubismDefaultParameterId.ParamBustX;\n    Live2DCubismFramework.ParamBustY = $.CubismDefaultParameterId.ParamBustY;\n    Live2DCubismFramework.ParamCheek = $.CubismDefaultParameterId.ParamCheek;\n    Live2DCubismFramework.ParamEyeBallForm = $.CubismDefaultParameterId.ParamEyeBallForm;\n    Live2DCubismFramework.ParamEyeBallX = $.CubismDefaultParameterId.ParamEyeBallX;\n    Live2DCubismFramework.ParamEyeBallY = $.CubismDefaultParameterId.ParamEyeBallY;\n    Live2DCubismFramework.ParamEyeLOpen = $.CubismDefaultParameterId.ParamEyeLOpen;\n    Live2DCubismFramework.ParamEyeLSmile = $.CubismDefaultParameterId.ParamEyeLSmile;\n    Live2DCubismFramework.ParamEyeROpen = $.CubismDefaultParameterId.ParamEyeROpen;\n    Live2DCubismFramework.ParamEyeRSmile = $.CubismDefaultParameterId.ParamEyeRSmile;\n    Live2DCubismFramework.ParamHairBack = $.CubismDefaultParameterId.ParamHairBack;\n    Live2DCubismFramework.ParamHairFluffy = $.CubismDefaultParameterId.ParamHairFluffy;\n    Live2DCubismFramework.ParamHairFront = $.CubismDefaultParameterId.ParamHairFront;\n    Live2DCubismFramework.ParamHairSide = $.CubismDefaultParameterId.ParamHairSide;\n    Live2DCubismFramework.ParamHandL = $.CubismDefaultParameterId.ParamHandL;\n    Live2DCubismFramework.ParamHandR = $.CubismDefaultParameterId.ParamHandR;\n    Live2DCubismFramework.ParamMouthForm = $.CubismDefaultParameterId.ParamMouthForm;\n    Live2DCubismFramework.ParamMouthOpenY = $.CubismDefaultParameterId.ParamMouthOpenY;\n    Live2DCubismFramework.ParamNONE = $.CubismDefaultParameterId.ParamNONE;\n    Live2DCubismFramework.ParamShoulderY = $.CubismDefaultParameterId.ParamShoulderY;\n    Live2DCubismFramework.PartsArmLPrefix = $.CubismDefaultParameterId.PartsArmLPrefix;\n    Live2DCubismFramework.PartsArmPrefix = $.CubismDefaultParameterId.PartsArmPrefix;\n    Live2DCubismFramework.PartsArmRPrefix = $.CubismDefaultParameterId.PartsArmRPrefix;\n    Live2DCubismFramework.PartsIdCore = $.CubismDefaultParameterId.PartsIdCore;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class ICubismModelSetting {\n}\nimport * as $ from './icubismmodelsetting';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.ICubismModelSetting = $.ICubismModelSetting;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { ICubismModelSetting } from './icubismmodelsetting';\nimport { CubismFramework } from './live2dcubismframework';\nimport { csmVector } from './type/csmvector';\nimport { CubismJson } from './utils/cubismjson';\nexport var FrequestNode;\n(function (FrequestNode) {\n    FrequestNode[FrequestNode[\"FrequestNode_Groups\"] = 0] = \"FrequestNode_Groups\";\n    FrequestNode[FrequestNode[\"FrequestNode_Moc\"] = 1] = \"FrequestNode_Moc\";\n    FrequestNode[FrequestNode[\"FrequestNode_Motions\"] = 2] = \"FrequestNode_Motions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Expressions\"] = 3] = \"FrequestNode_Expressions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Textures\"] = 4] = \"FrequestNode_Textures\";\n    FrequestNode[FrequestNode[\"FrequestNode_Physics\"] = 5] = \"FrequestNode_Physics\";\n    FrequestNode[FrequestNode[\"FrequestNode_Pose\"] = 6] = \"FrequestNode_Pose\";\n    FrequestNode[FrequestNode[\"FrequestNode_HitAreas\"] = 7] = \"FrequestNode_HitAreas\";\n})(FrequestNode || (FrequestNode = {}));\nexport class CubismModelSettingJson extends ICubismModelSetting {\n    constructor(buffer, size) {\n        super();\n        this.version = 'Version';\n        this.fileReferences = 'FileReferences';\n        this.groups = 'Groups';\n        this.layout = 'Layout';\n        this.hitAreas = 'HitAreas';\n        this.moc = 'Moc';\n        this.textures = 'Textures';\n        this.physics = 'Physics';\n        this.pose = 'Pose';\n        this.expressions = 'Expressions';\n        this.motions = 'Motions';\n        this.userData = 'UserData';\n        this.name = 'Name';\n        this.filePath = 'File';\n        this.id = 'Id';\n        this.ids = 'Ids';\n        this.target = 'Target';\n        this.idle = 'Idle';\n        this.tapBody = 'TapBody';\n        this.pinchIn = 'PinchIn';\n        this.pinchOut = 'PinchOut';\n        this.shake = 'Shake';\n        this.flickHead = 'FlickHead';\n        this.parameter = 'Parameter';\n        this.soundPath = 'Sound';\n        this.fadeInTime = 'FadeInTime';\n        this.fadeOutTime = 'FadeOutTime';\n        this.centerX = 'CenterX';\n        this.centerY = 'CenterY';\n        this.x = 'X';\n        this.y = 'Y';\n        this.width = 'Width';\n        this.height = 'Height';\n        this.lipSync = 'LipSync';\n        this.eyeBlink = 'EyeBlink';\n        this.initParameter = 'init_param';\n        this.initPartsVisible = 'init_parts_visible';\n        this.val = 'val';\n        this._json = CubismJson.create(buffer, size);\n        if (this.getJson()) {\n            this._jsonValue = new csmVector();\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(this.groups));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.moc));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.motions));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.expressions));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.textures));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.physics));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.pose));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(this.hitAreas));\n        }\n    }\n    release() {\n        CubismJson.delete(this._json);\n        this._jsonValue = null;\n    }\n    getJson() {\n        return this._json;\n    }\n    getModelFileName() {\n        if (!this.isExistModelFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\n    }\n    getTextureCount() {\n        if (!this.isExistTextureFiles()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\n    }\n    getTextureDirectory() {\n        const texturePath = this._jsonValue\n            .at(FrequestNode.FrequestNode_Textures)\n            .getValueByIndex(0)\n            .getRawString();\n        const pathArray = texturePath.split('/');\n        const arrayLength = pathArray.length - 1;\n        let textureDirectoryStr = '';\n        for (let i = 0; i < arrayLength; i++) {\n            textureDirectoryStr += pathArray[i];\n            if (i < arrayLength - 1) {\n                textureDirectoryStr += '/';\n            }\n        }\n        return textureDirectoryStr;\n    }\n    getTextureFileName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Textures)\n            .getValueByIndex(index)\n            .getRawString();\n    }\n    getHitAreasCount() {\n        if (!this.isExistHitAreas()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\n    }\n    getHitAreaId(index) {\n        return CubismFramework.getIdManager().getId(this._jsonValue\n            .at(FrequestNode.FrequestNode_HitAreas)\n            .getValueByIndex(index)\n            .getValueByString(this.id)\n            .getRawString());\n    }\n    getHitAreaName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_HitAreas)\n            .getValueByIndex(index)\n            .getValueByString(this.name)\n            .getRawString();\n    }\n    getPhysicsFileName() {\n        if (!this.isExistPhysicsFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Physics).getRawString();\n    }\n    getPoseFileName() {\n        if (!this.isExistPoseFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\n    }\n    getExpressionCount() {\n        if (!this.isExistExpressionFile()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Expressions).getSize();\n    }\n    getExpressionName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Expressions)\n            .getValueByIndex(index)\n            .getValueByString(this.name)\n            .getRawString();\n    }\n    getExpressionFileName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Expressions)\n            .getValueByIndex(index)\n            .getValueByString(this.filePath)\n            .getRawString();\n    }\n    getMotionGroupCount() {\n        if (!this.isExistMotionGroups()) {\n            return 0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getKeys()\n            .getSize();\n    }\n    getMotionGroupName(index) {\n        if (!this.isExistMotionGroups()) {\n            return null;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getKeys()\n            .at(index);\n    }\n    getMotionCount(groupName) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return 0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getSize();\n    }\n    getMotionFileName(groupName, index) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return '';\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.filePath)\n            .getRawString();\n    }\n    getMotionSoundFileName(groupName, index) {\n        if (!this.isExistMotionSoundFile(groupName, index)) {\n            return '';\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.soundPath)\n            .getRawString();\n    }\n    getMotionFadeInTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeIn(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeInTime)\n            .toFloat();\n    }\n    getMotionFadeOutTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeOut(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeOutTime)\n            .toFloat();\n    }\n    getUserDataFile() {\n        if (!this.isExistUserDataFile()) {\n            return '';\n        }\n        return this.getJson()\n            .getRoot()\n            .getValueByString(this.fileReferences)\n            .getValueByString(this.userData)\n            .getRawString();\n    }\n    getLayoutMap(outLayoutMap) {\n        const map = this.getJson()\n            .getRoot()\n            .getValueByString(this.layout)\n            .getMap();\n        if (map == null) {\n            return false;\n        }\n        let ret = false;\n        for (const ite = map.begin(); ite.notEqual(map.end()); ite.preIncrement()) {\n            outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\n            ret = true;\n        }\n        return ret;\n    }\n    getEyeBlinkParameterCount() {\n        if (!this.isExistEyeBlinkParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.eyeBlink) {\n                num = refI.getValueByString(this.ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    getEyeBlinkParameterId(index) {\n        if (!this.isExistEyeBlinkParameters()) {\n            return null;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.eyeBlink) {\n                return CubismFramework.getIdManager().getId(refI.getValueByString(this.ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    getLipSyncParameterCount() {\n        if (!this.isExistLipSyncParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.lipSync) {\n                num = refI.getValueByString(this.ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    getLipSyncParameterId(index) {\n        if (!this.isExistLipSyncParameters()) {\n            return null;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.lipSync) {\n                return CubismFramework.getIdManager().getId(refI.getValueByString(this.ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    isExistModelFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\n        return !node.isNull() && !node.isError();\n    }\n    isExistTextureFiles() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Textures);\n        return !node.isNull() && !node.isError();\n    }\n    isExistHitAreas() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_HitAreas);\n        return !node.isNull() && !node.isError();\n    }\n    isExistPhysicsFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\n        return !node.isNull() && !node.isError();\n    }\n    isExistPoseFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\n        return !node.isNull() && !node.isError();\n    }\n    isExistExpressionFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Expressions);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionGroups() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionGroupName(groupName) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionSoundFile(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.soundPath);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionFadeIn(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeInTime);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionFadeOut(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeOutTime);\n        return !node.isNull() && !node.isError();\n    }\n    isExistUserDataFile() {\n        const node = this.getJson()\n            .getRoot()\n            .getValueByString(this.fileReferences)\n            .getValueByString(this.userData);\n        return !node.isNull() && !node.isError();\n    }\n    isExistEyeBlinkParameters() {\n        if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n            this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\n            return false;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\n            if (this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i)\n                .getValueByString(this.name)\n                .getRawString() == this.eyeBlink) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isExistLipSyncParameters() {\n        if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n            this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\n            return false;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\n            if (this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i)\n                .getValueByString(this.name)\n                .getRawString() == this.lipSync) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nimport * as $ from './cubismmodelsettingjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelSettingJson = $.CubismModelSettingJson;\n    Live2DCubismFramework.FrequestNode = $.FrequestNode;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismBreath {\n    static create() {\n        return new CubismBreath();\n    }\n    static delete(instance) {\n        if (instance != null) {\n            instance = null;\n        }\n    }\n    setParameters(breathParameters) {\n        this._breathParameters = breathParameters;\n    }\n    getParameters() {\n        return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        this._currentTime += deltaTimeSeconds;\n        const t = this._currentTime * 2.0 * Math.PI;\n        for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n            const data = this._breathParameters.at(i);\n            model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n        }\n    }\n    constructor() {\n        this._currentTime = 0.0;\n    }\n}\nexport class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n        this.parameterId = parameterId == undefined ? null : parameterId;\n        this.offset = offset == undefined ? 0.0 : offset;\n        this.peak = peak == undefined ? 0.0 : peak;\n        this.cycle = cycle == undefined ? 0.0 : cycle;\n        this.weight = weight == undefined ? 0.0 : weight;\n    }\n}\nimport * as $ from './cubismbreath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.BreathParameterData = $.BreathParameterData;\n    Live2DCubismFramework.CubismBreath = $.CubismBreath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nexport class CubismEyeBlink {\n    static create(modelSetting = null) {\n        return new CubismEyeBlink(modelSetting);\n    }\n    static delete(eyeBlink) {\n        if (eyeBlink != null) {\n            eyeBlink = null;\n        }\n    }\n    setBlinkingInterval(blinkingInterval) {\n        this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n        this._closingSeconds = closing;\n        this._closedSeconds = closed;\n        this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n        this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n        return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let parameterValue;\n        let t = 0.0;\n        const blinkingState = this._blinkingState;\n        switch (blinkingState) {\n            case EyeState.EyeState_Closing:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._closingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = EyeState.EyeState_Closed;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0 - t;\n                break;\n            case EyeState.EyeState_Closed:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._closedSeconds;\n                if (t >= 1.0) {\n                    this._blinkingState = EyeState.EyeState_Opening;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 0.0;\n                break;\n            case EyeState.EyeState_Opening:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._openingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = EyeState.EyeState_Interval;\n                    this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                }\n                parameterValue = t;\n                break;\n            case EyeState.EyeState_Interval:\n                if (this._nextBlinkingTime < this._userTimeSeconds) {\n                    this._blinkingState = EyeState.EyeState_Closing;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0;\n                break;\n            case EyeState.EyeState_First:\n            default:\n                this._blinkingState = EyeState.EyeState_Interval;\n                this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                parameterValue = 1.0;\n                break;\n        }\n        if (!CubismEyeBlink.CloseIfZero) {\n            parameterValue = -parameterValue;\n        }\n        for (let i = 0; i < this._parameterIds.getSize(); ++i) {\n            model.setParameterValueById(this._parameterIds.at(i), parameterValue);\n        }\n    }\n    constructor(modelSetting) {\n        this._blinkingState = EyeState.EyeState_First;\n        this._nextBlinkingTime = 0.0;\n        this._stateStartTimeSeconds = 0.0;\n        this._blinkingIntervalSeconds = 4.0;\n        this._closingSeconds = 0.1;\n        this._closedSeconds = 0.05;\n        this._openingSeconds = 0.15;\n        this._userTimeSeconds = 0.0;\n        this._parameterIds = new csmVector();\n        if (modelSetting == null) {\n            return;\n        }\n        for (let i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\n            this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\n        }\n    }\n    determinNextBlinkingTiming() {\n        const r = Math.random();\n        return (this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0));\n    }\n}\nCubismEyeBlink.CloseIfZero = true;\nexport var EyeState;\n(function (EyeState) {\n    EyeState[EyeState[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState[EyeState[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState[EyeState[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState[EyeState[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState[EyeState[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n})(EyeState || (EyeState = {}));\nimport * as $ from './cubismeyeblink';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismEyeBlink = $.CubismEyeBlink;\n    Live2DCubismFramework.EyeState = $.EyeState;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismJson } from '../utils/cubismjson';\nconst Epsilon = 0.001;\nconst DefaultFadeInSeconds = 0.5;\nconst FadeIn = 'FadeInTime';\nconst Link = 'Link';\nconst Groups = 'Groups';\nconst Id = 'Id';\nexport class CubismPose {\n    static create(pose3json, size) {\n        const json = CubismJson.create(pose3json, size);\n        if (!json) {\n            return null;\n        }\n        const ret = new CubismPose();\n        const root = json.getRoot();\n        if (!root.getValueByString(FadeIn).isNull()) {\n            ret._fadeTimeSeconds = root\n                .getValueByString(FadeIn)\n                .toFloat(DefaultFadeInSeconds);\n            if (ret._fadeTimeSeconds < 0.0) {\n                ret._fadeTimeSeconds = DefaultFadeInSeconds;\n            }\n        }\n        const poseListInfo = root.getValueByString(Groups);\n        const poseCount = poseListInfo.getSize();\n        for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n            const idListInfo = poseListInfo.getValueByIndex(poseIndex);\n            const idCount = idListInfo.getSize();\n            let groupCount = 0;\n            for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n                const partInfo = idListInfo.getValueByIndex(groupIndex);\n                const partData = new PartData();\n                const parameterId = CubismFramework.getIdManager().getId(partInfo.getValueByString(Id).getRawString());\n                partData.partId = parameterId;\n                if (!partInfo.getValueByString(Link).isNull()) {\n                    const linkListInfo = partInfo.getValueByString(Link);\n                    const linkCount = linkListInfo.getSize();\n                    for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n                        const linkPart = new PartData();\n                        const linkId = CubismFramework.getIdManager().getId(linkListInfo.getValueByIndex(linkIndex).getString());\n                        linkPart.partId = linkId;\n                        partData.link.pushBack(linkPart);\n                    }\n                }\n                ret._partGroups.pushBack(partData.clone());\n                ++groupCount;\n            }\n            ret._partGroupCounts.pushBack(groupCount);\n        }\n        CubismJson.delete(json);\n        return ret;\n    }\n    static delete(pose) {\n        if (pose != null) {\n            pose = null;\n        }\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        if (model != this._lastModel) {\n            this.reset(model);\n        }\n        this._lastModel = model;\n        if (deltaTimeSeconds < 0.0) {\n            deltaTimeSeconds = 0.0;\n        }\n        let beginIndex = 0;\n        for (let i = 0; i < this._partGroupCounts.getSize(); i++) {\n            const partGroupCount = this._partGroupCounts.at(i);\n            this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n            beginIndex += partGroupCount;\n        }\n        this.copyPartOpacities(model);\n    }\n    reset(model) {\n        let beginIndex = 0;\n        for (let i = 0; i < this._partGroupCounts.getSize(); ++i) {\n            const groupCount = this._partGroupCounts.at(i);\n            for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n                this._partGroups.at(j).initialize(model);\n                const partsIndex = this._partGroups.at(j).partIndex;\n                const paramIndex = this._partGroups.at(j).parameterIndex;\n                if (partsIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n                model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\n                for (let k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\n                    this._partGroups.at(j).link.at(k).initialize(model);\n                }\n            }\n            beginIndex += groupCount;\n        }\n    }\n    copyPartOpacities(model) {\n        for (let groupIndex = 0; groupIndex < this._partGroups.getSize(); ++groupIndex) {\n            const partData = this._partGroups.at(groupIndex);\n            if (partData.link.getSize() == 0) {\n                continue;\n            }\n            const partIndex = this._partGroups.at(groupIndex).partIndex;\n            const opacity = model.getPartOpacityByIndex(partIndex);\n            for (let linkIndex = 0; linkIndex < partData.link.getSize(); ++linkIndex) {\n                const linkPart = partData.link.at(linkIndex);\n                const linkPartIndex = linkPart.partIndex;\n                if (linkPartIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(linkPartIndex, opacity);\n            }\n        }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n        let visiblePartIndex = -1;\n        let newOpacity = 1.0;\n        const phi = 0.5;\n        const backOpacityThreshold = 0.15;\n        for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n            const partIndex = this._partGroups.at(i).partIndex;\n            const paramIndex = this._partGroups.at(i).parameterIndex;\n            if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n                if (visiblePartIndex >= 0) {\n                    break;\n                }\n                visiblePartIndex = i;\n                if (this._fadeTimeSeconds == 0) {\n                    newOpacity = 1.0;\n                    continue;\n                }\n                newOpacity = model.getPartOpacityByIndex(partIndex);\n                newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n                if (newOpacity > 1.0) {\n                    newOpacity = 1.0;\n                }\n            }\n        }\n        if (visiblePartIndex < 0) {\n            visiblePartIndex = 0;\n            newOpacity = 1.0;\n        }\n        for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n            const partsIndex = this._partGroups.at(i).partIndex;\n            if (visiblePartIndex == i) {\n                model.setPartOpacityByIndex(partsIndex, newOpacity);\n            }\n            else {\n                let opacity = model.getPartOpacityByIndex(partsIndex);\n                let a1;\n                if (newOpacity < phi) {\n                    a1 = (newOpacity * (phi - 1)) / phi + 1.0;\n                }\n                else {\n                    a1 = ((1 - newOpacity) * phi) / (1.0 - phi);\n                }\n                const backOpacity = (1.0 - a1) * (1.0 - newOpacity);\n                if (backOpacity > backOpacityThreshold) {\n                    a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n                }\n                if (opacity > a1) {\n                    opacity = a1;\n                }\n                model.setPartOpacityByIndex(partsIndex, opacity);\n            }\n        }\n    }\n    constructor() {\n        this._fadeTimeSeconds = DefaultFadeInSeconds;\n        this._lastModel = null;\n        this._partGroups = new csmVector();\n        this._partGroupCounts = new csmVector();\n    }\n}\nexport class PartData {\n    constructor(v) {\n        this.parameterIndex = 0;\n        this.partIndex = 0;\n        this.link = new csmVector();\n        if (v != undefined) {\n            this.partId = v.partId;\n            for (const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\n                this.link.pushBack(ite.ptr().clone());\n            }\n        }\n    }\n    assignment(v) {\n        this.partId = v.partId;\n        for (const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\n            this.link.pushBack(ite.ptr().clone());\n        }\n        return this;\n    }\n    initialize(model) {\n        this.parameterIndex = model.getParameterIndex(this.partId);\n        this.partIndex = model.getPartIndex(this.partId);\n        model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n        const clonePartData = new PartData();\n        clonePartData.partId = this.partId;\n        clonePartData.parameterIndex = this.parameterIndex;\n        clonePartData.partIndex = this.partIndex;\n        clonePartData.link = new csmVector();\n        for (let ite = this.link.begin(); ite.notEqual(this.link.end()); ite.increment()) {\n            clonePartData.link.pushBack(ite.ptr().clone());\n        }\n        return clonePartData;\n    }\n}\nimport * as $ from './cubismpose';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPose = $.CubismPose;\n    Live2DCubismFramework.PartData = $.PartData;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from './cubismmatrix44';\nexport class CubismModelMatrix extends CubismMatrix44 {\n    constructor(w, h) {\n        super();\n        this._width = w !== undefined ? w : 0.0;\n        this._height = h !== undefined ? h : 0.0;\n        this.setHeight(2.0);\n    }\n    setWidth(w) {\n        const scaleX = w / this._width;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    setHeight(h) {\n        const scaleX = h / this._height;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    setPosition(x, y) {\n        this.translate(x, y);\n    }\n    setCenterPosition(x, y) {\n        this.centerX(x);\n        this.centerY(y);\n    }\n    top(y) {\n        this.setY(y);\n    }\n    bottom(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h);\n    }\n    left(x) {\n        this.setX(x);\n    }\n    right(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w);\n    }\n    centerX(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w / 2.0);\n    }\n    setX(x) {\n        this.translateX(x);\n    }\n    centerY(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h / 2.0);\n    }\n    setY(y) {\n        this.translateY(y);\n    }\n    setupFromLayout(layout) {\n        const keyWidth = 'width';\n        const keyHeight = 'height';\n        const keyX = 'x';\n        const keyY = 'y';\n        const keyCenterX = 'center_x';\n        const keyCenterY = 'center_y';\n        const keyTop = 'top';\n        const keyBottom = 'bottom';\n        const keyLeft = 'left';\n        const keyRight = 'right';\n        for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyWidth) {\n                this.setWidth(value);\n            }\n            else if (key == keyHeight) {\n                this.setHeight(value);\n            }\n        }\n        for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyX) {\n                this.setX(value);\n            }\n            else if (key == keyY) {\n                this.setY(value);\n            }\n            else if (key == keyCenterX) {\n                this.centerX(value);\n            }\n            else if (key == keyCenterY) {\n                this.centerY(value);\n            }\n            else if (key == keyTop) {\n                this.top(value);\n            }\n            else if (key == keyBottom) {\n                this.bottom(value);\n            }\n            else if (key == keyLeft) {\n                this.left(value);\n            }\n            else if (key == keyRight) {\n                this.right(value);\n            }\n        }\n    }\n}\nimport * as $ from './cubismmodelmatrix';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelMatrix = $.CubismModelMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismVector2 {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.x = x == undefined ? 0.0 : x;\n        this.y = y == undefined ? 0.0 : y;\n    }\n    add(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x + vector2.x;\n        ret.y = this.y + vector2.y;\n        return ret;\n    }\n    substract(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x - vector2.x;\n        ret.y = this.y - vector2.y;\n        return ret;\n    }\n    multiply(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x * vector2.x;\n        ret.y = this.y * vector2.y;\n        return ret;\n    }\n    multiplyByScaler(scalar) {\n        return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x / vector2.x;\n        ret.y = this.y / vector2.y;\n        return ret;\n    }\n    divisionByScalar(scalar) {\n        return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n        return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n        return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n        const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n        this.x = this.x / length;\n        this.y = this.y / length;\n    }\n    isEqual(rhs) {\n        return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n        return !this.isEqual(rhs);\n    }\n}\nimport * as $ from './cubismvector2';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismVector2 = $.CubismVector2;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismVector2 } from './cubismvector2';\nexport class CubismMath {\n    static range(value, min, max) {\n        if (value < min) {\n            value = min;\n        }\n        else if (value > max) {\n            value = max;\n        }\n        return value;\n    }\n    static sin(x) {\n        return Math.sin(x);\n    }\n    static cos(x) {\n        return Math.cos(x);\n    }\n    static abs(x) {\n        return Math.abs(x);\n    }\n    static sqrt(x) {\n        return Math.sqrt(x);\n    }\n    static cbrt(x) {\n        if (x === 0) {\n            return x;\n        }\n        let cx = x;\n        const isNegativeNumber = cx < 0;\n        if (isNegativeNumber) {\n            cx = -cx;\n        }\n        let ret;\n        if (cx === Infinity) {\n            ret = Infinity;\n        }\n        else {\n            ret = Math.exp(Math.log(cx) / 3);\n            ret = (cx / (ret * ret) + 2 * ret) / 3;\n        }\n        return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n        if (value < 0.0) {\n            return 0.0;\n        }\n        else if (value > 1.0) {\n            return 1.0;\n        }\n        return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n        return left > right ? left : right;\n    }\n    static min(left, right) {\n        return left > right ? right : left;\n    }\n    static clamp(val, min, max) {\n        if (val < min) {\n            return min;\n        }\n        else if (max < val) {\n            return max;\n        }\n        return val;\n    }\n    static degreesToRadian(degrees) {\n        return (degrees / 180.0) * Math.PI;\n    }\n    static radianToDegrees(radian) {\n        return (radian * 180.0) / Math.PI;\n    }\n    static directionToRadian(from, to) {\n        const q1 = Math.atan2(to.y, to.x);\n        const q2 = Math.atan2(from.y, from.x);\n        let ret = q1 - q2;\n        while (ret < -Math.PI) {\n            ret += Math.PI * 2.0;\n        }\n        while (ret > Math.PI) {\n            ret -= Math.PI * 2.0;\n        }\n        return ret;\n    }\n    static directionToDegrees(from, to) {\n        const radian = this.directionToRadian(from, to);\n        let degree = this.radianToDegrees(radian);\n        if (to.x - from.x > 0.0) {\n            degree = -degree;\n        }\n        return degree;\n    }\n    static radianToDirection(totalAngle) {\n        const ret = new CubismVector2();\n        ret.x = this.sin(totalAngle);\n        ret.y = this.cos(totalAngle);\n        return ret;\n    }\n    static quadraticEquation(a, b, c) {\n        if (this.abs(a) < CubismMath.Epsilon) {\n            if (this.abs(b) < CubismMath.Epsilon) {\n                return -c;\n            }\n            return -c / b;\n        }\n        return -(b + this.sqrt(b * b - 4.0 * a * c)) / (2.0 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n        if (this.abs(a) < CubismMath.Epsilon) {\n            return this.range(this.quadraticEquation(b, c, d), 0.0, 1.0);\n        }\n        const ba = b / a;\n        const ca = c / a;\n        const da = d / a;\n        const p = (3.0 * ca - ba * ba) / 3.0;\n        const p3 = p / 3.0;\n        const q = (2.0 * ba * ba * ba - 9.0 * ba * ca + 27.0 * da) / 27.0;\n        const q2 = q / 2.0;\n        const discriminant = q2 * q2 + p3 * p3 * p3;\n        const center = 0.5;\n        const threshold = center + 0.01;\n        if (discriminant < 0.0) {\n            const mp3 = -p / 3.0;\n            const mp33 = mp3 * mp3 * mp3;\n            const r = this.sqrt(mp33);\n            const t = -q / (2.0 * r);\n            const cosphi = this.range(t, -1.0, 1.0);\n            const phi = Math.acos(cosphi);\n            const crtr = this.cbrt(r);\n            const t1 = 2.0 * crtr;\n            const root1 = t1 * this.cos(phi / 3.0) - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = t1 * this.cos((phi + 2.0 * Math.PI) / 3.0) - ba / 3.0;\n            if (this.abs(root2 - center) < threshold) {\n                return this.range(root2, 0.0, 1.0);\n            }\n            const root3 = t1 * this.cos((phi + 4.0 * Math.PI) / 3.0) - ba / 3.0;\n            return this.range(root3, 0.0, 1.0);\n        }\n        if (discriminant == 0.0) {\n            let u1;\n            if (q2 < 0.0) {\n                u1 = this.cbrt(-q2);\n            }\n            else {\n                u1 = -this.cbrt(q2);\n            }\n            const root1 = 2.0 * u1 - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = -u1 - ba / 3.0;\n            return this.range(root2, 0.0, 1.0);\n        }\n        const sd = this.sqrt(discriminant);\n        const u1 = this.cbrt(sd - q2);\n        const v1 = this.cbrt(sd + q2);\n        const root1 = u1 - v1 - ba / 3.0;\n        return this.range(root1, 0.0, 1.0);\n    }\n    static mod(dividend, divisor) {\n        if (!isFinite(dividend) ||\n            divisor === 0 ||\n            isNaN(dividend) ||\n            isNaN(divisor)) {\n            console.warn(`divided: ${dividend}, divisor: ${divisor} mod() returns 'NaN'.`);\n            return NaN;\n        }\n        const absDividend = Math.abs(dividend);\n        const absDivisor = Math.abs(divisor);\n        let result = absDividend - Math.floor(absDividend / absDivisor) * absDivisor;\n        result *= Math.sign(dividend);\n        return result;\n    }\n    constructor() { }\n}\nCubismMath.Epsilon = 0.00001;\nimport * as $ from './cubismmath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMath = $.CubismMath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from './cubismmath';\nconst FrameRate = 30;\nconst Epsilon = 0.01;\nexport class CubismTargetPoint {\n    constructor() {\n        this._faceTargetX = 0.0;\n        this._faceTargetY = 0.0;\n        this._faceX = 0.0;\n        this._faceY = 0.0;\n        this._faceVX = 0.0;\n        this._faceVY = 0.0;\n        this._lastTimeSeconds = 0.0;\n        this._userTimeSeconds = 0.0;\n    }\n    update(deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        const faceParamMaxV = 40.0 / 10.0;\n        const maxV = (faceParamMaxV * 1.0) / FrameRate;\n        if (this._lastTimeSeconds == 0.0) {\n            this._lastTimeSeconds = this._userTimeSeconds;\n            return;\n        }\n        const deltaTimeWeight = (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\n        this._lastTimeSeconds = this._userTimeSeconds;\n        const timeToMaxSpeed = 0.15;\n        const frameToMaxSpeed = timeToMaxSpeed * FrameRate;\n        const maxA = (deltaTimeWeight * maxV) / frameToMaxSpeed;\n        const dx = this._faceTargetX - this._faceX;\n        const dy = this._faceTargetY - this._faceY;\n        if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\n            return;\n        }\n        const d = CubismMath.sqrt(dx * dx + dy * dy);\n        const vx = (maxV * dx) / d;\n        const vy = (maxV * dy) / d;\n        let ax = vx - this._faceVX;\n        let ay = vy - this._faceVY;\n        const a = CubismMath.sqrt(ax * ax + ay * ay);\n        if (a < -maxA || a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n        this._faceVX += ax;\n        this._faceVY += ay;\n        {\n            const maxV = 0.5 *\n                (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\n                    maxA);\n            const curV = CubismMath.sqrt(this._faceVX * this._faceVX + this._faceVY * this._faceVY);\n            if (curV > maxV) {\n                this._faceVX *= maxV / curV;\n                this._faceVY *= maxV / curV;\n            }\n        }\n        this._faceX += this._faceVX;\n        this._faceY += this._faceVY;\n    }\n    getX() {\n        return this._faceX;\n    }\n    getY() {\n        return this._faceY;\n    }\n    set(x, y) {\n        this._faceTargetX = x;\n        this._faceTargetY = y;\n    }\n}\nimport * as $ from './cubismtargetpoint';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismTargetPoint = $.CubismTargetPoint;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from '../math/cubismmath';\nimport { csmVector } from '../type/csmvector';\nimport { CSM_ASSERT, CubismDebug } from '../utils/cubismdebug';\nexport class ACubismMotion {\n    static delete(motion) {\n        motion.release();\n        motion = null;\n    }\n    constructor() {\n        this.setBeganMotionHandler = (onBeganMotionHandler) => (this._onBeganMotion = onBeganMotionHandler);\n        this.getBeganMotionHandler = () => this._onBeganMotion;\n        this.setFinishedMotionHandler = (onFinishedMotionHandler) => (this._onFinishedMotion = onFinishedMotionHandler);\n        this.getFinishedMotionHandler = () => this._onFinishedMotion;\n        this._fadeInSeconds = -1.0;\n        this._fadeOutSeconds = -1.0;\n        this._weight = 1.0;\n        this._offsetSeconds = 0.0;\n        this._isLoop = false;\n        this._isLoopFadeIn = true;\n        this._previousLoopState = this._isLoop;\n        this._firedEventValues = new csmVector();\n    }\n    release() {\n        this._weight = 0.0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n        if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n            return;\n        }\n        this.setupMotionQueueEntry(motionQueueEntry, userTimeSeconds);\n        const fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n        if (motionQueueEntry.getEndTime() > 0 &&\n            motionQueueEntry.getEndTime() < userTimeSeconds) {\n            motionQueueEntry.setIsFinished(true);\n        }\n    }\n    setupMotionQueueEntry(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null || motionQueueEntry.isStarted()) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        if (motionQueueEntry.getEndTime() < 0.0) {\n            this.adjustEndTime(motionQueueEntry);\n        }\n        if (motionQueueEntry._motion._onBeganMotion) {\n            motionQueueEntry._motion._onBeganMotion(motionQueueEntry._motion);\n        }\n    }\n    updateFadeWeight(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null) {\n            CubismDebug.print(LogLevel.LogLevel_Error, 'motionQueueEntry is null.');\n        }\n        let fadeWeight = this._weight;\n        const fadeIn = this._fadeInSeconds == 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds);\n        const fadeOut = this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds);\n        fadeWeight = fadeWeight * fadeIn * fadeOut;\n        motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n        CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\n        return fadeWeight;\n    }\n    setFadeInTime(fadeInSeconds) {\n        this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n        return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n        return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n        this._weight = weight;\n    }\n    getWeight() {\n        return this._weight;\n    }\n    getDuration() {\n        return -1.0;\n    }\n    getLoopDuration() {\n        return -1.0;\n    }\n    setOffsetTime(offsetSeconds) {\n        this._offsetSeconds = offsetSeconds;\n    }\n    setLoop(loop) {\n        this._isLoop = loop;\n    }\n    getLoop() {\n        return this._isLoop;\n    }\n    setLoopFadeIn(loopFadeIn) {\n        this._isLoopFadeIn = loopFadeIn;\n    }\n    getLoopFadeIn() {\n        return this._isLoopFadeIn;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        return this._firedEventValues;\n    }\n    isExistModelOpacity() {\n        return false;\n    }\n    getModelOpacityIndex() {\n        return -1;\n    }\n    getModelOpacityId(index) {\n        return null;\n    }\n    getModelOpacityValue() {\n        return 1.0;\n    }\n    adjustEndTime(motionQueueEntry) {\n        const duration = this.getDuration();\n        const endTime = duration <= 0.0 ? -1 : motionQueueEntry.getStartTime() + duration;\n        motionQueueEntry.setEndTime(endTime);\n    }\n}\nimport * as $ from './acubismmotion';\nimport { LogLevel } from '../live2dcubismframework';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.ACubismMotion = $.ACubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismJson } from '../utils/cubismjson';\nimport { ACubismMotion } from './acubismmotion';\nconst ExpressionKeyFadeIn = 'FadeInTime';\nconst ExpressionKeyFadeOut = 'FadeOutTime';\nconst ExpressionKeyParameters = 'Parameters';\nconst ExpressionKeyId = 'Id';\nconst ExpressionKeyValue = 'Value';\nconst ExpressionKeyBlend = 'Blend';\nconst BlendValueAdd = 'Add';\nconst BlendValueMultiply = 'Multiply';\nconst BlendValueOverwrite = 'Overwrite';\nconst DefaultFadeTime = 1.0;\nexport class CubismExpressionMotion extends ACubismMotion {\n    static create(buffer, size) {\n        const expression = new CubismExpressionMotion();\n        expression.parse(buffer, size);\n        return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n        for (let i = 0; i < this._parameters.getSize(); ++i) {\n            const parameter = this._parameters.at(i);\n            switch (parameter.blendType) {\n                case ExpressionBlendType.Additive: {\n                    model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                case ExpressionBlendType.Multiply: {\n                    model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                case ExpressionBlendType.Overwrite: {\n                    model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n    }\n    calculateExpressionParameters(model, userTimeSeconds, motionQueueEntry, expressionParameterValues, expressionIndex, fadeWeight) {\n        if (motionQueueEntry == null || expressionParameterValues == null) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        this._fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        for (let i = 0; i < expressionParameterValues.getSize(); ++i) {\n            const expressionParameterValue = expressionParameterValues.at(i);\n            if (expressionParameterValue.parameterId == null) {\n                continue;\n            }\n            const currentParameterValue = (expressionParameterValue.overwriteValue =\n                model.getParameterValueById(expressionParameterValue.parameterId));\n            const expressionParameters = this.getExpressionParameters();\n            let parameterIndex = -1;\n            for (let j = 0; j < expressionParameters.getSize(); ++j) {\n                if (expressionParameterValue.parameterId !=\n                    expressionParameters.at(j).parameterId) {\n                    continue;\n                }\n                parameterIndex = j;\n                break;\n            }\n            if (parameterIndex < 0) {\n                if (expressionIndex == 0) {\n                    expressionParameterValue.additiveValue =\n                        CubismExpressionMotion.DefaultAdditiveValue;\n                    expressionParameterValue.multiplyValue =\n                        CubismExpressionMotion.DefaultMultiplyValue;\n                    expressionParameterValue.overwriteValue = currentParameterValue;\n                }\n                else {\n                    expressionParameterValue.additiveValue = this.calculateValue(expressionParameterValue.additiveValue, CubismExpressionMotion.DefaultAdditiveValue, fadeWeight);\n                    expressionParameterValue.multiplyValue = this.calculateValue(expressionParameterValue.multiplyValue, CubismExpressionMotion.DefaultMultiplyValue, fadeWeight);\n                    expressionParameterValue.overwriteValue = this.calculateValue(expressionParameterValue.overwriteValue, currentParameterValue, fadeWeight);\n                }\n                continue;\n            }\n            const value = expressionParameters.at(parameterIndex).value;\n            let newAdditiveValue, newMultiplyValue, newOverwriteValue;\n            switch (expressionParameters.at(parameterIndex).blendType) {\n                case ExpressionBlendType.Additive:\n                    newAdditiveValue = value;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case ExpressionBlendType.Multiply:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = value;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case ExpressionBlendType.Overwrite:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = value;\n                    break;\n                default:\n                    return;\n            }\n            if (expressionIndex == 0) {\n                expressionParameterValue.additiveValue = newAdditiveValue;\n                expressionParameterValue.multiplyValue = newMultiplyValue;\n                expressionParameterValue.overwriteValue = newOverwriteValue;\n            }\n            else {\n                expressionParameterValue.additiveValue =\n                    expressionParameterValue.additiveValue * (1.0 - fadeWeight) +\n                        newAdditiveValue * fadeWeight;\n                expressionParameterValue.multiplyValue =\n                    expressionParameterValue.multiplyValue * (1.0 - fadeWeight) +\n                        newMultiplyValue * fadeWeight;\n                expressionParameterValue.overwriteValue =\n                    expressionParameterValue.overwriteValue * (1.0 - fadeWeight) +\n                        newOverwriteValue * fadeWeight;\n            }\n        }\n    }\n    getExpressionParameters() {\n        return this._parameters;\n    }\n    getFadeWeight() {\n        return this._fadeWeight;\n    }\n    parse(buffer, size) {\n        const json = CubismJson.create(buffer, size);\n        if (!json) {\n            return;\n        }\n        const root = json.getRoot();\n        this.setFadeInTime(root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime));\n        this.setFadeOutTime(root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime));\n        const parameterCount = root\n            .getValueByString(ExpressionKeyParameters)\n            .getSize();\n        this._parameters.prepareCapacity(parameterCount);\n        for (let i = 0; i < parameterCount; ++i) {\n            const param = root\n                .getValueByString(ExpressionKeyParameters)\n                .getValueByIndex(i);\n            const parameterId = CubismFramework.getIdManager().getId(param.getValueByString(ExpressionKeyId).getRawString());\n            const value = param\n                .getValueByString(ExpressionKeyValue)\n                .toFloat();\n            let blendType;\n            if (param.getValueByString(ExpressionKeyBlend).isNull() ||\n                param.getValueByString(ExpressionKeyBlend).getString() == BlendValueAdd) {\n                blendType = ExpressionBlendType.Additive;\n            }\n            else if (param.getValueByString(ExpressionKeyBlend).getString() ==\n                BlendValueMultiply) {\n                blendType = ExpressionBlendType.Multiply;\n            }\n            else if (param.getValueByString(ExpressionKeyBlend).getString() ==\n                BlendValueOverwrite) {\n                blendType = ExpressionBlendType.Overwrite;\n            }\n            else {\n                blendType = ExpressionBlendType.Additive;\n            }\n            const item = new ExpressionParameter();\n            item.parameterId = parameterId;\n            item.blendType = blendType;\n            item.value = value;\n            this._parameters.pushBack(item);\n        }\n        CubismJson.delete(json);\n    }\n    calculateValue(source, destination, fadeWeight) {\n        return source * (1.0 - fadeWeight) + destination * fadeWeight;\n    }\n    constructor() {\n        super();\n        this._parameters = new csmVector();\n        this._fadeWeight = 0.0;\n    }\n}\nCubismExpressionMotion.DefaultAdditiveValue = 0.0;\nCubismExpressionMotion.DefaultMultiplyValue = 1.0;\nexport var ExpressionBlendType;\n(function (ExpressionBlendType) {\n    ExpressionBlendType[ExpressionBlendType[\"Additive\"] = 0] = \"Additive\";\n    ExpressionBlendType[ExpressionBlendType[\"Multiply\"] = 1] = \"Multiply\";\n    ExpressionBlendType[ExpressionBlendType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(ExpressionBlendType || (ExpressionBlendType = {}));\nexport class ExpressionParameter {\n}\nimport * as $ from './cubismexpressionmotion';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotion = $.CubismExpressionMotion;\n    Live2DCubismFramework.ExpressionBlendType = $.ExpressionBlendType;\n    Live2DCubismFramework.ExpressionParameter = $.ExpressionParameter;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { ACubismMotion } from './acubismmotion';\nexport class CubismMotionQueueEntry {\n    constructor() {\n        this._autoDelete = false;\n        this._motion = null;\n        this._available = true;\n        this._finished = false;\n        this._started = false;\n        this._startTimeSeconds = -1.0;\n        this._fadeInStartTimeSeconds = 0.0;\n        this._endTimeSeconds = -1.0;\n        this._stateTimeSeconds = 0.0;\n        this._stateWeight = 0.0;\n        this._lastEventCheckSeconds = 0.0;\n        this._motionQueueEntryHandle = this;\n        this._fadeOutSeconds = 0.0;\n        this._isTriggeredFadeOut = false;\n    }\n    release() {\n        if (this._autoDelete && this._motion) {\n            ACubismMotion.delete(this._motion);\n        }\n    }\n    setFadeOut(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n        const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n        if (this._endTimeSeconds < 0.0 ||\n            newEndTimeSeconds < this._endTimeSeconds) {\n            this._endTimeSeconds = newEndTimeSeconds;\n        }\n    }\n    isFinished() {\n        return this._finished;\n    }\n    isStarted() {\n        return this._started;\n    }\n    getStartTime() {\n        return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n        return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n        return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n        this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n        this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n        this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n        this._finished = f;\n    }\n    setIsStarted(f) {\n        this._started = f;\n    }\n    isAvailable() {\n        return this._available;\n    }\n    setIsAvailable(v) {\n        this._available = v;\n    }\n    setState(timeSeconds, weight) {\n        this._stateTimeSeconds = timeSeconds;\n        this._stateWeight = weight;\n    }\n    getStateTime() {\n        return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n        return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n        return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n        this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n        return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n        return this._fadeOutSeconds;\n    }\n    getCubismMotion() {\n        return this._motion;\n    }\n}\nimport * as $ from './cubismmotionqueueentry';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueEntry = $.CubismMotionQueueEntry;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMotionQueueEntry } from './cubismmotionqueueentry';\nimport { csmVector } from '../type/csmvector';\nexport class CubismMotionQueueManager {\n    constructor() {\n        this._userTimeSeconds = 0.0;\n        this._eventCallBack = null;\n        this._eventCustomData = null;\n        this._motions = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._motions.getSize(); ++i) {\n            if (this._motions.at(i)) {\n                this._motions.at(i).release();\n                this._motions.set(i, null);\n            }\n        }\n        this._motions = null;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n        if (motion == null) {\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        let motionQueueEntry = null;\n        for (let i = 0; i < this._motions.getSize(); ++i) {\n            motionQueueEntry = this._motions.at(i);\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n        }\n        motionQueueEntry = new CubismMotionQueueEntry();\n        motionQueueEntry._autoDelete = autoDelete;\n        motionQueueEntry._motion = motion;\n        this._motions.pushBack(motionQueueEntry);\n        return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            if (!motionQueueEntry.isFinished()) {\n                return false;\n            }\n            else {\n                ite.preIncrement();\n            }\n        }\n        return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.increment()) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\n                !motionQueueEntry.isFinished()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    stopAllMotions() {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            motionQueueEntry.release();\n            motionQueueEntry = null;\n            ite = this._motions.erase(ite);\n        }\n    }\n    getCubismMotionQueueEntries() {\n        return this._motions;\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.preIncrement()) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\n                return motionQueueEntry;\n            }\n        }\n        return null;\n    }\n    setEventCallback(callback, customData = null) {\n        this._eventCallBack = callback;\n        this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n        let updated = false;\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n            updated = true;\n            const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() -\n                motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n            for (let i = 0; i < firedList.getSize(); ++i) {\n                this._eventCallBack(this, firedList.at(i), this._eventCustomData);\n            }\n            motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n            if (motionQueueEntry.isFinished()) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n            }\n            else {\n                if (motionQueueEntry.isTriggeredFadeOut()) {\n                    motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n                }\n                ite.preIncrement();\n            }\n        }\n        return updated;\n    }\n}\nexport const InvalidMotionQueueEntryHandleValue = -1;\nimport * as $ from './cubismmotionqueuemanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueManager = $.CubismMotionQueueManager;\n    Live2DCubismFramework.InvalidMotionQueueEntryHandleValue = $.InvalidMotionQueueEntryHandleValue;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmDelete } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismExpressionMotion } from './cubismexpressionmotion';\nimport { CubismMotionQueueManager } from './cubismmotionqueuemanager';\nimport { CubismLogInfo } from '../utils/cubismdebug';\nexport class ExpressionParameterValue {\n}\nexport class CubismExpressionMotionManager extends CubismMotionQueueManager {\n    constructor() {\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n        this._expressionParameterValues = new csmVector();\n        this._fadeWeights = new csmVector();\n    }\n    release() {\n        if (this._expressionParameterValues) {\n            csmDelete(this._expressionParameterValues);\n            this._expressionParameterValues = null;\n        }\n        if (this._fadeWeights) {\n            csmDelete(this._fadeWeights);\n            this._fadeWeights = null;\n        }\n    }\n    getCurrentPriority() {\n        CubismLogInfo('CubismExpressionMotionManager.getCurrentPriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        return this._currentPriority;\n    }\n    getReservePriority() {\n        CubismLogInfo('CubismExpressionMotionManager.getReservePriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        return this._reservePriority;\n    }\n    getFadeWeight(index) {\n        if (index < 0 ||\n            this._fadeWeights.getSize() < 1 ||\n            index >= this._fadeWeights.getSize()) {\n            console.warn('Failed to get the fade weight value. The element at that index does not exist.');\n            return -1;\n        }\n        return this._fadeWeights.at(index);\n    }\n    setFadeWeight(index, expressionFadeWeight) {\n        if (index < 0 ||\n            this._fadeWeights.getSize() < 1 ||\n            this._fadeWeights.getSize() <= index) {\n            console.warn('Failed to set the fade weight value. The element at that index does not exist.');\n            return;\n        }\n        this._fadeWeights.set(index, expressionFadeWeight);\n    }\n    setReservePriority(priority) {\n        CubismLogInfo('CubismExpressionMotionManager.setReservePriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        this._reservePriority = priority;\n    }\n    startMotionPriority(motion, autoDelete, priority) {\n        CubismLogInfo('CubismExpressionMotionManager.startMotionPriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        if (priority == this.getReservePriority()) {\n            this.setReservePriority(0);\n        }\n        this._currentPriority = priority;\n        return this.startMotion(motion, autoDelete);\n    }\n    updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let updated = false;\n        const motions = this.getCubismMotionQueueEntries();\n        let expressionWeight = 0.0;\n        let expressionIndex = 0;\n        if (this._fadeWeights.getSize() !== motions.getSize()) {\n            const difference = motions.getSize() - this._fadeWeights.getSize();\n            for (let i = 0; i < difference; i++) {\n                this._fadeWeights.pushBack(0.0);\n            }\n        }\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = motions.erase(ite);\n                continue;\n            }\n            const expressionMotion = (motionQueueEntry.getCubismMotion());\n            if (expressionMotion == null) {\n                csmDelete(motionQueueEntry);\n                ite = motions.erase(ite);\n                continue;\n            }\n            const expressionParameters = expressionMotion.getExpressionParameters();\n            if (motionQueueEntry.isAvailable()) {\n                for (let i = 0; i < expressionParameters.getSize(); ++i) {\n                    if (expressionParameters.at(i).parameterId == null) {\n                        continue;\n                    }\n                    let index = -1;\n                    for (let j = 0; j < this._expressionParameterValues.getSize(); ++j) {\n                        if (this._expressionParameterValues.at(j).parameterId !=\n                            expressionParameters.at(i).parameterId) {\n                            continue;\n                        }\n                        index = j;\n                        break;\n                    }\n                    if (index >= 0) {\n                        continue;\n                    }\n                    const item = new ExpressionParameterValue();\n                    item.parameterId = expressionParameters.at(i).parameterId;\n                    item.additiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    item.multiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    item.overwriteValue = model.getParameterValueById(item.parameterId);\n                    this._expressionParameterValues.pushBack(item);\n                }\n            }\n            expressionMotion.setupMotionQueueEntry(motionQueueEntry, this._userTimeSeconds);\n            this.setFadeWeight(expressionIndex, expressionMotion.updateFadeWeight(motionQueueEntry, this._userTimeSeconds));\n            expressionMotion.calculateExpressionParameters(model, this._userTimeSeconds, motionQueueEntry, this._expressionParameterValues, expressionIndex, this.getFadeWeight(expressionIndex));\n            expressionWeight +=\n                expressionMotion.getFadeInTime() == 0.0\n                    ? 1.0\n                    : CubismMath.getEasingSine((this._userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                        expressionMotion.getFadeInTime());\n            updated = true;\n            if (motionQueueEntry.isTriggeredFadeOut()) {\n                motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), this._userTimeSeconds);\n            }\n            ite.preIncrement();\n            ++expressionIndex;\n        }\n        if (motions.getSize() > 1) {\n            const latestFadeWeight = this.getFadeWeight(this._fadeWeights.getSize() - 1);\n            if (latestFadeWeight >= 1.0) {\n                for (let i = motions.getSize() - 2; i >= 0; --i) {\n                    const motionQueueEntry = motions.at(i);\n                    csmDelete(motionQueueEntry);\n                    motions.remove(i);\n                    this._fadeWeights.remove(i);\n                }\n            }\n        }\n        if (expressionWeight > 1.0) {\n            expressionWeight = 1.0;\n        }\n        for (let i = 0; i < this._expressionParameterValues.getSize(); ++i) {\n            const expressionParameterValue = this._expressionParameterValues.at(i);\n            model.setParameterValueById(expressionParameterValue.parameterId, (expressionParameterValue.overwriteValue +\n                expressionParameterValue.additiveValue) *\n                expressionParameterValue.multiplyValue, expressionWeight);\n            expressionParameterValue.additiveValue =\n                CubismExpressionMotion.DefaultAdditiveValue;\n            expressionParameterValue.multiplyValue =\n                CubismExpressionMotion.DefaultMultiplyValue;\n        }\n        return updated;\n    }\n}\nimport * as $ from './cubismexpressionmotionmanager';\nimport { CubismMath } from '../math/cubismmath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotionManager = $.CubismExpressionMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nexport var CubismMotionCurveTarget;\n(function (CubismMotionCurveTarget) {\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n})(CubismMotionCurveTarget || (CubismMotionCurveTarget = {}));\nexport var CubismMotionSegmentType;\n(function (CubismMotionSegmentType) {\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n})(CubismMotionSegmentType || (CubismMotionSegmentType = {}));\nexport class CubismMotionPoint {\n    constructor() {\n        this.time = 0.0;\n        this.value = 0.0;\n    }\n}\nexport class CubismMotionSegment {\n    constructor() {\n        this.evaluate = null;\n        this.basePointIndex = 0;\n        this.segmentType = 0;\n    }\n}\nexport class CubismMotionCurve {\n    constructor() {\n        this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n        this.segmentCount = 0;\n        this.baseSegmentIndex = 0;\n        this.fadeInTime = 0.0;\n        this.fadeOutTime = 0.0;\n    }\n}\nexport class CubismMotionEvent {\n    constructor() {\n        this.fireTime = 0.0;\n    }\n}\nexport class CubismMotionData {\n    constructor() {\n        this.duration = 0.0;\n        this.loop = false;\n        this.curveCount = 0;\n        this.eventCount = 0;\n        this.fps = 0.0;\n        this.curves = new csmVector();\n        this.segments = new csmVector();\n        this.points = new csmVector();\n        this.events = new csmVector();\n    }\n}\nimport * as $ from './cubismmotioninternal';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionCurve = $.CubismMotionCurve;\n    Live2DCubismFramework.CubismMotionCurveTarget = $.CubismMotionCurveTarget;\n    Live2DCubismFramework.CubismMotionData = $.CubismMotionData;\n    Live2DCubismFramework.CubismMotionEvent = $.CubismMotionEvent;\n    Live2DCubismFramework.CubismMotionPoint = $.CubismMotionPoint;\n    Live2DCubismFramework.CubismMotionSegment = $.CubismMotionSegment;\n    Live2DCubismFramework.CubismMotionSegmentType = $.CubismMotionSegmentType;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { CSM_ASSERT, CubismLogWarning } from '../utils/cubismdebug';\nimport { CubismJson } from '../utils/cubismjson';\nimport { CubismMotionSegmentType } from './cubismmotioninternal';\nconst Meta = 'Meta';\nconst Duration = 'Duration';\nconst Loop = 'Loop';\nconst AreBeziersRestricted = 'AreBeziersRestricted';\nconst CurveCount = 'CurveCount';\nconst Fps = 'Fps';\nconst TotalSegmentCount = 'TotalSegmentCount';\nconst TotalPointCount = 'TotalPointCount';\nconst Curves = 'Curves';\nconst Target = 'Target';\nconst Id = 'Id';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\nconst Segments = 'Segments';\nconst UserData = 'UserData';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst Time = 'Time';\nconst Value = 'Value';\nexport class CubismMotionJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getMotionDuration() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Duration)\n            .toFloat();\n    }\n    isMotionLoop() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Loop)\n            .toBoolean();\n    }\n    hasConsistency() {\n        let result = true;\n        if (!this._json || !this._json.getRoot()) {\n            return false;\n        }\n        const actualCurveListSize = this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getVector()\n            .getSize();\n        let actualTotalSegmentCount = 0;\n        let actualTotalPointCount = 0;\n        for (let curvePosition = 0; curvePosition < actualCurveListSize; ++curvePosition) {\n            for (let segmentPosition = 0; segmentPosition < this.getMotionCurveSegmentCount(curvePosition);) {\n                if (segmentPosition == 0) {\n                    actualTotalPointCount += 1;\n                    segmentPosition += 2;\n                }\n                const segment = this.getMotionCurveSegment(curvePosition, segmentPosition);\n                switch (segment) {\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n                        actualTotalPointCount += 3;\n                        segmentPosition += 7;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    default:\n                        CSM_ASSERT(0);\n                        break;\n                }\n                ++actualTotalSegmentCount;\n            }\n        }\n        if (actualCurveListSize != this.getMotionCurveCount()) {\n            CubismLogWarning('The number of curves does not match the metadata.');\n            result = false;\n        }\n        if (actualTotalSegmentCount != this.getMotionTotalSegmentCount()) {\n            CubismLogWarning('The number of segment does not match the metadata.');\n            result = false;\n        }\n        if (actualTotalPointCount != this.getMotionTotalPointCount()) {\n            CubismLogWarning('The number of point does not match the metadata.');\n            result = false;\n        }\n        return result;\n    }\n    getEvaluationOptionFlag(flagType) {\n        if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n            return this._json\n                .getRoot()\n                .getValueByString(Meta)\n                .getValueByString(AreBeziersRestricted)\n                .toBoolean();\n        }\n        return false;\n    }\n    getMotionCurveCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(CurveCount)\n            .toInt();\n    }\n    getMotionFps() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Fps)\n            .toFloat();\n    }\n    getMotionTotalSegmentCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalSegmentCount)\n            .toInt();\n    }\n    getMotionTotalPointCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalPointCount)\n            .toInt();\n    }\n    isExistMotionFadeInTime() {\n        return !this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeInTime)\n            .isNull();\n    }\n    isExistMotionFadeOutTime() {\n        return !this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeOutTime)\n            .isNull();\n    }\n    getMotionFadeInTime() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeInTime)\n            .toFloat();\n    }\n    getMotionFadeOutTime() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeOutTime)\n            .toFloat();\n    }\n    getMotionCurveTarget(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Target)\n            .getRawString();\n    }\n    getMotionCurveId(curveIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    isExistMotionCurveFadeInTime(curveIndex) {\n        return !this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeInTime)\n            .isNull();\n    }\n    isExistMotionCurveFadeOutTime(curveIndex) {\n        return !this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeOutTime)\n            .isNull();\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeInTime)\n            .toFloat();\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeOutTime)\n            .toFloat();\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Segments)\n            .getVector()\n            .getSize();\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Segments)\n            .getValueByIndex(segmentIndex)\n            .toFloat();\n    }\n    getEventCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(UserDataCount)\n            .toInt();\n    }\n    getTotalEventValueSize() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalUserDataSize)\n            .toInt();\n    }\n    getEventTime(userDataIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(userDataIndex)\n            .getValueByString(Time)\n            .toFloat();\n    }\n    getEventValue(userDataIndex) {\n        return new csmString(this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(userDataIndex)\n            .getValueByString(Value)\n            .getRawString());\n    }\n}\nexport var EvaluationOptionFlag;\n(function (EvaluationOptionFlag) {\n    EvaluationOptionFlag[EvaluationOptionFlag[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n})(EvaluationOptionFlag || (EvaluationOptionFlag = {}));\nimport * as $ from './cubismmotionjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionJson = $.CubismMotionJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmDelete, CubismFramework } from '../live2dcubismframework';\nimport { CubismMath } from '../math/cubismmath';\nimport { csmString } from '../type/csmstring';\nimport { CSM_ASSERT, CubismLogDebug, CubismLogError, CubismLogWarning } from '../utils/cubismdebug';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionPoint, CubismMotionSegment, CubismMotionSegmentType } from './cubismmotioninternal';\nimport { CubismMotionJson, EvaluationOptionFlag } from './cubismmotionjson';\nconst EffectNameEyeBlink = 'EyeBlink';\nconst EffectNameLipSync = 'LipSync';\nconst TargetNameModel = 'Model';\nconst TargetNameParameter = 'Parameter';\nconst TargetNamePartOpacity = 'PartOpacity';\nconst IdNameOpacity = 'Opacity';\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n}\nfunction linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateBinarySearch(points, time) {\n    const xError = 0.01;\n    const x = time;\n    let x1 = points[0].time;\n    let x2 = points[3].time;\n    let cx1 = points[1].time;\n    let cx2 = points[2].time;\n    let ta = 0.0;\n    let tb = 1.0;\n    let t = 0.0;\n    let i = 0;\n    for (let var33 = true; i < 20; ++i) {\n        if (x < x1 + xError) {\n            t = ta;\n            break;\n        }\n        if (x2 - xError < x) {\n            t = tb;\n            break;\n        }\n        let centerx = (cx1 + cx2) * 0.5;\n        cx1 = (x1 + cx1) * 0.5;\n        cx2 = (x2 + cx2) * 0.5;\n        const ctrlx12 = (cx1 + centerx) * 0.5;\n        const ctrlx21 = (cx2 + centerx) * 0.5;\n        centerx = (ctrlx12 + ctrlx21) * 0.5;\n        if (x < centerx) {\n            tb = (ta + tb) * 0.5;\n            if (centerx - xError < x) {\n                t = tb;\n                break;\n            }\n            x2 = centerx;\n            cx2 = ctrlx12;\n        }\n        else {\n            ta = (ta + tb) * 0.5;\n            if (x < centerx + xError) {\n                t = ta;\n                break;\n            }\n            x1 = centerx;\n            cx1 = ctrlx21;\n        }\n    }\n    if (i == 20) {\n        t = (ta + tb) * 0.5;\n    }\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    if (t > 1.0) {\n        t = 1.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3.0 * cx2 + 3.0 * cx1 - x1;\n    const b = 3.0 * cx2 - 6.0 * cx1 + 3.0 * x1;\n    const c = 3.0 * cx1 - 3.0 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n    return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time, isCorrection, endTime) {\n    const curve = motionData.curves.at(index);\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n        pointPosition =\n            motionData.segments.at(i).basePointIndex +\n                (motionData.segments.at(i).segmentType ==\n                    CubismMotionSegmentType.CubismMotionSegmentType_Bezier\n                    ? 3\n                    : 1);\n        if (motionData.points.at(pointPosition).time > time) {\n            target = i;\n            break;\n        }\n    }\n    if (target == -1) {\n        if (isCorrection && time < endTime) {\n            return correctEndPoint(motionData, totalSegmentCount - 1, motionData.segments.at(curve.baseSegmentIndex).basePointIndex, pointPosition, time, endTime);\n        }\n        return motionData.points.at(pointPosition).value;\n    }\n    const segment = motionData.segments.at(target);\n    return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\n}\nfunction correctEndPoint(motionData, segmentIndex, beginIndex, endIndex, time, endTime) {\n    const motionPoint = [\n        new CubismMotionPoint(),\n        new CubismMotionPoint()\n    ];\n    {\n        const src = motionData.points.at(endIndex);\n        motionPoint[0].time = src.time;\n        motionPoint[0].value = src.value;\n    }\n    {\n        const src = motionData.points.at(beginIndex);\n        motionPoint[1].time = endTime;\n        motionPoint[1].value = src.value;\n    }\n    switch (motionData.segments.at(segmentIndex).segmentType) {\n        case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n        case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n        default:\n            return linearEvaluate(motionPoint, time);\n        case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n            return steppedEvaluate(motionPoint, time);\n        case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n            return inverseSteppedEvaluate(motionPoint, time);\n    }\n}\nexport var MotionBehavior;\n(function (MotionBehavior) {\n    MotionBehavior[MotionBehavior[\"MotionBehavior_V1\"] = 0] = \"MotionBehavior_V1\";\n    MotionBehavior[MotionBehavior[\"MotionBehavior_V2\"] = 1] = \"MotionBehavior_V2\";\n})(MotionBehavior || (MotionBehavior = {}));\nexport class CubismMotion extends ACubismMotion {\n    static create(buffer, size, onFinishedMotionHandler, onBeganMotionHandler, shouldCheckMotionConsistency = false) {\n        const ret = new CubismMotion();\n        ret.parse(buffer, size, shouldCheckMotionConsistency);\n        if (ret._motionData) {\n            ret._sourceFrameRate = ret._motionData.fps;\n            ret._loopDurationSeconds = ret._motionData.duration;\n            ret._onFinishedMotion = onFinishedMotionHandler;\n            ret._onBeganMotion = onBeganMotionHandler;\n        }\n        else {\n            csmDelete(ret);\n            return null;\n        }\n        return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n        if (this._modelCurveIdEyeBlink == null) {\n            this._modelCurveIdEyeBlink =\n                CubismFramework.getIdManager().getId(EffectNameEyeBlink);\n        }\n        if (this._modelCurveIdLipSync == null) {\n            this._modelCurveIdLipSync =\n                CubismFramework.getIdManager().getId(EffectNameLipSync);\n        }\n        if (this._modelCurveIdOpacity == null) {\n            this._modelCurveIdOpacity =\n                CubismFramework.getIdManager().getId(IdNameOpacity);\n        }\n        if (this._motionBehavior === MotionBehavior.MotionBehavior_V2) {\n            if (this._previousLoopState !== this._isLoop) {\n                this.adjustEndTime(motionQueueEntry);\n                this._previousLoopState = this._isLoop;\n            }\n        }\n        let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n        if (timeOffsetSeconds < 0.0) {\n            timeOffsetSeconds = 0.0;\n        }\n        let lipSyncValue = Number.MAX_VALUE;\n        let eyeBlinkValue = Number.MAX_VALUE;\n        const maxTargetSize = 64;\n        let lipSyncFlags = 0;\n        let eyeBlinkFlags = 0;\n        if (this._eyeBlinkParameterIds.getSize() > maxTargetSize) {\n            CubismLogDebug('too many eye blink targets : {0}', this._eyeBlinkParameterIds.getSize());\n        }\n        if (this._lipSyncParameterIds.getSize() > maxTargetSize) {\n            CubismLogDebug('too many lip sync targets : {0}', this._lipSyncParameterIds.getSize());\n        }\n        const tmpFadeIn = this._fadeInSeconds <= 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds);\n        const tmpFadeOut = this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds);\n        let value;\n        let c, parameterIndex;\n        let time = timeOffsetSeconds;\n        let duration = this._motionData.duration;\n        const isCorrection = this._motionBehavior === MotionBehavior.MotionBehavior_V2 && this._isLoop;\n        if (this._isLoop) {\n            if (this._motionBehavior === MotionBehavior.MotionBehavior_V2) {\n                duration += 1.0 / this._motionData.fps;\n            }\n            while (time > duration) {\n                time -= duration;\n            }\n        }\n        const curves = this._motionData.curves;\n        for (c = 0; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            if (curves.at(c).id == this._modelCurveIdEyeBlink) {\n                eyeBlinkValue = value;\n            }\n            else if (curves.at(c).id == this._modelCurveIdLipSync) {\n                lipSyncValue = value;\n            }\n            else if (curves.at(c).id == this._modelCurveIdOpacity) {\n                this._modelOpacity = value;\n                model.setModelOapcity(this.getModelOpacityValue());\n            }\n        }\n        let parameterMotionCurveCount = 0;\n        for (; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n            parameterMotionCurveCount++;\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            if (parameterIndex == -1) {\n                continue;\n            }\n            const sourceValue = model.getParameterValueByIndex(parameterIndex);\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\n                        value *= eyeBlinkValue;\n                        eyeBlinkFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\n                        value += lipSyncValue;\n                        lipSyncFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            if (model.isRepeat(parameterIndex)) {\n                value = model.getParameterRepeatValue(parameterIndex, value);\n            }\n            let v;\n            if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\n                v = sourceValue + (value - sourceValue) * fadeWeight;\n            }\n            else {\n                let fin;\n                let fout;\n                if (curves.at(c).fadeInTime < 0.0) {\n                    fin = tmpFadeIn;\n                }\n                else {\n                    fin =\n                        curves.at(c).fadeInTime == 0.0\n                            ? 1.0\n                            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                                curves.at(c).fadeInTime);\n                }\n                if (curves.at(c).fadeOutTime < 0.0) {\n                    fout = tmpFadeOut;\n                }\n                else {\n                    fout =\n                        curves.at(c).fadeOutTime == 0.0 ||\n                            motionQueueEntry.getEndTime() < 0.0\n                            ? 1.0\n                            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                                curves.at(c).fadeOutTime);\n                }\n                const paramWeight = this._weight * fin * fout;\n                v = sourceValue + (value - sourceValue) * paramWeight;\n            }\n            model.setParameterValueByIndex(parameterIndex, v, 1.0);\n        }\n        {\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds.at(i));\n                    if ((eyeBlinkFlags >> i) & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    const sourceValue = model.getParameterValueById(this._lipSyncParameterIds.at(i));\n                    if ((lipSyncFlags >> i) & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\n                }\n            }\n        }\n        for (; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            if (parameterIndex == -1) {\n                continue;\n            }\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            model.setParameterValueByIndex(parameterIndex, value);\n        }\n        if (timeOffsetSeconds >= duration) {\n            if (this._isLoop) {\n                this.updateForNextLoop(motionQueueEntry, userTimeSeconds, time);\n            }\n            else {\n                if (this._onFinishedMotion) {\n                    this._onFinishedMotion(this);\n                }\n                motionQueueEntry.setIsFinished(true);\n            }\n        }\n        this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n        CubismLogWarning('setIsLoop() is a deprecated function. Please use setLoop().');\n        this._isLoop = loop;\n    }\n    isLoop() {\n        CubismLogWarning('isLoop() is a deprecated function. Please use getLoop().');\n        return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n        CubismLogWarning('setIsLoopFadeIn() is a deprecated function. Please use setLoopFadeIn().');\n        this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n        CubismLogWarning('isLoopFadeIn() is a deprecated function. Please use getLoopFadeIn().');\n        return this._isLoopFadeIn;\n    }\n    setMotionBehavior(motionBehavior) {\n        this._motionBehavior = motionBehavior;\n    }\n    getMotionBehavior() {\n        return this._motionBehavior;\n    }\n    getDuration() {\n        return this._isLoop ? -1.0 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n        return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeInTime = value;\n                return;\n            }\n        }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeOutTime = value;\n                return;\n            }\n        }\n    }\n    getParameterFadeInTime(parameterId) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeInTime;\n            }\n        }\n        return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeOutTime;\n            }\n        }\n        return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n        this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n        this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    constructor() {\n        super();\n        this._motionBehavior = MotionBehavior.MotionBehavior_V2;\n        this._sourceFrameRate = 30.0;\n        this._loopDurationSeconds = -1.0;\n        this._isLoop = false;\n        this._isLoopFadeIn = true;\n        this._lastWeight = 0.0;\n        this._motionData = null;\n        this._modelCurveIdEyeBlink = null;\n        this._modelCurveIdLipSync = null;\n        this._modelCurveIdOpacity = null;\n        this._eyeBlinkParameterIds = null;\n        this._lipSyncParameterIds = null;\n        this._modelOpacity = 1.0;\n        this._debugMode = false;\n    }\n    release() {\n        this._motionData = void 0;\n        this._motionData = null;\n    }\n    updateForNextLoop(motionQueueEntry, userTimeSeconds, time) {\n        switch (this._motionBehavior) {\n            case MotionBehavior.MotionBehavior_V2:\n            default:\n                motionQueueEntry.setStartTime(userTimeSeconds - time);\n                if (this._isLoopFadeIn) {\n                    motionQueueEntry.setFadeInStartTime(userTimeSeconds - time);\n                }\n                if (this._onFinishedMotion != null) {\n                    this._onFinishedMotion(this);\n                }\n                break;\n            case MotionBehavior.MotionBehavior_V1:\n                motionQueueEntry.setStartTime(userTimeSeconds);\n                if (this._isLoopFadeIn) {\n                    motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n                }\n                break;\n        }\n    }\n    parse(motionJson, size, shouldCheckMotionConsistency = false) {\n        let json = new CubismMotionJson(motionJson, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        if (shouldCheckMotionConsistency) {\n            const consistency = json.hasConsistency();\n            if (!consistency) {\n                json.release();\n                CubismLogError('Inconsistent motion3.json.');\n                return;\n            }\n        }\n        this._motionData = new CubismMotionData();\n        this._motionData.duration = json.getMotionDuration();\n        this._motionData.loop = json.isMotionLoop();\n        this._motionData.curveCount = json.getMotionCurveCount();\n        this._motionData.fps = json.getMotionFps();\n        this._motionData.eventCount = json.getEventCount();\n        const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n        if (json.isExistMotionFadeInTime()) {\n            this._fadeInSeconds =\n                json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\n        }\n        else {\n            this._fadeInSeconds = 1.0;\n        }\n        if (json.isExistMotionFadeOutTime()) {\n            this._fadeOutSeconds =\n                json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\n        }\n        else {\n            this._fadeOutSeconds = 1.0;\n        }\n        this._motionData.curves.updateSize(this._motionData.curveCount, CubismMotionCurve, true);\n        this._motionData.segments.updateSize(json.getMotionTotalSegmentCount(), CubismMotionSegment, true);\n        this._motionData.points.updateSize(json.getMotionTotalPointCount(), CubismMotionPoint, true);\n        this._motionData.events.updateSize(this._motionData.eventCount, CubismMotionEvent, true);\n        let totalPointCount = 0;\n        let totalSegmentCount = 0;\n        for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n            if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            }\n            else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            }\n            else if (json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            }\n            else {\n                CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n            }\n            this._motionData.curves.at(curveCount).id =\n                json.getMotionCurveId(curveCount);\n            this._motionData.curves.at(curveCount).baseSegmentIndex =\n                totalSegmentCount;\n            this._motionData.curves.at(curveCount).fadeInTime =\n                json.isExistMotionCurveFadeInTime(curveCount)\n                    ? json.getMotionCurveFadeInTime(curveCount)\n                    : -1.0;\n            this._motionData.curves.at(curveCount).fadeOutTime =\n                json.isExistMotionCurveFadeOutTime(curveCount)\n                    ? json.getMotionCurveFadeOutTime(curveCount)\n                    : -1.0;\n            for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\n                if (segmentPosition == 0) {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex =\n                        totalPointCount;\n                    this._motionData.points.at(totalPointCount).time =\n                        json.getMotionCurveSegment(curveCount, segmentPosition);\n                    this._motionData.points.at(totalPointCount).value =\n                        json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                    totalPointCount += 1;\n                    segmentPosition += 2;\n                }\n                else {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex =\n                        totalPointCount - 1;\n                }\n                const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n                const segmentType = segment;\n                switch (segmentType) {\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            linearEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n                        if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                            this._motionData.segments.at(totalSegmentCount).evaluate =\n                                bezierEvaluate;\n                        }\n                        else {\n                            this._motionData.segments.at(totalSegmentCount).evaluate =\n                                bezierEvaluateCardanoInterpretation;\n                        }\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        this._motionData.points.at(totalPointCount + 1).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 3);\n                        this._motionData.points.at(totalPointCount + 1).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 4);\n                        this._motionData.points.at(totalPointCount + 2).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 5);\n                        this._motionData.points.at(totalPointCount + 2).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 6);\n                        totalPointCount += 3;\n                        segmentPosition += 7;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            steppedEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            inverseSteppedEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    default: {\n                        CSM_ASSERT(0);\n                        break;\n                    }\n                }\n                ++this._motionData.curves.at(curveCount).segmentCount;\n                ++totalSegmentCount;\n            }\n        }\n        for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n            this._motionData.events.at(userdatacount).fireTime =\n                json.getEventTime(userdatacount);\n            this._motionData.events.at(userdatacount).value =\n                json.getEventValue(userdatacount);\n        }\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        this._firedEventValues.updateSize(0);\n        for (let u = 0; u < this._motionData.eventCount; ++u) {\n            if (this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\n                this._motionData.events.at(u).fireTime <= motionTimeSeconds) {\n                this._firedEventValues.pushBack(new csmString(this._motionData.events.at(u).value.s));\n            }\n        }\n        return this._firedEventValues;\n    }\n    isExistModelOpacity() {\n        for (let i = 0; i < this._motionData.curveCount; i++) {\n            const curve = this._motionData.curves.at(i);\n            if (curve.type != CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                continue;\n            }\n            if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getModelOpacityIndex() {\n        if (this.isExistModelOpacity()) {\n            for (let i = 0; i < this._motionData.curveCount; i++) {\n                const curve = this._motionData.curves.at(i);\n                if (curve.type != CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                    continue;\n                }\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    getModelOpacityId(index) {\n        if (index != -1) {\n            const curve = this._motionData.curves.at(index);\n            if (curve.type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return CubismFramework.getIdManager().getId(curve.id.getString().s);\n                }\n            }\n        }\n        return null;\n    }\n    getModelOpacityValue() {\n        return this._modelOpacity;\n    }\n    setDebugMode(debugMode) {\n        this._debugMode = debugMode;\n    }\n}\nimport * as $ from './cubismmotion';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotion = $.CubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMotionQueueManager } from './cubismmotionqueuemanager';\nexport class CubismMotionManager extends CubismMotionQueueManager {\n    constructor() {\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n    }\n    getCurrentPriority() {\n        return this._currentPriority;\n    }\n    getReservePriority() {\n        return this._reservePriority;\n    }\n    setReservePriority(val) {\n        this._reservePriority = val;\n    }\n    startMotionPriority(motion, autoDelete, priority) {\n        if (priority == this._reservePriority) {\n            this._reservePriority = 0;\n        }\n        this._currentPriority = priority;\n        return super.startMotion(motion, autoDelete);\n    }\n    updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n        if (this.isFinished()) {\n            this._currentPriority = 0;\n        }\n        return updated;\n    }\n    reserveMotion(priority) {\n        if (priority <= this._reservePriority ||\n            priority <= this._currentPriority) {\n            return false;\n        }\n        this._reservePriority = priority;\n        return true;\n    }\n}\nimport * as $ from './cubismmotionmanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionManager = $.CubismMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismVector2 } from '../math/cubismvector2';\nimport { csmVector } from '../type/csmvector';\nexport var CubismPhysicsTargetType;\n(function (CubismPhysicsTargetType) {\n    CubismPhysicsTargetType[CubismPhysicsTargetType[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n})(CubismPhysicsTargetType || (CubismPhysicsTargetType = {}));\nexport var CubismPhysicsSource;\n(function (CubismPhysicsSource) {\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n})(CubismPhysicsSource || (CubismPhysicsSource = {}));\nexport class PhysicsJsonEffectiveForces {\n    constructor() {\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsParameter {\n}\nexport class CubismPhysicsNormalization {\n}\nexport class CubismPhysicsParticle {\n    constructor() {\n        this.initialPosition = new CubismVector2(0, 0);\n        this.position = new CubismVector2(0, 0);\n        this.lastPosition = new CubismVector2(0, 0);\n        this.lastGravity = new CubismVector2(0, 0);\n        this.force = new CubismVector2(0, 0);\n        this.velocity = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsSubRig {\n    constructor() {\n        this.normalizationPosition = new CubismPhysicsNormalization();\n        this.normalizationAngle = new CubismPhysicsNormalization();\n    }\n}\nexport class CubismPhysicsInput {\n    constructor() {\n        this.source = new CubismPhysicsParameter();\n    }\n}\nexport class CubismPhysicsOutput {\n    constructor() {\n        this.destination = new CubismPhysicsParameter();\n        this.translationScale = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsRig {\n    constructor() {\n        this.settings = new csmVector();\n        this.inputs = new csmVector();\n        this.outputs = new csmVector();\n        this.particles = new csmVector();\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n        this.fps = 0.0;\n    }\n}\nimport * as $ from './cubismphysicsinternal';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsInput = $.CubismPhysicsInput;\n    Live2DCubismFramework.CubismPhysicsNormalization = $.CubismPhysicsNormalization;\n    Live2DCubismFramework.CubismPhysicsOutput = $.CubismPhysicsOutput;\n    Live2DCubismFramework.CubismPhysicsParameter = $.CubismPhysicsParameter;\n    Live2DCubismFramework.CubismPhysicsParticle = $.CubismPhysicsParticle;\n    Live2DCubismFramework.CubismPhysicsRig = $.CubismPhysicsRig;\n    Live2DCubismFramework.CubismPhysicsSource = $.CubismPhysicsSource;\n    Live2DCubismFramework.CubismPhysicsSubRig = $.CubismPhysicsSubRig;\n    Live2DCubismFramework.CubismPhysicsTargetType = $.CubismPhysicsTargetType;\n    Live2DCubismFramework.PhysicsJsonEffectiveForces = $.PhysicsJsonEffectiveForces;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { CubismJson } from '../utils/cubismjson';\nconst Position = 'Position';\nconst X = 'X';\nconst Y = 'Y';\nconst Angle = 'Angle';\nconst Type = 'Type';\nconst Id = 'Id';\nconst Meta = 'Meta';\nconst EffectiveForces = 'EffectiveForces';\nconst TotalInputCount = 'TotalInputCount';\nconst TotalOutputCount = 'TotalOutputCount';\nconst PhysicsSettingCount = 'PhysicsSettingCount';\nconst Gravity = 'Gravity';\nconst Wind = 'Wind';\nconst VertexCount = 'VertexCount';\nconst Fps = 'Fps';\nconst PhysicsSettings = 'PhysicsSettings';\nconst Normalization = 'Normalization';\nconst Minimum = 'Minimum';\nconst Maximum = 'Maximum';\nconst Default = 'Default';\nconst Reflect = 'Reflect';\nconst Weight = 'Weight';\nconst Input = 'Input';\nconst Source = 'Source';\nconst Output = 'Output';\nconst Scale = 'Scale';\nconst VertexIndex = 'VertexIndex';\nconst Destination = 'Destination';\nconst Vertices = 'Vertices';\nconst Mobility = 'Mobility';\nconst Delay = 'Delay';\nconst Radius = 'Radius';\nconst Acceleration = 'Acceleration';\nexport class CubismPhysicsJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getGravity() {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Gravity)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Gravity)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n    getWind() {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Wind)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Wind)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n    getFps() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Fps)\n            .toFloat(0.0);\n    }\n    getSubRigCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(PhysicsSettingCount)\n            .toInt();\n    }\n    getTotalInputCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalInputCount)\n            .toInt();\n    }\n    getTotalOutputCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalOutputCount)\n            .toInt();\n    }\n    getVertexCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(VertexCount)\n            .toInt();\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Minimum)\n            .toFloat();\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Maximum)\n            .toFloat();\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Default)\n            .toFloat();\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Minimum)\n            .toFloat();\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Maximum)\n            .toFloat();\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Default)\n            .toFloat();\n    }\n    getInputCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getVector()\n            .getSize();\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Weight)\n            .toFloat();\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Reflect)\n            .toBoolean();\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Type)\n            .getRawString();\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Source)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getOutputCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getVector()\n            .getSize();\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(VertexIndex)\n            .toInt();\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Scale)\n            .toFloat();\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Weight)\n            .toFloat();\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Destination)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Type)\n            .getRawString();\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Reflect)\n            .toBoolean();\n    }\n    getParticleCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getVector()\n            .getSize();\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Mobility)\n            .toFloat();\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Delay)\n            .toFloat();\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Acceleration)\n            .toFloat();\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Radius)\n            .toFloat();\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Position)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Position)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n}\nimport * as $ from './cubismphysicsjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsJson = $.CubismPhysicsJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from '../math/cubismmath';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { csmVector } from '../type/csmvector';\nimport { CubismPhysicsInput, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType } from './cubismphysicsinternal';\nimport { CubismPhysicsJson } from './cubismphysicsjson';\nconst PhysicsTypeTagX = 'X';\nconst PhysicsTypeTagY = 'Y';\nconst PhysicsTypeTagAngle = 'Angle';\nconst AirResistance = 5.0;\nconst MaximumWeight = 100.0;\nconst MovementThreshold = 0.001;\nconst MaxDeltaTime = 5.0;\nexport class CubismPhysics {\n    static create(buffer, size) {\n        const ret = new CubismPhysics();\n        ret.parse(buffer, size);\n        ret._physicsRig.gravity.y = 0;\n        return ret;\n    }\n    static delete(physics) {\n        if (physics != null) {\n            physics.release();\n            physics = null;\n        }\n    }\n    parse(physicsJson, size) {\n        this._physicsRig = new CubismPhysicsRig();\n        let json = new CubismPhysicsJson(physicsJson, size);\n        this._physicsRig.gravity = json.getGravity();\n        this._physicsRig.wind = json.getWind();\n        this._physicsRig.subRigCount = json.getSubRigCount();\n        this._physicsRig.fps = json.getFps();\n        this._physicsRig.settings.updateSize(this._physicsRig.subRigCount, CubismPhysicsSubRig, true);\n        this._physicsRig.inputs.updateSize(json.getTotalInputCount(), CubismPhysicsInput, true);\n        this._physicsRig.outputs.updateSize(json.getTotalOutputCount(), CubismPhysicsOutput, true);\n        this._physicsRig.particles.updateSize(json.getVertexCount(), CubismPhysicsParticle, true);\n        this._currentRigOutputs.clear();\n        this._previousRigOutputs.clear();\n        let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n        for (let i = 0; i < this._physicsRig.settings.getSize(); ++i) {\n            this._physicsRig.settings.at(i).normalizationPosition.minimum =\n                json.getNormalizationPositionMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.maximum =\n                json.getNormalizationPositionMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.defalut =\n                json.getNormalizationPositionDefaultValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.minimum =\n                json.getNormalizationAngleMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.maximum =\n                json.getNormalizationAngleMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.defalut =\n                json.getNormalizationAngleDefaultValue(i);\n            this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\n            this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\n            for (let j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\n                this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\n                this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(i, j);\n                this._physicsRig.inputs.at(inputIndex + j).reflect =\n                    json.getInputReflect(i, j);\n                if (json.getInputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputTranslationXFromNormalizedParameterValue;\n                }\n                else if (json.getInputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputTranslationYFromNormalizedParamterValue;\n                }\n                else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputAngleFromNormalizedParameterValue;\n                }\n                this._physicsRig.inputs.at(inputIndex + j).source.targetType =\n                    CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.inputs.at(inputIndex + j).source.id =\n                    json.getInputSourceId(i, j);\n            }\n            inputIndex += this._physicsRig.settings.at(i).inputCount;\n            this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\n            this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\n            const currentRigOutput = new PhysicsOutput();\n            currentRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            const previousRigOutput = new PhysicsOutput();\n            previousRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            for (let j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\n                currentRigOutput.outputs.set(j, 0.0);\n                previousRigOutput.outputs.set(j, 0.0);\n                this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex =\n                    -1;\n                this._physicsRig.outputs.at(outputIndex + j).vertexIndex =\n                    json.getOutputVertexIndex(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).angleScale =\n                    json.getOutputAngleScale(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).weight =\n                    json.getOutputWeight(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\n                    CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.outputs.at(outputIndex + j).destination.id =\n                    json.getOutputDestinationId(i, j);\n                if (json.getOutputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputTranslationX;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleTranslationX;\n                }\n                else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputTranslationY;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleTranslationY;\n                }\n                else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputAngle;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleAngle;\n                }\n                this._physicsRig.outputs.at(outputIndex + j).reflect =\n                    json.getOutputReflect(i, j);\n            }\n            this._currentRigOutputs.pushBack(currentRigOutput);\n            this._previousRigOutputs.pushBack(previousRigOutput);\n            outputIndex += this._physicsRig.settings.at(i).outputCount;\n            this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\n            this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\n            for (let j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j) {\n                this._physicsRig.particles.at(particleIndex + j).mobility =\n                    json.getParticleMobility(i, j);\n                this._physicsRig.particles.at(particleIndex + j).delay =\n                    json.getParticleDelay(i, j);\n                this._physicsRig.particles.at(particleIndex + j).acceleration =\n                    json.getParticleAcceleration(i, j);\n                this._physicsRig.particles.at(particleIndex + j).radius =\n                    json.getParticleRadius(i, j);\n                this._physicsRig.particles.at(particleIndex + j).position =\n                    json.getParticlePosition(i, j);\n            }\n            particleIndex += this._physicsRig.settings.at(i).particleCount;\n        }\n        this.initialize();\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    stabilization(model) {\n        var _b, _c, _d, _f;\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        if (((_c = (_b = this._parameterCaches) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if (((_f = (_d = this._parameterInputCaches) === null || _d === void 0 ? void 0 : _d.length) !== null && _f !== void 0 ? _f : 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n        }\n        for (let j = 0; j < model.getParameterCount(); ++j) {\n            this._parameterCaches[j] = parameterValues[j];\n            this._parameterInputCaches[j] = parameterValues[j];\n        }\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            totalAngle = { angle: 0.0 };\n            totalTranslation.x = 0.0;\n            totalTranslation.y = 0.0;\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            for (let i = 0; i < currentSetting.inputCount; ++i) {\n                weight = currentInputs[i].weight / MaximumWeight;\n                if (currentInputs[i].sourceParameterIndex == -1) {\n                    currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                }\n                currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValues[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                this._parameterCaches[currentInputs[i].sourceParameterIndex] =\n                    parameterValues[currentInputs[i].sourceParameterIndex];\n            }\n            radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n            totalTranslation.x =\n                totalTranslation.x * CubismMath.cos(radAngle) -\n                    totalTranslation.y * CubismMath.sin(radAngle);\n            totalTranslation.y =\n                totalTranslation.x * CubismMath.sin(radAngle) +\n                    totalTranslation.y * CubismMath.cos(radAngle);\n            updateParticlesForStabilization(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum);\n            for (let i = 0; i < currentSetting.outputCount; ++i) {\n                const particleIndex = currentOutputs[i].vertexIndex;\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    currentOutputs[i].destinationParameterIndex = model.getParameterIndex(currentOutputs[i].destination.id);\n                }\n                if (particleIndex < 1 ||\n                    particleIndex >= currentSetting.particleCount) {\n                    continue;\n                }\n                let translation = new CubismVector2();\n                translation = currentParticles[particleIndex].position.substract(currentParticles[particleIndex - 1].position);\n                outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                this._previousRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterCaches = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\n                    ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex)))\n                    : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                for (let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++) {\n                    parameterValues[offset] = this._parameterCaches[offset] =\n                        outParameterCaches[outParamIndex];\n                }\n            }\n        }\n    }\n    evaluate(model, deltaTimeSeconds) {\n        var _b, _c, _d, _f;\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        if (0.0 >= deltaTimeSeconds) {\n            return;\n        }\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        let physicsDeltaTime;\n        this._currentRemainTime += deltaTimeSeconds;\n        if (this._currentRemainTime > MaxDeltaTime) {\n            this._currentRemainTime = 0.0;\n        }\n        if (((_c = (_b = this._parameterCaches) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if (((_f = (_d = this._parameterInputCaches) === null || _d === void 0 ? void 0 : _d.length) !== null && _f !== void 0 ? _f : 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n            for (let j = 0; j < model.getParameterCount(); ++j) {\n                this._parameterInputCaches[j] = parameterValues[j];\n            }\n        }\n        if (this._physicsRig.fps > 0.0) {\n            physicsDeltaTime = 1.0 / this._physicsRig.fps;\n        }\n        else {\n            physicsDeltaTime = deltaTimeSeconds;\n        }\n        while (this._currentRemainTime >= physicsDeltaTime) {\n            for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                for (let i = 0; i < currentSetting.outputCount; ++i) {\n                    this._previousRigOutputs\n                        .at(settingIndex)\n                        .outputs.set(i, this._currentRigOutputs.at(settingIndex).outputs.at(i));\n                }\n            }\n            const inputWeight = physicsDeltaTime / this._currentRemainTime;\n            for (let j = 0; j < model.getParameterCount(); ++j) {\n                this._parameterCaches[j] =\n                    this._parameterInputCaches[j] * (1.0 - inputWeight) +\n                        parameterValues[j] * inputWeight;\n                this._parameterInputCaches[j] = this._parameterCaches[j];\n            }\n            for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n                totalAngle = { angle: 0.0 };\n                totalTranslation.x = 0.0;\n                totalTranslation.y = 0.0;\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n                for (let i = 0; i < currentSetting.inputCount; ++i) {\n                    weight = currentInputs[i].weight / MaximumWeight;\n                    if (currentInputs[i].sourceParameterIndex == -1) {\n                        currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                    }\n                    currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, this._parameterCaches[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                }\n                radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n                totalTranslation.x =\n                    totalTranslation.x * CubismMath.cos(radAngle) -\n                        totalTranslation.y * CubismMath.sin(radAngle);\n                totalTranslation.y =\n                    totalTranslation.x * CubismMath.sin(radAngle) +\n                        totalTranslation.y * CubismMath.cos(radAngle);\n                updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, physicsDeltaTime, AirResistance);\n                for (let i = 0; i < currentSetting.outputCount; ++i) {\n                    const particleIndex = currentOutputs[i].vertexIndex;\n                    if (currentOutputs[i].destinationParameterIndex == -1) {\n                        currentOutputs[i].destinationParameterIndex =\n                            model.getParameterIndex(currentOutputs[i].destination.id);\n                    }\n                    if (particleIndex < 1 ||\n                        particleIndex >= currentSetting.particleCount) {\n                        continue;\n                    }\n                    const translation = new CubismVector2();\n                    translation.x =\n                        currentParticles[particleIndex].position.x -\n                            currentParticles[particleIndex - 1].position.x;\n                    translation.y =\n                        currentParticles[particleIndex].position.y -\n                            currentParticles[particleIndex - 1].position.y;\n                    outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                    this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                    const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                    const outParameterCaches = !Float32Array.prototype.slice &&\n                        'subarray' in Float32Array.prototype\n                        ? JSON.parse(JSON.stringify(this._parameterCaches.subarray(destinationParameterIndex)))\n                        : this._parameterCaches.slice(destinationParameterIndex);\n                    updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                    for (let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++) {\n                        this._parameterCaches[offset] = outParameterCaches[outParamIndex];\n                    }\n                }\n            }\n            this._currentRemainTime -= physicsDeltaTime;\n        }\n        const alpha = this._currentRemainTime / physicsDeltaTime;\n        this.interpolate(model, alpha);\n    }\n    interpolate(model, weight) {\n        let currentOutputs;\n        let currentSetting;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            for (let i = 0; i < currentSetting.outputCount; ++i) {\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    continue;\n                }\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterValues = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\n                    ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex)))\n                    : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterValues, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], this._previousRigOutputs.at(settingIndex).outputs.at(i) *\n                    (1 - weight) +\n                    this._currentRigOutputs.at(settingIndex).outputs.at(i) * weight, currentOutputs[i]);\n                for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValues.length; offset++, outParamIndex++) {\n                    parameterValues[offset] = outParameterValues[outParamIndex];\n                }\n            }\n        }\n    }\n    setOptions(options) {\n        this._options = options;\n    }\n    getOption() {\n        return this._options;\n    }\n    constructor() {\n        this._physicsRig = null;\n        this._options = new Options();\n        this._options.gravity.y = -1.0;\n        this._options.gravity.x = 0.0;\n        this._options.wind.x = 0.0;\n        this._options.wind.y = 0.0;\n        this._currentRigOutputs = new csmVector();\n        this._previousRigOutputs = new csmVector();\n        this._currentRemainTime = 0.0;\n        this._parameterCaches = null;\n        this._parameterInputCaches = null;\n    }\n    release() {\n        this._physicsRig = void 0;\n        this._physicsRig = null;\n    }\n    initialize() {\n        let strand;\n        let currentSetting;\n        let radius;\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            strand[0].initialPosition = new CubismVector2(0.0, 0.0);\n            strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n            strand[0].lastGravity = new CubismVector2(0.0, -1.0);\n            strand[0].lastGravity.y *= -1.0;\n            strand[0].velocity = new CubismVector2(0.0, 0.0);\n            strand[0].force = new CubismVector2(0.0, 0.0);\n            for (let i = 1; i < currentSetting.particleCount; ++i) {\n                radius = new CubismVector2(0.0, 0.0);\n                radius.y = strand[i].radius;\n                strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n                strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastGravity = new CubismVector2(0.0, -1.0);\n                strand[i].lastGravity.y *= -1.0;\n                strand[i].velocity = new CubismVector2(0.0, 0.0);\n                strand[i].force = new CubismVector2(0.0, 0.0);\n            }\n        }\n    }\n}\nexport class Options {\n    constructor() {\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n    }\n}\nexport class PhysicsOutput {\n    constructor() {\n        this.outputs = new csmVector(0);\n    }\n}\nfunction sign(value) {\n    let ret = 0;\n    if (value > 0.0) {\n        ret = 1;\n    }\n    else if (value < 0.0) {\n        ret = -1;\n    }\n    return ret;\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n        parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    }\n    else {\n        parentGravity = parentGravity.multiplyByScaler(-1.0);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getRangeValue(min, max) {\n    const maxValue = CubismMath.max(min, max);\n    const minValue = CubismMath.min(min, max);\n    return CubismMath.abs(maxValue - minValue);\n}\nfunction getDefaultValue(min, max) {\n    const minValue = CubismMath.min(min, max);\n    return minValue + getRangeValue(min, max) / 2.0;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.x));\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.y));\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(angleScale));\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let delay;\n    let radian;\n    let direction = new CubismVector2(0.0, 0.0);\n    let velocity = new CubismVector2(0.0, 0.0);\n    let force = new CubismVector2(0.0, 0.0);\n    let newDirection = new CubismVector2(0.0, 0.0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n        strand[i].force = currentGravity\n            .multiplyByScaler(strand[i].acceleration)\n            .add(windDirection);\n        strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n        delay = strand[i].delay * deltaTimeSeconds * 30.0;\n        direction = strand[i].position.substract(strand[i - 1].position);\n        radian =\n            CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\n                airResistance;\n        direction.x =\n            CubismMath.cos(radian) * direction.x -\n                direction.y * CubismMath.sin(radian);\n        direction.y =\n            CubismMath.sin(radian) * direction.x +\n                direction.y * CubismMath.cos(radian);\n        strand[i].position = strand[i - 1].position.add(direction);\n        velocity = strand[i].velocity.multiplyByScaler(delay);\n        force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n        strand[i].position = strand[i].position.add(velocity).add(force);\n        newDirection = strand[i].position.substract(strand[i - 1].position);\n        newDirection.normalize();\n        strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n        if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        if (delay != 0.0) {\n            strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n            strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n            strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n        }\n        strand[i].force = new CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\nfunction updateParticlesForStabilization(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue) {\n    let force = new CubismVector2(0.0, 0.0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n        strand[i].force = currentGravity\n            .multiplyByScaler(strand[i].acceleration)\n            .add(windDirection);\n        strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n        strand[i].velocity = new CubismVector2(0.0, 0.0);\n        force = strand[i].force;\n        force.normalize();\n        force = force.multiplyByScaler(strand[i].radius);\n        strand[i].position = strand[i - 1].position.add(force);\n        if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        strand[i].force = new CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let value;\n    const outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n        if (value < output.valueBelowMinimum) {\n            output.valueBelowMinimum = value;\n        }\n        value = parameterValueMinimum;\n    }\n    else if (value > parameterValueMaximum) {\n        if (value > output.valueExceededMaximum) {\n            output.valueExceededMaximum = value;\n        }\n        value = parameterValueMaximum;\n    }\n    const weight = output.weight / MaximumWeight;\n    if (weight >= 1.0) {\n        parameterValue[0] = value;\n    }\n    else {\n        value = parameterValue[0] * (1.0 - weight) + value * weight;\n        parameterValue[0] = value;\n    }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0.0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n        value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n        value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (sign(paramValue)) {\n        case 1: {\n            const nLength = maxNormValue - middleNormValue;\n            const pLength = maxValue - middleValue;\n            if (pLength != 0.0) {\n                result = paramValue * (nLength / pLength);\n                result += middleNormValue;\n            }\n            break;\n        }\n        case -1: {\n            const nLength = minNormValue - middleNormValue;\n            const pLength = minValue - middleValue;\n            if (pLength != 0.0) {\n                result = paramValue * (nLength / pLength);\n                result += middleNormValue;\n            }\n            break;\n        }\n        case 0: {\n            result = middleNormValue;\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n    return isInverted ? result : result * -1.0;\n}\nimport * as $ from './cubismphysics';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysics = $.CubismPhysics;\n    Live2DCubismFramework.Options = $.Options;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { Constant } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { csmRect } from '../type/csmrectf';\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismTextureColor } from './cubismrenderer';\nimport { CubismLogError, CubismLogWarning } from '../utils/cubismdebug';\nconst ColorChannelCount = 4;\nconst ClippingMaskMaxCountOnDefault = 36;\nconst ClippingMaskMaxCountOnMultiRenderTexture = 32;\nexport class CubismClippingManager {\n    constructor(clippingContextFactory) {\n        this._renderTextureCount = 0;\n        this._clippingMaskBufferSize = 256;\n        this._clippingContextListForMask = new csmVector();\n        this._clippingContextListForDraw = new csmVector();\n        this._channelColors = new csmVector();\n        this._tmpBoundsOnModel = new csmRect();\n        this._tmpMatrix = new CubismMatrix44();\n        this._tmpMatrixForMask = new CubismMatrix44();\n        this._tmpMatrixForDraw = new CubismMatrix44();\n        this._clippingContexttConstructor = clippingContextFactory;\n        let tmp = new CubismTextureColor();\n        tmp.r = 1.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 1.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 1.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 1.0;\n        this._channelColors.pushBack(tmp);\n    }\n    release() {\n        for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n            if (this._clippingContextListForMask.at(i)) {\n                this._clippingContextListForMask.at(i).release();\n                this._clippingContextListForMask.set(i, void 0);\n            }\n            this._clippingContextListForMask.set(i, null);\n        }\n        this._clippingContextListForMask = null;\n        for (let i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\n            this._clippingContextListForDraw.set(i, null);\n        }\n        this._clippingContextListForDraw = null;\n        for (let i = 0; i < this._channelColors.getSize(); i++) {\n            this._channelColors.set(i, null);\n        }\n        this._channelColors = null;\n        if (this._clearedFrameBufferFlags != null) {\n            this._clearedFrameBufferFlags.clear();\n        }\n        this._clearedFrameBufferFlags = null;\n    }\n    initialize(model, renderTextureCount) {\n        if (renderTextureCount % 1 != 0) {\n            CubismLogWarning('The number of render textures must be specified as an integer. The decimal point is rounded down and corrected to an integer.');\n            renderTextureCount = ~~renderTextureCount;\n        }\n        if (renderTextureCount < 1) {\n            CubismLogWarning('The number of render textures must be an integer greater than or equal to 1. Set the number of render textures to 1.');\n        }\n        this._renderTextureCount = renderTextureCount < 1 ? 1 : renderTextureCount;\n        this._clearedFrameBufferFlags = new csmVector(this._renderTextureCount);\n        for (let i = 0; i < model.getDrawableCount(); i++) {\n            if (model.getDrawableMaskCounts()[i] <= 0) {\n                this._clippingContextListForDraw.pushBack(null);\n                continue;\n            }\n            let clippingContext = this.findSameClip(model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n            if (clippingContext == null) {\n                clippingContext = new this._clippingContexttConstructor(this, model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n                this._clippingContextListForMask.pushBack(clippingContext);\n            }\n            clippingContext.addClippedDrawable(i);\n            this._clippingContextListForDraw.pushBack(clippingContext);\n        }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n        for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n            const clippingContext = this._clippingContextListForMask.at(i);\n            const count = clippingContext._clippingIdCount;\n            if (count != drawableMaskCounts) {\n                continue;\n            }\n            let sameCount = 0;\n            for (let j = 0; j < count; j++) {\n                const clipId = clippingContext._clippingIdList[j];\n                for (let k = 0; k < count; k++) {\n                    if (drawableMasks[k] == clipId) {\n                        sameCount++;\n                        break;\n                    }\n                }\n            }\n            if (sameCount == count) {\n                return clippingContext;\n            }\n        }\n        return null;\n    }\n    setupMatrixForHighPrecision(model, isRightHanded) {\n        let usingClipCount = 0;\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++;\n            }\n        }\n        if (usingClipCount > 0) {\n            this.setupLayoutBounds(0);\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                for (let i = 0; i < this._renderTextureCount; i++) {\n                    this._clearedFrameBufferFlags.pushBack(false);\n                }\n            }\n            else {\n                for (let i = 0; i < this._renderTextureCount; i++) {\n                    this._clearedFrameBufferFlags.set(i, false);\n                }\n            }\n            for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClippedDrawRect = clipContext._allClippedDrawRect;\n                const layoutBoundsOnTex01 = clipContext._layoutBounds;\n                const margin = 0.05;\n                let scaleX = 0.0;\n                let scaleY = 0.0;\n                const ppu = model.getPixelsPerUnit();\n                const maskPixelSize = clipContext\n                    .getClippingManager()\n                    .getClippingMaskBufferSize();\n                const physicalMaskWidth = layoutBoundsOnTex01.width * maskPixelSize;\n                const physicalMaskHeight = layoutBoundsOnTex01.height * maskPixelSize;\n                this._tmpBoundsOnModel.setRect(allClippedDrawRect);\n                if (this._tmpBoundsOnModel.width * ppu > physicalMaskWidth) {\n                    this._tmpBoundsOnModel.expand(allClippedDrawRect.width * margin, 0.0);\n                    scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                }\n                else {\n                    scaleX = ppu / physicalMaskWidth;\n                }\n                if (this._tmpBoundsOnModel.height * ppu > physicalMaskHeight) {\n                    this._tmpBoundsOnModel.expand(0.0, allClippedDrawRect.height * margin);\n                    scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                }\n                else {\n                    scaleY = ppu / physicalMaskHeight;\n                }\n                this.createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY);\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n            }\n        }\n    }\n    createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY) {\n        this._tmpMatrix.loadIdentity();\n        {\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\n        }\n        {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n        }\n        this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        this._tmpMatrix.loadIdentity();\n        {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y * (isRightHanded ? -1.0 : 1.0));\n            this._tmpMatrix.scaleRelative(scaleX, scaleY * (isRightHanded ? -1.0 : 1.0));\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n        }\n        this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n    }\n    setupLayoutBounds(usingClipCount) {\n        const useClippingMaskMaxCount = this._renderTextureCount <= 1\n            ? ClippingMaskMaxCountOnDefault\n            : ClippingMaskMaxCountOnMultiRenderTexture * this._renderTextureCount;\n        if (usingClipCount <= 0 || usingClipCount > useClippingMaskMaxCount) {\n            if (usingClipCount > useClippingMaskMaxCount) {\n                CubismLogError('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n            }\n            for (let index = 0; index < this._clippingContextListForMask.getSize(); index++) {\n                const clipContext = this._clippingContextListForMask.at(index);\n                clipContext._layoutChannelIndex = 0;\n                clipContext._layoutBounds.x = 0.0;\n                clipContext._layoutBounds.y = 0.0;\n                clipContext._layoutBounds.width = 1.0;\n                clipContext._layoutBounds.height = 1.0;\n                clipContext._bufferIndex = 0;\n            }\n            return;\n        }\n        const layoutCountMaxValue = this._renderTextureCount <= 1 ? 9 : 8;\n        let countPerSheetDiv = usingClipCount / this._renderTextureCount;\n        const reduceLayoutTextureCount = usingClipCount % this._renderTextureCount;\n        countPerSheetDiv = Math.ceil(countPerSheetDiv);\n        let divCount = countPerSheetDiv / ColorChannelCount;\n        const modCount = countPerSheetDiv % ColorChannelCount;\n        divCount = ~~divCount;\n        let curClipIndex = 0;\n        for (let renderTextureIndex = 0; renderTextureIndex < this._renderTextureCount; renderTextureIndex++) {\n            for (let channelIndex = 0; channelIndex < ColorChannelCount; channelIndex++) {\n                let layoutCount = divCount + (channelIndex < modCount ? 1 : 0);\n                const checkChannelIndex = modCount + (divCount < 1 ? -1 : 0);\n                if (channelIndex == checkChannelIndex && reduceLayoutTextureCount > 0) {\n                    layoutCount -= !(renderTextureIndex < reduceLayoutTextureCount)\n                        ? 1\n                        : 0;\n                }\n                if (layoutCount == 0) {\n                }\n                else if (layoutCount == 1) {\n                    const clipContext = this._clippingContextListForMask.at(curClipIndex++);\n                    clipContext._layoutChannelIndex = channelIndex;\n                    clipContext._layoutBounds.x = 0.0;\n                    clipContext._layoutBounds.y = 0.0;\n                    clipContext._layoutBounds.width = 1.0;\n                    clipContext._layoutBounds.height = 1.0;\n                    clipContext._bufferIndex = renderTextureIndex;\n                }\n                else if (layoutCount == 2) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 2;\n                        xpos = ~~xpos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else if (layoutCount <= 4) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 2;\n                        let ypos = i / 2;\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = ypos * 0.5;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 0.5;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else if (layoutCount <= layoutCountMaxValue) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 3;\n                        let ypos = i / 3;\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos / 3.0;\n                        cc._layoutBounds.y = ypos / 3.0;\n                        cc._layoutBounds.width = 1.0 / 3.0;\n                        cc._layoutBounds.height = 1.0 / 3.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else {\n                    CubismLogError('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n                    for (let index = 0; index < layoutCount; index++) {\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = 0;\n                        cc._layoutBounds.x = 0.0;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 1.0;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = 0;\n                    }\n                }\n            }\n        }\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n        let clippedDrawTotalMinX = Number.MAX_VALUE;\n        let clippedDrawTotalMinY = Number.MAX_VALUE;\n        let clippedDrawTotalMaxX = Number.MIN_VALUE;\n        let clippedDrawTotalMaxY = Number.MIN_VALUE;\n        const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n        for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n            const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n            const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n            const drawableVertexes = model.getDrawableVertices(drawableIndex);\n            let minX = Number.MAX_VALUE;\n            let minY = Number.MAX_VALUE;\n            let maxX = -Number.MAX_VALUE;\n            let maxY = -Number.MAX_VALUE;\n            const loop = drawableVertexCount * Constant.vertexStep;\n            for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n                const x = drawableVertexes[pi];\n                const y = drawableVertexes[pi + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n            if (minX == Number.MAX_VALUE) {\n                continue;\n            }\n            if (minX < clippedDrawTotalMinX) {\n                clippedDrawTotalMinX = minX;\n            }\n            if (minY < clippedDrawTotalMinY) {\n                clippedDrawTotalMinY = minY;\n            }\n            if (maxX > clippedDrawTotalMaxX) {\n                clippedDrawTotalMaxX = maxX;\n            }\n            if (maxY > clippedDrawTotalMaxY) {\n                clippedDrawTotalMaxY = maxY;\n            }\n            if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n                clippingContext._allClippedDrawRect.x = 0.0;\n                clippingContext._allClippedDrawRect.y = 0.0;\n                clippingContext._allClippedDrawRect.width = 0.0;\n                clippingContext._allClippedDrawRect.height = 0.0;\n                clippingContext._isUsing = false;\n            }\n            else {\n                clippingContext._isUsing = true;\n                const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n                const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n                clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.width = w;\n                clippingContext._allClippedDrawRect.height = h;\n            }\n        }\n    }\n    getClippingContextListForDraw() {\n        return this._clippingContextListForDraw;\n    }\n    getClippingMaskBufferSize() {\n        return this._clippingMaskBufferSize;\n    }\n    getRenderTextureCount() {\n        return this._renderTextureCount;\n    }\n    getChannelFlagAsColor(channelNo) {\n        return this._channelColors.at(channelNo);\n    }\n    setClippingMaskBufferSize(size) {\n        this._clippingMaskBufferSize = size;\n    }\n}\n","import { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismBlendMode } from './cubismrenderer';\nlet s_instance;\nconst ShaderCount = 10;\nexport class CubismShader_WebGL {\n    constructor() {\n        this._shaderSets = new csmVector();\n    }\n    release() {\n        this.releaseShaderProgram();\n    }\n    setupShaderProgramForDraw(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            CubismLogError('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        let srcColor;\n        let dstColor;\n        let srcAlpha;\n        let dstAlpha;\n        const masked = renderer.getClippingContextBufferForDraw() != null;\n        const invertedMask = model.getDrawableInvertedMaskBit(index);\n        const offset = masked ? (invertedMask ? 2 : 1) : 0;\n        let shaderSet;\n        switch (model.getDrawableBlendMode(index)) {\n            case CubismBlendMode.CubismBlendMode_Normal:\n            default:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ONE;\n                dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n                break;\n            case CubismBlendMode.CubismBlendMode_Additive:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_AddPremultipliedAlpha + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n            case CubismBlendMode.CubismBlendMode_Multiplicative:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_MultPremultipliedAlpha + offset);\n                srcColor = this.gl.DST_COLOR;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (masked) {\n            this.gl.activeTexture(this.gl.TEXTURE1);\n            const tex = renderer\n                .getClippingContextBufferForDraw()\n                .getClippingManager()\n                .getColorBuffer()\n                .at(renderer.getClippingContextBufferForDraw()._bufferIndex);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n            this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n            this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray());\n            const channelIndex = renderer.getClippingContextBufferForDraw()._layoutChannelIndex;\n            const colorChannel = renderer\n                .getClippingContextBufferForDraw()\n                .getClippingManager()\n                .getChannelFlagAsColor(channelIndex);\n            this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        }\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer\n            .getBindedTextures()\n            .getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        const matrix4x4 = renderer.getMvpMatrix();\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        const baseColor = renderer.getModelColorWithOpacity(model.getDrawableOpacity(index));\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.r, baseColor.g, baseColor.b, baseColor.a);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    setupShaderProgramForMask(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            CubismLogError('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        const shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_SetupMask);\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer\n            .getBindedTextures()\n            .getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const context = renderer.getClippingContextBufferForMask();\n        const channelIndex = renderer.getClippingContextBufferForMask()._layoutChannelIndex;\n        const colorChannel = renderer\n            .getClippingContextBufferForMask()\n            .getClippingManager()\n            .getChannelFlagAsColor(channelIndex);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForMask()._matrixForMask.getArray());\n        const rect = renderer.getClippingContextBufferForMask()._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2.0 - 1.0, rect.y * 2.0 - 1.0, rect.getRight() * 2.0 - 1.0, rect.getBottom() * 2.0 - 1.0);\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        const srcColor = this.gl.ZERO;\n        const dstColor = this.gl.ONE_MINUS_SRC_COLOR;\n        const srcAlpha = this.gl.ZERO;\n        const dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    releaseShaderProgram() {\n        for (let i = 0; i < this._shaderSets.getSize(); i++) {\n            this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\n            this._shaderSets.at(i).shaderProgram = 0;\n            this._shaderSets.set(i, void 0);\n            this._shaderSets.set(i, null);\n        }\n    }\n    generateShaders() {\n        for (let i = 0; i < ShaderCount; i++) {\n            this._shaderSets.pushBack(new CubismShaderSet());\n        }\n        this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n        this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n        this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n        this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n        this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        this._shaderSets.at(0).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_position');\n        this._shaderSets.at(0).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 's_texture0');\n        this._shaderSets.at(0).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(0).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(0).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(0).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(0).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(1).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_position');\n        this._shaderSets.at(1).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 's_texture0');\n        this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_matrix');\n        this._shaderSets.at(1).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(1).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(1).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(2).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_position');\n        this._shaderSets.at(2).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture0');\n        this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture1');\n        this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_matrix');\n        this._shaderSets.at(2).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(2).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(2).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(2).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(2).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(3).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_position');\n        this._shaderSets.at(3).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture0');\n        this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture1');\n        this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_matrix');\n        this._shaderSets.at(3).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(3).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(3).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(3).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(3).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(4).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_position');\n        this._shaderSets.at(4).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 's_texture0');\n        this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_matrix');\n        this._shaderSets.at(4).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(4).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(4).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(5).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_position');\n        this._shaderSets.at(5).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture0');\n        this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture1');\n        this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_matrix');\n        this._shaderSets.at(5).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(5).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(5).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(5).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(5).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(6).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_position');\n        this._shaderSets.at(6).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture0');\n        this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture1');\n        this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_matrix');\n        this._shaderSets.at(6).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(6).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(6).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(6).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(6).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(7).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_position');\n        this._shaderSets.at(7).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 's_texture0');\n        this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_matrix');\n        this._shaderSets.at(7).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(7).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(7).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(8).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_position');\n        this._shaderSets.at(8).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture0');\n        this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture1');\n        this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_matrix');\n        this._shaderSets.at(8).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(8).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(8).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(8).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(8).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(9).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_position');\n        this._shaderSets.at(9).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture0');\n        this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture1');\n        this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_matrix');\n        this._shaderSets.at(9).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(9).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(9).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(9).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(9).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_screenColor');\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n        let shaderProgram = this.gl.createProgram();\n        let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n        if (!vertShader) {\n            CubismLogError('Vertex shader compile error!');\n            return 0;\n        }\n        let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n        if (!fragShader) {\n            CubismLogError('Vertex shader compile error!');\n            return 0;\n        }\n        this.gl.attachShader(shaderProgram, vertShader);\n        this.gl.attachShader(shaderProgram, fragShader);\n        this.gl.linkProgram(shaderProgram);\n        const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n        if (!linkStatus) {\n            CubismLogError('Failed to link program: {0}', shaderProgram);\n            this.gl.deleteShader(vertShader);\n            vertShader = 0;\n            this.gl.deleteShader(fragShader);\n            fragShader = 0;\n            if (shaderProgram) {\n                this.gl.deleteProgram(shaderProgram);\n                shaderProgram = 0;\n            }\n            return 0;\n        }\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n        const source = shaderSource;\n        const shader = this.gl.createShader(shaderType);\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n        if (!shader) {\n            const log = this.gl.getShaderInfoLog(shader);\n            CubismLogError('Shader compile log: {0} ', log);\n        }\n        const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n        if (!status) {\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n}\nexport class CubismShaderManager_WebGL {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new CubismShaderManager_WebGL();\n        }\n        return s_instance;\n    }\n    static deleteInstance() {\n        if (s_instance) {\n            s_instance.release();\n            s_instance = null;\n        }\n    }\n    constructor() {\n        this._shaderMap = new csmMap();\n    }\n    release() {\n        for (const ite = this._shaderMap.begin(); ite.notEqual(this._shaderMap.end()); ite.preIncrement()) {\n            ite.ptr().second.release();\n        }\n        this._shaderMap.clear();\n    }\n    getShader(gl) {\n        return this._shaderMap.getValue(gl);\n    }\n    setGlContext(gl) {\n        if (!this._shaderMap.isExist(gl)) {\n            const instance = new CubismShader_WebGL();\n            instance.setGl(gl);\n            this._shaderMap.setValue(gl, instance);\n        }\n    }\n}\nexport class CubismShaderSet {\n}\nexport var ShaderNames;\n(function (ShaderNames) {\n    ShaderNames[ShaderNames[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames[ShaderNames[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n})(ShaderNames || (ShaderNames = {}));\nexport const vertexShaderSrcSetupMask = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_clipMatrix * a_position;' +\n    '   v_myPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const fragmentShaderSrcsetupMask = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'void main()' +\n    '{' +\n    '   float isInside = ' +\n    '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\n    '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\n    '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\n    '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\n    '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\n    '}';\nexport const vertexShaderSrc = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'uniform mat4       u_matrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const vertexShaderSrcMasked = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform mat4       u_matrix;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_clipPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const fragmentShaderSrcPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform sampler2D  s_texture0;' +\n    'uniform vec4       u_multiplyColor;' +\n    'uniform vec4       u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 color = texColor * u_baseColor;' +\n    '   gl_FragColor = vec4(color.rgb, color.a);' +\n    '}';\nexport const fragmentShaderSrcMaskPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'uniform sampler2D  s_texture1;' +\n    'uniform vec4       u_multiplyColor;' +\n    'uniform vec4       u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 col_formask = texColor * u_baseColor;' +\n    '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    '   col_formask = col_formask * maskVal;' +\n    '   gl_FragColor = col_formask;' +\n    '}';\nexport const fragmentShaderSrcMaskInvertedPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2      v_texCoord;' +\n    'varying vec4      v_clipPos;' +\n    'uniform sampler2D s_texture0;' +\n    'uniform sampler2D s_texture1;' +\n    'uniform vec4      u_channelFlag;' +\n    'uniform vec4      u_baseColor;' +\n    'uniform vec4      u_multiplyColor;' +\n    'uniform vec4      u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 col_formask = texColor * u_baseColor;' +\n    '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    '   col_formask = col_formask * (1.0 - maskVal);' +\n    '   gl_FragColor = col_formask;' +\n    '}';\nimport * as $ from './cubismshader_webgl';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismShaderSet = $.CubismShaderSet;\n    Live2DCubismFramework.CubismShader_WebGL = $.CubismShader_WebGL;\n    Live2DCubismFramework.CubismShaderManager_WebGL = $.CubismShaderManager_WebGL;\n    Live2DCubismFramework.ShaderNames = $.ShaderNames;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismClippingManager } from './cubismclippingmanager';\nimport { CubismClippingContext, CubismRenderer } from './cubismrenderer';\nimport { CubismShaderManager_WebGL } from './cubismshader_webgl';\nlet s_viewport;\nlet s_fbo;\nexport class CubismClippingManager_WebGL extends CubismClippingManager {\n    getMaskRenderTexture() {\n        if (this._maskTexture && this._maskTexture.textures != null) {\n            this._maskTexture.frameNo = this._currentFrameNo;\n        }\n        else {\n            if (this._maskRenderTextures != null) {\n                this._maskRenderTextures.clear();\n            }\n            this._maskRenderTextures = new csmVector();\n            if (this._maskColorBuffers != null) {\n                this._maskColorBuffers.clear();\n            }\n            this._maskColorBuffers = new csmVector();\n            const size = this._clippingMaskBufferSize;\n            for (let index = 0; index < this._renderTextureCount; index++) {\n                this._maskColorBuffers.pushBack(this.gl.createTexture());\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._maskColorBuffers.at(index));\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n                this._maskRenderTextures.pushBack(this.gl.createFramebuffer());\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTextures.at(index));\n                this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._maskColorBuffers.at(index), 0);\n            }\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n            this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, this._maskRenderTextures);\n        }\n        return this._maskTexture.textures;\n    }\n    setGL(gl) {\n        this.gl = gl;\n    }\n    constructor() {\n        super(CubismClippingContext_WebGL);\n    }\n    setupClippingContext(model, renderer) {\n        this._currentFrameNo++;\n        let usingClipCount = 0;\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++;\n            }\n        }\n        if (usingClipCount > 0) {\n            this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n            this._currentMaskRenderTexture = this.getMaskRenderTexture().at(0);\n            renderer.preDraw();\n            this.setupLayoutBounds(usingClipCount);\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                this._clearedFrameBufferFlags = new csmVector(this._renderTextureCount);\n            }\n            for (let index = 0; index < this._clearedFrameBufferFlags.getSize(); index++) {\n                this._clearedFrameBufferFlags.set(index, false);\n            }\n            for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClipedDrawRect = clipContext._allClippedDrawRect;\n                const layoutBoundsOnTex01 = clipContext._layoutBounds;\n                const margin = 0.05;\n                let scaleX = 0;\n                let scaleY = 0;\n                const clipContextRenderTexture = this.getMaskRenderTexture().at(clipContext._bufferIndex);\n                if (this._currentMaskRenderTexture != clipContextRenderTexture) {\n                    this._currentMaskRenderTexture = clipContextRenderTexture;\n                    renderer.preDraw();\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n                }\n                this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n                this._tmpBoundsOnModel.expand(allClipedDrawRect.width * margin, allClipedDrawRect.height * margin);\n                scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                {\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        this._tmpMatrix.translateRelative(-1.0, -1.0);\n                        this._tmpMatrix.scaleRelative(2.0, 2.0);\n                    }\n                    {\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY);\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    }\n                    this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n                }\n                {\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY);\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    }\n                    this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n                }\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n                const clipDrawCount = clipContext._clippingIdCount;\n                for (let i = 0; i < clipDrawCount; i++) {\n                    const clipDrawIndex = clipContext._clippingIdList[i];\n                    if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                        continue;\n                    }\n                    renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n                    if (!this._clearedFrameBufferFlags.at(clipContext._bufferIndex)) {\n                        this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                        this._clearedFrameBufferFlags.set(clipContext._bufferIndex, true);\n                    }\n                    renderer.setClippingContextBufferForMask(clipContext);\n                    renderer.drawMeshWebGL(model, clipDrawIndex);\n                }\n            }\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n            renderer.setClippingContextBufferForMask(null);\n            this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n        }\n    }\n    getColorBuffer() {\n        return this._maskColorBuffers;\n    }\n    getClippingMaskCount() {\n        return this._clippingContextListForMask.getSize();\n    }\n}\nexport class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n        this.frameNo = frameNo;\n        this.textures = texture;\n    }\n}\nexport class CubismClippingContext_WebGL extends CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n        super(clippingDrawableIndices, clipCount);\n        this._owner = manager;\n    }\n    getClippingManager() {\n        return this._owner;\n    }\n    setGl(gl) {\n        this._owner.setGL(gl);\n    }\n}\nexport class CubismRendererProfile_WebGL {\n    setGlEnable(index, enabled) {\n        if (enabled)\n            this.gl.enable(index);\n        else\n            this.gl.disable(index);\n    }\n    setGlEnableVertexAttribArray(index, enabled) {\n        if (enabled)\n            this.gl.enableVertexAttribArray(index);\n        else\n            this.gl.disableVertexAttribArray(index);\n    }\n    save() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        this._lastArrayBufferBinding = this.gl.getParameter(this.gl.ARRAY_BUFFER_BINDING);\n        this._lastElementArrayBufferBinding = this.gl.getParameter(this.gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this._lastProgram = this.gl.getParameter(this.gl.CURRENT_PROGRAM);\n        this._lastActiveTexture = this.gl.getParameter(this.gl.ACTIVE_TEXTURE);\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        this._lastTexture1Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this._lastTexture0Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this._lastVertexAttribArrayEnabled[0] = this.gl.getVertexAttrib(0, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[1] = this.gl.getVertexAttrib(1, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[2] = this.gl.getVertexAttrib(2, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[3] = this.gl.getVertexAttrib(3, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastScissorTest = this.gl.isEnabled(this.gl.SCISSOR_TEST);\n        this._lastStencilTest = this.gl.isEnabled(this.gl.STENCIL_TEST);\n        this._lastDepthTest = this.gl.isEnabled(this.gl.DEPTH_TEST);\n        this._lastCullFace = this.gl.isEnabled(this.gl.CULL_FACE);\n        this._lastBlend = this.gl.isEnabled(this.gl.BLEND);\n        this._lastFrontFace = this.gl.getParameter(this.gl.FRONT_FACE);\n        this._lastColorMask = this.gl.getParameter(this.gl.COLOR_WRITEMASK);\n        this._lastBlending[0] = this.gl.getParameter(this.gl.BLEND_SRC_RGB);\n        this._lastBlending[1] = this.gl.getParameter(this.gl.BLEND_DST_RGB);\n        this._lastBlending[2] = this.gl.getParameter(this.gl.BLEND_SRC_ALPHA);\n        this._lastBlending[3] = this.gl.getParameter(this.gl.BLEND_DST_ALPHA);\n        this._lastFBO = this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n        this._lastViewport = this.gl.getParameter(this.gl.VIEWPORT);\n    }\n    restore() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        this.gl.useProgram(this._lastProgram);\n        this.setGlEnableVertexAttribArray(0, this._lastVertexAttribArrayEnabled[0]);\n        this.setGlEnableVertexAttribArray(1, this._lastVertexAttribArrayEnabled[1]);\n        this.setGlEnableVertexAttribArray(2, this._lastVertexAttribArrayEnabled[2]);\n        this.setGlEnableVertexAttribArray(3, this._lastVertexAttribArrayEnabled[3]);\n        this.setGlEnable(this.gl.SCISSOR_TEST, this._lastScissorTest);\n        this.setGlEnable(this.gl.STENCIL_TEST, this._lastStencilTest);\n        this.setGlEnable(this.gl.DEPTH_TEST, this._lastDepthTest);\n        this.setGlEnable(this.gl.CULL_FACE, this._lastCullFace);\n        this.setGlEnable(this.gl.BLEND, this._lastBlend);\n        this.gl.frontFace(this._lastFrontFace);\n        this.gl.colorMask(this._lastColorMask[0], this._lastColorMask[1], this._lastColorMask[2], this._lastColorMask[3]);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this._lastArrayBufferBinding);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this._lastElementArrayBufferBinding);\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture1Binding2D);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture0Binding2D);\n        this.gl.activeTexture(this._lastActiveTexture);\n        this.gl.blendFuncSeparate(this._lastBlending[0], this._lastBlending[1], this._lastBlending[2], this._lastBlending[3]);\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n    constructor() {\n        this._lastVertexAttribArrayEnabled = new Array(4);\n        this._lastColorMask = new Array(4);\n        this._lastBlending = new Array(4);\n        this._lastViewport = new Array(4);\n    }\n}\nexport class CubismRenderer_WebGL extends CubismRenderer {\n    initialize(model, maskBufferCount = 1) {\n        if (model.isUsingMasking()) {\n            this._clippingManager = new CubismClippingManager_WebGL();\n            this._clippingManager.initialize(model, maskBufferCount);\n        }\n        this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\n        super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n        this._textures.setValue(modelTextureNo, glTexture);\n    }\n    getBindedTextures() {\n        return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n        if (!this._model.isUsingMasking()) {\n            return;\n        }\n        const renderTextureCount = this._clippingManager.getRenderTextureCount();\n        this._clippingManager.release();\n        this._clippingManager = void 0;\n        this._clippingManager = null;\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.setClippingMaskBufferSize(size);\n        this._clippingManager.initialize(this.getModel(), renderTextureCount);\n    }\n    getClippingMaskBufferSize() {\n        return this._model.isUsingMasking()\n            ? this._clippingManager.getClippingMaskBufferSize()\n            : -1;\n    }\n    getRenderTextureCount() {\n        return this._model.isUsingMasking()\n            ? this._clippingManager.getRenderTextureCount()\n            : -1;\n    }\n    constructor() {\n        super();\n        this._clippingContextBufferForMask = null;\n        this._clippingContextBufferForDraw = null;\n        this._rendererProfile = new CubismRendererProfile_WebGL();\n        this.firstDraw = true;\n        this._textures = new csmMap();\n        this._sortedDrawableIndexList = new csmVector();\n        this._bufferData = {\n            vertex: (WebGLBuffer = null),\n            uv: (WebGLBuffer = null),\n            index: (WebGLBuffer = null)\n        };\n        this._textures.prepareCapacity(32, true);\n    }\n    release() {\n        if (this._clippingManager) {\n            this._clippingManager.release();\n            this._clippingManager = void 0;\n            this._clippingManager = null;\n        }\n        if (this.gl == null) {\n            return;\n        }\n        this.gl.deleteBuffer(this._bufferData.vertex);\n        this._bufferData.vertex = null;\n        this.gl.deleteBuffer(this._bufferData.uv);\n        this._bufferData.uv = null;\n        this.gl.deleteBuffer(this._bufferData.index);\n        this._bufferData.index = null;\n        this._bufferData = null;\n        this._textures = null;\n    }\n    doDrawModel() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        if (this._clippingManager != null) {\n            this.preDraw();\n            if (this.isUsingHighPrecisionMask()) {\n                this._clippingManager.setupMatrixForHighPrecision(this.getModel(), false);\n            }\n            else {\n                this._clippingManager.setupClippingContext(this.getModel(), this);\n            }\n        }\n        this.preDraw();\n        const drawableCount = this.getModel().getDrawableCount();\n        const renderOrder = this.getModel().getDrawableRenderOrders();\n        for (let i = 0; i < drawableCount; ++i) {\n            const order = renderOrder[i];\n            this._sortedDrawableIndexList.set(order, i);\n        }\n        for (let i = 0; i < drawableCount; ++i) {\n            const drawableIndex = this._sortedDrawableIndexList.at(i);\n            if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n                continue;\n            }\n            const clipContext = this._clippingManager != null\n                ? this._clippingManager\n                    .getClippingContextListForDraw()\n                    .at(drawableIndex)\n                : null;\n            if (clipContext != null && this.isUsingHighPrecisionMask()) {\n                if (clipContext._isUsing) {\n                    this.gl.viewport(0, 0, this._clippingManager.getClippingMaskBufferSize(), this._clippingManager.getClippingMaskBufferSize());\n                    this.preDraw();\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, clipContext\n                        .getClippingManager()\n                        .getMaskRenderTexture()\n                        .at(clipContext._bufferIndex));\n                    this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                }\n                {\n                    const clipDrawCount = clipContext._clippingIdCount;\n                    for (let index = 0; index < clipDrawCount; index++) {\n                        const clipDrawIndex = clipContext._clippingIdList[index];\n                        if (!this._model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                            continue;\n                        }\n                        this.setIsCulling(this._model.getDrawableCulling(clipDrawIndex) != false);\n                        this.setClippingContextBufferForMask(clipContext);\n                        this.drawMeshWebGL(this._model, clipDrawIndex);\n                    }\n                }\n                {\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n                    this.setClippingContextBufferForMask(null);\n                    this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n                    this.preDraw();\n                }\n            }\n            this.setClippingContextBufferForDraw(clipContext);\n            this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n            this.drawMeshWebGL(this._model, drawableIndex);\n        }\n    }\n    drawMeshWebGL(model, index) {\n        if (this.isCulling()) {\n            this.gl.enable(this.gl.CULL_FACE);\n        }\n        else {\n            this.gl.disable(this.gl.CULL_FACE);\n        }\n        this.gl.frontFace(this.gl.CCW);\n        if (this.isGeneratingMask()) {\n            CubismShaderManager_WebGL.getInstance()\n                .getShader(this.gl)\n                .setupShaderProgramForMask(this, model, index);\n        }\n        else {\n            CubismShaderManager_WebGL.getInstance()\n                .getShader(this.gl)\n                .setupShaderProgramForDraw(this, model, index);\n        }\n        {\n            const indexCount = model.getDrawableVertexIndexCount(index);\n            this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n        }\n        this.gl.useProgram(null);\n        this.setClippingContextBufferForDraw(null);\n        this.setClippingContextBufferForMask(null);\n    }\n    saveProfile() {\n        this._rendererProfile.save();\n    }\n    restoreProfile() {\n        this._rendererProfile.restore();\n    }\n    static doStaticRelease() {\n        CubismShaderManager_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n        s_fbo = fbo;\n        s_viewport = viewport;\n    }\n    preDraw() {\n        if (this.firstDraw) {\n            this.firstDraw = false;\n        }\n        this.gl.disable(this.gl.SCISSOR_TEST);\n        this.gl.disable(this.gl.STENCIL_TEST);\n        this.gl.disable(this.gl.DEPTH_TEST);\n        this.gl.frontFace(this.gl.CW);\n        this.gl.enable(this.gl.BLEND);\n        this.gl.colorMask(true, true, true, true);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n        if (this.getAnisotropy() > 0.0 && this._extension) {\n            for (let i = 0; i < this._textures.getSize(); ++i) {\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._textures.getValue(i));\n                this.gl.texParameterf(this.gl.TEXTURE_2D, this._extension.TEXTURE_MAX_ANISOTROPY_EXT, this.getAnisotropy());\n            }\n        }\n    }\n    setClippingContextBufferForMask(clip) {\n        this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n        return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n        this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n        return this._clippingContextBufferForDraw;\n    }\n    isGeneratingMask() {\n        return this.getClippingContextBufferForMask() != null;\n    }\n    startUp(gl) {\n        this.gl = gl;\n        if (this._clippingManager) {\n            this._clippingManager.setGL(gl);\n        }\n        CubismShaderManager_WebGL.getInstance().setGlContext(gl);\n        this._rendererProfile.setGl(gl);\n        this._extension =\n            this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n                this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\n                this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n    }\n}\nCubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n};\nimport * as $ from './cubismrenderer_webgl';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismClippingContext = $.CubismClippingContext_WebGL;\n    Live2DCubismFramework.CubismClippingManager_WebGL = $.CubismClippingManager_WebGL;\n    Live2DCubismFramework.CubismRenderTextureResource = $.CubismRenderTextureResource;\n    Live2DCubismFramework.CubismRenderer_WebGL = $.CubismRenderer_WebGL;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismBlendMode, CubismTextureColor } from '../rendering/cubismrenderer';\nimport { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CSM_ASSERT, CubismLogWarning } from '../utils/cubismdebug';\nexport class ParameterRepeatData {\n    constructor(isOverridden = false, isParameterRepeated = false) {\n        this.isOverridden = isOverridden;\n        this.isParameterRepeated = isParameterRepeated;\n    }\n}\nexport class DrawableColorData {\n    constructor(isOverridden = false, color = new CubismTextureColor()) {\n        this.isOverridden = isOverridden;\n        this.color = color;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class PartColorData {\n    constructor(isOverridden = false, color = new CubismTextureColor()) {\n        this.isOverridden = isOverridden;\n        this.color = color;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class DrawableCullingData {\n    constructor(isOverridden = false, isCulling = false) {\n        this.isOverridden = isOverridden;\n        this.isCulling = isCulling;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class CubismModel {\n    update() {\n        this._model.update();\n        this._model.drawables.resetDynamicFlags();\n    }\n    getPixelsPerUnit() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasWidth() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return (this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit);\n    }\n    getCanvasHeight() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return (this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit);\n    }\n    saveParameters() {\n        const parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        for (let i = 0; i < parameterCount; ++i) {\n            if (i < savedParameterCount) {\n                this._savedParameters.set(i, this._parameterValues[i]);\n            }\n            else {\n                this._savedParameters.pushBack(this._parameterValues[i]);\n            }\n        }\n    }\n    getMultiplyColor(index) {\n        if (this.getOverrideFlagForModelMultiplyColors() ||\n            this.getOverrideFlagForDrawableMultiplyColors(index)) {\n            return this._userMultiplyColors.at(index).color;\n        }\n        const color = this.getDrawableMultiplyColor(index);\n        return color;\n    }\n    getScreenColor(index) {\n        if (this.getOverrideFlagForModelScreenColors() ||\n            this.getOverrideFlagForDrawableScreenColors(index)) {\n            return this._userScreenColors.at(index).color;\n        }\n        const color = this.getDrawableScreenColor(index);\n        return color;\n    }\n    setMultiplyColorByTextureColor(index, color) {\n        this.setMultiplyColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    setMultiplyColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userMultiplyColors.at(index).color.r = r;\n        this._userMultiplyColors.at(index).color.g = g;\n        this._userMultiplyColors.at(index).color.b = b;\n        this._userMultiplyColors.at(index).color.a = a;\n    }\n    setScreenColorByTextureColor(index, color) {\n        this.setScreenColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    setScreenColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userScreenColors.at(index).color.r = r;\n        this._userScreenColors.at(index).color.g = g;\n        this._userScreenColors.at(index).color.b = b;\n        this._userScreenColors.at(index).color.a = a;\n    }\n    getPartMultiplyColor(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).color;\n    }\n    getPartScreenColor(partIndex) {\n        return this._userPartScreenColors.at(partIndex).color;\n    }\n    setPartColor(partIndex, r, g, b, a, partColors, drawableColors) {\n        partColors.at(partIndex).color.r = r;\n        partColors.at(partIndex).color.g = g;\n        partColors.at(partIndex).color.b = b;\n        partColors.at(partIndex).color.a = a;\n        if (partColors.at(partIndex).isOverridden) {\n            for (let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i) {\n                const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n                drawableColors.at(drawableIndex).color.r = r;\n                drawableColors.at(drawableIndex).color.g = g;\n                drawableColors.at(drawableIndex).color.b = b;\n                drawableColors.at(drawableIndex).color.a = a;\n            }\n        }\n    }\n    setPartMultiplyColorByTextureColor(partIndex, color) {\n        this.setPartMultiplyColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    setPartMultiplyColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    setPartScreenColorByTextureColor(partIndex, color) {\n        this.setPartScreenColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    setPartScreenColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartScreenColors, this._userScreenColors);\n    }\n    getOverrideFlagForModelParameterRepeat() {\n        return this._isOverriddenParameterRepeat;\n    }\n    setOverrideFlagForModelParameterRepeat(isRepeat) {\n        this._isOverriddenParameterRepeat = isRepeat;\n    }\n    getOverrideFlagForParameterRepeat(parameterIndex) {\n        return this._userParameterRepeatDataList.at(parameterIndex).isOverridden;\n    }\n    setOverrideFlagForParameterRepeat(parameterIndex, value) {\n        this._userParameterRepeatDataList.at(parameterIndex).isOverridden = value;\n    }\n    getRepeatFlagForParameterRepeat(parameterIndex) {\n        return this._userParameterRepeatDataList.at(parameterIndex)\n            .isParameterRepeated;\n    }\n    setRepeatFlagForParameterRepeat(parameterIndex, value) {\n        this._userParameterRepeatDataList.at(parameterIndex).isParameterRepeated =\n            value;\n    }\n    getOverwriteFlagForModelMultiplyColors() {\n        CubismLogWarning('getOverwriteFlagForModelMultiplyColors() is a deprecated function. Please use getOverrideFlagForModelMultiplyColors().');\n        return this.getOverrideFlagForModelMultiplyColors();\n    }\n    getOverrideFlagForModelMultiplyColors() {\n        return this._isOverriddenModelMultiplyColors;\n    }\n    getOverwriteFlagForModelScreenColors() {\n        CubismLogWarning('getOverwriteFlagForModelScreenColors() is a deprecated function. Please use getOverrideFlagForModelScreenColors().');\n        return this.getOverrideFlagForModelScreenColors();\n    }\n    getOverrideFlagForModelScreenColors() {\n        return this._isOverriddenModelScreenColors;\n    }\n    setOverwriteFlagForModelMultiplyColors(value) {\n        CubismLogWarning('setOverwriteFlagForModelMultiplyColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelMultiplyColors(value: boolean).');\n        this.setOverrideFlagForModelMultiplyColors(value);\n    }\n    setOverrideFlagForModelMultiplyColors(value) {\n        this._isOverriddenModelMultiplyColors = value;\n    }\n    setOverwriteFlagForModelScreenColors(value) {\n        CubismLogWarning('setOverwriteFlagForModelScreenColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelScreenColors(value: boolean).');\n        this.setOverrideFlagForModelScreenColors(value);\n    }\n    setOverrideFlagForModelScreenColors(value) {\n        this._isOverriddenModelScreenColors = value;\n    }\n    getOverwriteFlagForDrawableMultiplyColors(drawableindex) {\n        CubismLogWarning('getOverwriteFlagForDrawableMultiplyColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableMultiplyColors(drawableindex: number).');\n        return this.getOverrideFlagForDrawableMultiplyColors(drawableindex);\n    }\n    getOverrideFlagForDrawableMultiplyColors(drawableindex) {\n        return this._userMultiplyColors.at(drawableindex).isOverridden;\n    }\n    getOverwriteFlagForDrawableScreenColors(drawableindex) {\n        CubismLogWarning('getOverwriteFlagForDrawableScreenColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableScreenColors(drawableindex: number).');\n        return this.getOverrideFlagForDrawableScreenColors(drawableindex);\n    }\n    getOverrideFlagForDrawableScreenColors(drawableindex) {\n        return this._userScreenColors.at(drawableindex).isOverridden;\n    }\n    setOverwriteFlagForDrawableMultiplyColors(drawableindex, value) {\n        CubismLogWarning('setOverwriteFlagForDrawableMultiplyColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableMultiplyColors(drawableindex: number, value: boolean).');\n        this.setOverrideFlagForDrawableMultiplyColors(drawableindex, value);\n    }\n    setOverrideFlagForDrawableMultiplyColors(drawableindex, value) {\n        this._userMultiplyColors.at(drawableindex).isOverridden = value;\n    }\n    setOverwriteFlagForDrawableScreenColors(drawableindex, value) {\n        CubismLogWarning('setOverwriteFlagForDrawableScreenColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableScreenColors(drawableindex: number, value: boolean).');\n        this.setOverrideFlagForDrawableScreenColors(drawableindex, value);\n    }\n    setOverrideFlagForDrawableScreenColors(drawableindex, value) {\n        this._userScreenColors.at(drawableindex).isOverridden = value;\n    }\n    getOverwriteColorForPartMultiplyColors(partIndex) {\n        CubismLogWarning('getOverwriteColorForPartMultiplyColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartMultiplyColors(partIndex: number).');\n        return this.getOverrideColorForPartMultiplyColors(partIndex);\n    }\n    getOverrideColorForPartMultiplyColors(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).isOverridden;\n    }\n    getOverwriteColorForPartScreenColors(partIndex) {\n        CubismLogWarning('getOverwriteColorForPartScreenColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartScreenColors(partIndex: number).');\n        return this.getOverrideColorForPartScreenColors(partIndex);\n    }\n    getOverrideColorForPartScreenColors(partIndex) {\n        return this._userPartScreenColors.at(partIndex).isOverridden;\n    }\n    setOverwriteColorForPartColors(partIndex, value, partColors, drawableColors) {\n        CubismLogWarning('setOverwriteColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>) is a deprecated function. Please use setOverrideColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>).');\n        this.setOverrideColorForPartColors(partIndex, value, partColors, drawableColors);\n    }\n    setOverrideColorForPartColors(partIndex, value, partColors, drawableColors) {\n        partColors.at(partIndex).isOverridden = value;\n        for (let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i) {\n            const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n            drawableColors.at(drawableIndex).isOverridden = value;\n            if (value) {\n                drawableColors.at(drawableIndex).color.r =\n                    partColors.at(partIndex).color.r;\n                drawableColors.at(drawableIndex).color.g =\n                    partColors.at(partIndex).color.g;\n                drawableColors.at(drawableIndex).color.b =\n                    partColors.at(partIndex).color.b;\n                drawableColors.at(drawableIndex).color.a =\n                    partColors.at(partIndex).color.a;\n            }\n        }\n    }\n    setOverwriteColorForPartMultiplyColors(partIndex, value) {\n        CubismLogWarning('setOverwriteColorForPartMultiplyColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartMultiplyColors(partIndex: number, value: boolean).');\n        this.setOverrideColorForPartMultiplyColors(partIndex, value);\n    }\n    setOverrideColorForPartMultiplyColors(partIndex, value) {\n        this._userPartMultiplyColors.at(partIndex).isOverridden = value;\n        this.setOverrideColorForPartColors(partIndex, value, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    setOverwriteColorForPartScreenColors(partIndex, value) {\n        CubismLogWarning('setOverwriteColorForPartScreenColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartScreenColors(partIndex: number, value: boolean).');\n        this.setOverrideColorForPartScreenColors(partIndex, value);\n    }\n    setOverrideColorForPartScreenColors(partIndex, value) {\n        this._userPartScreenColors.at(partIndex).isOverridden = value;\n        this.setOverrideColorForPartColors(partIndex, value, this._userPartScreenColors, this._userScreenColors);\n    }\n    getDrawableCulling(drawableIndex) {\n        if (this.getOverrideFlagForModelCullings() ||\n            this.getOverrideFlagForDrawableCullings(drawableIndex)) {\n            return this._userCullings.at(drawableIndex).isCulling;\n        }\n        const constantFlags = this._model.drawables.constantFlags;\n        return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    setDrawableCulling(drawableIndex, isCulling) {\n        this._userCullings.at(drawableIndex).isCulling = isCulling;\n    }\n    getOverwriteFlagForModelCullings() {\n        CubismLogWarning('getOverwriteFlagForModelCullings() is a deprecated function. Please use getOverrideFlagForModelCullings().');\n        return this.getOverrideFlagForModelCullings();\n    }\n    getOverrideFlagForModelCullings() {\n        return this._isOverriddenCullings;\n    }\n    setOverwriteFlagForModelCullings(isOverriddenCullings) {\n        CubismLogWarning('setOverwriteFlagForModelCullings(isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForModelCullings(isOverriddenCullings: boolean).');\n        this.setOverrideFlagForModelCullings(isOverriddenCullings);\n    }\n    setOverrideFlagForModelCullings(isOverriddenCullings) {\n        this._isOverriddenCullings = isOverriddenCullings;\n    }\n    getOverwriteFlagForDrawableCullings(drawableIndex) {\n        CubismLogWarning('getOverwriteFlagForDrawableCullings(drawableIndex: number) is a deprecated function. Please use getOverrideFlagForDrawableCullings(drawableIndex: number).');\n        return this.getOverrideFlagForDrawableCullings(drawableIndex);\n    }\n    getOverrideFlagForDrawableCullings(drawableIndex) {\n        return this._userCullings.at(drawableIndex).isOverridden;\n    }\n    setOverwriteFlagForDrawableCullings(drawableIndex, isOverriddenCullings) {\n        CubismLogWarning('setOverwriteFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean).');\n        this.setOverrideFlagForDrawableCullings(drawableIndex, isOverriddenCullings);\n    }\n    setOverrideFlagForDrawableCullings(drawableIndex, isOverriddenCullings) {\n        this._userCullings.at(drawableIndex).isOverridden = isOverriddenCullings;\n    }\n    getModelOapcity() {\n        return this._modelOpacity;\n    }\n    setModelOapcity(value) {\n        this._modelOpacity = value;\n    }\n    getModel() {\n        return this._model;\n    }\n    getPartIndex(partId) {\n        let partIndex;\n        const partCount = this._model.parts.count;\n        for (partIndex = 0; partIndex < partCount; ++partIndex) {\n            if (partId == this._partIds.at(partIndex)) {\n                return partIndex;\n            }\n        }\n        if (this._notExistPartId.isExist(partId)) {\n            return this._notExistPartId.getValue(partId);\n        }\n        partIndex = partCount + this._notExistPartId.getSize();\n        this._notExistPartId.setValue(partId, partIndex);\n        this._notExistPartOpacities.appendKey(partIndex);\n        return partIndex;\n    }\n    getPartId(partIndex) {\n        const partId = this._model.parts.ids[partIndex];\n        return CubismFramework.getIdManager().getId(partId);\n    }\n    getPartCount() {\n        const partCount = this._model.parts.count;\n        return partCount;\n    }\n    getPartParentPartIndices() {\n        const parentIndices = this._model.parts.parentIndices;\n        return parentIndices;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            this._notExistPartOpacities.setValue(partIndex, opacity);\n            return;\n        }\n        CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n        this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return;\n        }\n        this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            return this._notExistPartOpacities.getValue(partIndex);\n        }\n        CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n        return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return 0;\n        }\n        return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n        let parameterIndex;\n        const idCount = this._model.parameters.count;\n        for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n            if (parameterId != this._parameterIds.at(parameterIndex)) {\n                continue;\n            }\n            return parameterIndex;\n        }\n        if (this._notExistParameterId.isExist(parameterId)) {\n            return this._notExistParameterId.getValue(parameterId);\n        }\n        parameterIndex =\n            this._model.parameters.count + this._notExistParameterId.getSize();\n        this._notExistParameterId.setValue(parameterId, parameterIndex);\n        this._notExistParameterValues.appendKey(parameterIndex);\n        return parameterIndex;\n    }\n    getParameterCount() {\n        return this._model.parameters.count;\n    }\n    getParameterType(parameterIndex) {\n        return this._model.parameters.types[parameterIndex];\n    }\n    getParameterMaximumValue(parameterIndex) {\n        return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n        return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n        return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterId(parameterIndex) {\n        return CubismFramework.getIdManager().getId(this._model.parameters.ids[parameterIndex]);\n    }\n    getParameterValueByIndex(parameterIndex) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return this._notExistParameterValues.getValue(parameterIndex);\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n        const parameterIndex = this.getParameterIndex(parameterId);\n        return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            this._notExistParameterValues.setValue(parameterIndex, weight == 1\n                ? value\n                : this._notExistParameterValues.getValue(parameterIndex) *\n                    (1 - weight) +\n                    value * weight);\n            return;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        if (this.isRepeat(parameterIndex)) {\n            value = this.getParameterRepeatValue(parameterIndex, value);\n        }\n        else {\n            value = this.getParameterClampValue(parameterIndex, value);\n        }\n        this._parameterValues[parameterIndex] =\n            weight == 1\n                ? value\n                : (this._parameterValues[parameterIndex] =\n                    this._parameterValues[parameterIndex] * (1 - weight) +\n                        value * weight);\n    }\n    setParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.addParameterValueByIndex(index, value, weight);\n    }\n    isRepeat(parameterIndex) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return false;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        let isRepeat;\n        if (this._isOverriddenParameterRepeat ||\n            this._userParameterRepeatDataList.at(parameterIndex).isOverridden) {\n            isRepeat =\n                this._userParameterRepeatDataList.at(parameterIndex).isParameterRepeated;\n        }\n        else {\n            isRepeat = this._model.parameters.repeats[parameterIndex] != 0;\n        }\n        return isRepeat;\n    }\n    getParameterRepeatValue(parameterIndex, value) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return value;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        const maxValue = this._model.parameters.maximumValues[parameterIndex];\n        const minValue = this._model.parameters.minimumValues[parameterIndex];\n        const valueSize = maxValue - minValue;\n        if (maxValue < value) {\n            const overValue = CubismMath.mod(value - maxValue, valueSize);\n            if (!Number.isNaN(overValue)) {\n                value = minValue + overValue;\n            }\n            else {\n                value = maxValue;\n            }\n        }\n        if (value < minValue) {\n            const overValue = CubismMath.mod(minValue - value, valueSize);\n            if (!Number.isNaN(overValue)) {\n                value = maxValue - overValue;\n            }\n            else {\n                value = minValue;\n            }\n        }\n        return value;\n    }\n    getParameterClampValue(parameterIndex, value) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return value;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        const maxValue = this._model.parameters.maximumValues[parameterIndex];\n        const minValue = this._model.parameters.minimumValues[parameterIndex];\n        return CubismMath.clamp(value, minValue, maxValue);\n    }\n    getParameterRepeats(parameterIndex) {\n        return this._model.parameters.repeats[parameterIndex] != 0;\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) *\n            (1.0 + (value - 1.0) * weight));\n    }\n    getDrawableIndex(drawableId) {\n        const drawableCount = this._model.drawables.count;\n        for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n            if (this._drawableIds.at(drawableIndex) == drawableId) {\n                return drawableIndex;\n            }\n        }\n        return -1;\n    }\n    getDrawableCount() {\n        const drawableCount = this._model.drawables.count;\n        return drawableCount;\n    }\n    getDrawableId(drawableIndex) {\n        const parameterIds = this._model.drawables.ids;\n        return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\n    }\n    getDrawableRenderOrders() {\n        const renderOrders = this._model.drawables.renderOrders;\n        return renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n        return this.getDrawableTextureIndex(drawableIndex);\n    }\n    getDrawableTextureIndex(drawableIndex) {\n        const textureIndices = this._model.drawables.textureIndices;\n        return textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n        const indexCounts = this._model.drawables.indexCounts;\n        return indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n        const vertexCounts = this._model.drawables.vertexCounts;\n        return vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n        return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n        const indicesArray = this._model.drawables.indices;\n        return indicesArray[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n        const verticesArray = this._model.drawables.vertexPositions;\n        return verticesArray[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n        const uvsArray = this._model.drawables.vertexUvs;\n        return uvsArray[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n        const opacities = this._model.drawables.opacities;\n        return opacities[drawableIndex];\n    }\n    getDrawableMultiplyColor(drawableIndex) {\n        const multiplyColors = this._model.drawables.multiplyColors;\n        const index = drawableIndex * 4;\n        const multiplyColor = new CubismTextureColor();\n        multiplyColor.r = multiplyColors[index];\n        multiplyColor.g = multiplyColors[index + 1];\n        multiplyColor.b = multiplyColors[index + 2];\n        multiplyColor.a = multiplyColors[index + 3];\n        return multiplyColor;\n    }\n    getDrawableScreenColor(drawableIndex) {\n        const screenColors = this._model.drawables.screenColors;\n        const index = drawableIndex * 4;\n        const screenColor = new CubismTextureColor();\n        screenColor.r = screenColors[index];\n        screenColor.g = screenColors[index + 1];\n        screenColor.b = screenColors[index + 2];\n        screenColor.a = screenColors[index + 3];\n        return screenColor;\n    }\n    getDrawableParentPartIndex(drawableIndex) {\n        return this._model.drawables.parentPartIndices[drawableIndex];\n    }\n    getDrawableBlendMode(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex])\n            ? CubismBlendMode.CubismBlendMode_Additive\n            : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex])\n                ? CubismBlendMode.CubismBlendMode_Multiplicative\n                : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n        const masks = this._model.drawables.masks;\n        return masks;\n    }\n    getDrawableMaskCounts() {\n        const maskCounts = this._model.drawables.maskCounts;\n        return maskCounts;\n    }\n    isUsingMasking() {\n        for (let d = 0; d < this._model.drawables.count; ++d) {\n            if (this._model.drawables.maskCounts[d] <= 0) {\n                continue;\n            }\n            return true;\n        }\n        return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagBlendColorDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n        let parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        if (parameterCount > savedParameterCount) {\n            parameterCount = savedParameterCount;\n        }\n        for (let i = 0; i < parameterCount; ++i) {\n            this._parameterValues[i] = this._savedParameters.at(i);\n        }\n    }\n    initialize() {\n        CSM_ASSERT(this._model);\n        this._parameterValues = this._model.parameters.values;\n        this._partOpacities = this._model.parts.opacities;\n        this._parameterMaximumValues = this._model.parameters.maximumValues;\n        this._parameterMinimumValues = this._model.parameters.minimumValues;\n        {\n            const parameterIds = this._model.parameters.ids;\n            const parameterCount = this._model.parameters.count;\n            this._parameterIds.prepareCapacity(parameterCount);\n            this._userParameterRepeatDataList.prepareCapacity(parameterCount);\n            for (let i = 0; i < parameterCount; ++i) {\n                this._parameterIds.pushBack(CubismFramework.getIdManager().getId(parameterIds[i]));\n                this._userParameterRepeatDataList.pushBack(new ParameterRepeatData(false, false));\n            }\n        }\n        const partCount = this._model.parts.count;\n        {\n            const partIds = this._model.parts.ids;\n            this._partIds.prepareCapacity(partCount);\n            for (let i = 0; i < partCount; ++i) {\n                this._partIds.pushBack(CubismFramework.getIdManager().getId(partIds[i]));\n            }\n            this._userPartMultiplyColors.prepareCapacity(partCount);\n            this._userPartScreenColors.prepareCapacity(partCount);\n            this._partChildDrawables.prepareCapacity(partCount);\n        }\n        {\n            const drawableIds = this._model.drawables.ids;\n            const drawableCount = this._model.drawables.count;\n            this._userMultiplyColors.prepareCapacity(drawableCount);\n            this._userScreenColors.prepareCapacity(drawableCount);\n            this._userCullings.prepareCapacity(drawableCount);\n            const userCulling = new DrawableCullingData(false, false);\n            {\n                for (let i = 0; i < partCount; ++i) {\n                    const multiplyColor = new CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new PartColorData(false, multiplyColor);\n                    const userScreenColor = new PartColorData(false, screenColor);\n                    this._userPartMultiplyColors.pushBack(userMultiplyColor);\n                    this._userPartScreenColors.pushBack(userScreenColor);\n                    this._partChildDrawables.pushBack(new csmVector());\n                    this._partChildDrawables.at(i).prepareCapacity(drawableCount);\n                }\n            }\n            {\n                for (let i = 0; i < drawableCount; ++i) {\n                    const multiplyColor = new CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new DrawableColorData(false, multiplyColor);\n                    const userScreenColor = new DrawableColorData(false, screenColor);\n                    this._drawableIds.pushBack(CubismFramework.getIdManager().getId(drawableIds[i]));\n                    this._userMultiplyColors.pushBack(userMultiplyColor);\n                    this._userScreenColors.pushBack(userScreenColor);\n                    this._userCullings.pushBack(userCulling);\n                    const parentIndex = this.getDrawableParentPartIndex(i);\n                    if (parentIndex >= 0) {\n                        this._partChildDrawables.at(parentIndex).pushBack(i);\n                    }\n                }\n            }\n        }\n    }\n    constructor(model) {\n        this._model = model;\n        this._parameterValues = null;\n        this._parameterMaximumValues = null;\n        this._parameterMinimumValues = null;\n        this._partOpacities = null;\n        this._savedParameters = new csmVector();\n        this._parameterIds = new csmVector();\n        this._drawableIds = new csmVector();\n        this._partIds = new csmVector();\n        this._isOverriddenParameterRepeat = true;\n        this._isOverriddenModelMultiplyColors = false;\n        this._isOverriddenModelScreenColors = false;\n        this._isOverriddenCullings = false;\n        this._modelOpacity = 1.0;\n        this._userParameterRepeatDataList = new csmVector();\n        this._userMultiplyColors = new csmVector();\n        this._userScreenColors = new csmVector();\n        this._userCullings = new csmVector();\n        this._userPartMultiplyColors = new csmVector();\n        this._userPartScreenColors = new csmVector();\n        this._partChildDrawables = new csmVector();\n        this._notExistPartId = new csmMap();\n        this._notExistParameterId = new csmMap();\n        this._notExistParameterValues = new csmMap();\n        this._notExistPartOpacities = new csmMap();\n    }\n    release() {\n        this._model.release();\n        this._model = null;\n    }\n}\nimport * as $ from './cubismmodel';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModel = $.CubismModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CSM_ASSERT, CubismLogError } from '../utils/cubismdebug';\nimport { CubismModel } from './cubismmodel';\nexport class CubismMoc {\n    static create(mocBytes, shouldCheckMocConsistency) {\n        let cubismMoc = null;\n        if (shouldCheckMocConsistency) {\n            const consistency = this.hasMocConsistency(mocBytes);\n            if (!consistency) {\n                CubismLogError(`Inconsistent MOC3.`);\n                return cubismMoc;\n            }\n        }\n        const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n        if (moc) {\n            cubismMoc = new CubismMoc(moc);\n            cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(moc, mocBytes);\n        }\n        return cubismMoc;\n    }\n    static delete(moc) {\n        moc._moc._release();\n        moc._moc = null;\n        moc = null;\n    }\n    createModel() {\n        let cubismModel = null;\n        const model = Live2DCubismCore.Model.fromMoc(this._moc);\n        if (model) {\n            cubismModel = new CubismModel(model);\n            cubismModel.initialize();\n            ++this._modelCount;\n        }\n        return cubismModel;\n    }\n    deleteModel(model) {\n        if (model != null) {\n            model.release();\n            model = null;\n            --this._modelCount;\n        }\n    }\n    constructor(moc) {\n        this._moc = moc;\n        this._modelCount = 0;\n        this._mocVersion = 0;\n    }\n    release() {\n        CSM_ASSERT(this._modelCount == 0);\n        this._moc._release();\n        this._moc = null;\n    }\n    getLatestMocVersion() {\n        return Live2DCubismCore.Version.csmGetLatestMocVersion();\n    }\n    getMocVersion() {\n        return this._mocVersion;\n    }\n    static hasMocConsistency(mocBytes) {\n        const isConsistent = Live2DCubismCore.Moc.prototype.hasMocConsistency(mocBytes);\n        return isConsistent === 1 ? true : false;\n    }\n}\nimport * as $ from './cubismmoc';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMoc = $.CubismMoc;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismJson } from '../utils/cubismjson';\nconst Meta = 'Meta';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst UserData = 'UserData';\nconst Target = 'Target';\nconst Id = 'Id';\nconst Value = 'Value';\nexport class CubismModelUserDataJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getUserDataCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(UserDataCount)\n            .toInt();\n    }\n    getTotalUserDataSize() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalUserDataSize)\n            .toInt();\n    }\n    getUserDataTargetType(i) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Target)\n            .getRawString();\n    }\n    getUserDataId(i) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getUserDataValue(i) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Value)\n            .getRawString();\n    }\n}\nimport * as $ from './cubismmodeluserdatajson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserDataJson = $.CubismModelUserDataJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { csmVector } from '../type/csmvector';\nimport { CubismModelUserDataJson } from './cubismmodeluserdatajson';\nconst ArtMesh = 'ArtMesh';\nexport class CubismModelUserDataNode {\n}\nexport class CubismModelUserData {\n    static create(buffer, size) {\n        const ret = new CubismModelUserData();\n        ret.parseUserData(buffer, size);\n        return ret;\n    }\n    static delete(modelUserData) {\n        if (modelUserData != null) {\n            modelUserData.release();\n            modelUserData = null;\n        }\n    }\n    getArtMeshUserDatas() {\n        return this._artMeshUserDataNode;\n    }\n    parseUserData(buffer, size) {\n        let json = new CubismModelUserDataJson(buffer, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        const typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\n        const nodeCount = json.getUserDataCount();\n        for (let i = 0; i < nodeCount; i++) {\n            const addNode = new CubismModelUserDataNode();\n            addNode.targetId = json.getUserDataId(i);\n            addNode.targetType = CubismFramework.getIdManager().getId(json.getUserDataTargetType(i));\n            addNode.value = new csmString(json.getUserDataValue(i));\n            this._userDataNodes.pushBack(addNode);\n            if (addNode.targetType == typeOfArtMesh) {\n                this._artMeshUserDataNode.pushBack(addNode);\n            }\n        }\n        json.release();\n        json = void 0;\n    }\n    constructor() {\n        this._userDataNodes = new csmVector();\n        this._artMeshUserDataNode = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._userDataNodes.getSize(); ++i) {\n            this._userDataNodes.set(i, null);\n        }\n        this._userDataNodes = null;\n    }\n}\nimport * as $ from './cubismmodeluserdata';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserData = $.CubismModelUserData;\n    Live2DCubismFramework.CubismModelUserDataNode = $.CubismModelUserDataNode;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismBreath } from '../effect/cubismbreath';\nimport { CubismEyeBlink } from '../effect/cubismeyeblink';\nimport { CubismPose } from '../effect/cubismpose';\nimport { Constant } from '../live2dcubismframework';\nimport { CubismModelMatrix } from '../math/cubismmodelmatrix';\nimport { CubismTargetPoint } from '../math/cubismtargetpoint';\nimport { CubismExpressionMotion } from '../motion/cubismexpressionmotion';\nimport { CubismExpressionMotionManager } from '../motion/cubismexpressionmotionmanager';\nimport { CubismMotion } from '../motion/cubismmotion';\nimport { CubismMotionManager } from '../motion/cubismmotionmanager';\nimport { CubismPhysics } from '../physics/cubismphysics';\nimport { CubismRenderer_WebGL } from '../rendering/cubismrenderer_webgl';\nimport { CubismLogError, CubismLogInfo } from '../utils/cubismdebug';\nimport { CubismMoc } from './cubismmoc';\nimport { CubismModelUserData } from './cubismmodeluserdata';\nexport class CubismUserModel {\n    isInitialized() {\n        return this._initialized;\n    }\n    setInitialized(v) {\n        this._initialized = v;\n    }\n    isUpdating() {\n        return this._updating;\n    }\n    setUpdating(v) {\n        this._updating = v;\n    }\n    setDragging(x, y) {\n        this._dragManager.set(x, y);\n    }\n    setAcceleration(x, y, z) {\n        this._accelerationX = x;\n        this._accelerationY = y;\n        this._accelerationZ = z;\n    }\n    getModelMatrix() {\n        return this._modelMatrix;\n    }\n    setOpacity(a) {\n        this._opacity = a;\n    }\n    getOpacity() {\n        return this._opacity;\n    }\n    loadModel(buffer, shouldCheckMocConsistency = false) {\n        this._moc = CubismMoc.create(buffer, shouldCheckMocConsistency);\n        if (this._moc == null) {\n            CubismLogError('Failed to CubismMoc.create().');\n            return;\n        }\n        this._model = this._moc.createModel();\n        if (this._model == null) {\n            CubismLogError('Failed to CreateModel().');\n            return;\n        }\n        this._model.saveParameters();\n        this._modelMatrix = new CubismModelMatrix(this._model.getCanvasWidth(), this._model.getCanvasHeight());\n    }\n    loadMotion(buffer, size, name, onFinishedMotionHandler, onBeganMotionHandler, modelSetting, group, index, shouldCheckMotionConsistency = false) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadMotion().');\n            return null;\n        }\n        const motion = CubismMotion.create(buffer, size, onFinishedMotionHandler, onBeganMotionHandler, shouldCheckMotionConsistency);\n        if (motion == null) {\n            CubismLogError(`Failed to create motion from buffer in LoadMotion()`);\n            return null;\n        }\n        if (modelSetting) {\n            const fadeInTime = modelSetting.getMotionFadeInTimeValue(group, index);\n            if (fadeInTime >= 0.0) {\n                motion.setFadeInTime(fadeInTime);\n            }\n            const fadeOutTime = modelSetting.getMotionFadeOutTimeValue(group, index);\n            if (fadeOutTime >= 0.0) {\n                motion.setFadeOutTime(fadeOutTime);\n            }\n        }\n        return motion;\n    }\n    loadExpression(buffer, size, name) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadExpression().');\n            return null;\n        }\n        return CubismExpressionMotion.create(buffer, size);\n    }\n    loadPose(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadPose().');\n            return;\n        }\n        this._pose = CubismPose.create(buffer, size);\n    }\n    loadUserData(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadUserData().');\n            return;\n        }\n        this._modelUserData = CubismModelUserData.create(buffer, size);\n    }\n    loadPhysics(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadPhysics().');\n            return;\n        }\n        this._physics = CubismPhysics.create(buffer, size);\n    }\n    isHit(drawableId, pointX, pointY) {\n        const drawIndex = this._model.getDrawableIndex(drawableId);\n        if (drawIndex < 0) {\n            return false;\n        }\n        const count = this._model.getDrawableVertexCount(drawIndex);\n        const vertices = this._model.getDrawableVertices(drawIndex);\n        let left = vertices[0];\n        let right = vertices[0];\n        let top = vertices[1];\n        let bottom = vertices[1];\n        for (let j = 1; j < count; ++j) {\n            const x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\n            const y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\n            if (x < left) {\n                left = x;\n            }\n            if (x > right) {\n                right = x;\n            }\n            if (y < top) {\n                top = y;\n            }\n            if (y > bottom) {\n                bottom = y;\n            }\n        }\n        const tx = this._modelMatrix.invertTransformX(pointX);\n        const ty = this._modelMatrix.invertTransformY(pointY);\n        return left <= tx && tx <= right && top <= ty && ty <= bottom;\n    }\n    getModel() {\n        return this._model;\n    }\n    getRenderer() {\n        return this._renderer;\n    }\n    createRenderer(maskBufferCount = 1) {\n        if (this._renderer) {\n            this.deleteRenderer();\n        }\n        this._renderer = new CubismRenderer_WebGL();\n        this._renderer.initialize(this._model, maskBufferCount);\n    }\n    deleteRenderer() {\n        if (this._renderer != null) {\n            this._renderer.release();\n            this._renderer = null;\n        }\n    }\n    motionEventFired(eventValue) {\n        CubismLogInfo('{0}', eventValue.s);\n    }\n    static cubismDefaultMotionEventCallback(caller, eventValue, customData) {\n        const model = customData;\n        if (model != null) {\n            model.motionEventFired(eventValue);\n        }\n    }\n    constructor() {\n        this._moc = null;\n        this._model = null;\n        this._motionManager = null;\n        this._expressionManager = null;\n        this._eyeBlink = null;\n        this._breath = null;\n        this._modelMatrix = null;\n        this._pose = null;\n        this._dragManager = null;\n        this._physics = null;\n        this._modelUserData = null;\n        this._initialized = false;\n        this._updating = false;\n        this._opacity = 1.0;\n        this._lipsync = true;\n        this._lastLipSyncValue = 0.0;\n        this._dragX = 0.0;\n        this._dragY = 0.0;\n        this._accelerationX = 0.0;\n        this._accelerationY = 0.0;\n        this._accelerationZ = 0.0;\n        this._mocConsistency = false;\n        this._debugMode = false;\n        this._renderer = null;\n        this._motionManager = new CubismMotionManager();\n        this._motionManager.setEventCallback(CubismUserModel.cubismDefaultMotionEventCallback, this);\n        this._expressionManager = new CubismExpressionMotionManager();\n        this._dragManager = new CubismTargetPoint();\n    }\n    release() {\n        if (this._motionManager != null) {\n            this._motionManager.release();\n            this._motionManager = null;\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.release();\n            this._expressionManager = null;\n        }\n        if (this._moc != null) {\n            this._moc.deleteModel(this._model);\n            this._moc.release();\n            this._moc = null;\n        }\n        this._modelMatrix = null;\n        CubismPose.delete(this._pose);\n        CubismEyeBlink.delete(this._eyeBlink);\n        CubismBreath.delete(this._breath);\n        this._dragManager = null;\n        CubismPhysics.delete(this._physics);\n        CubismModelUserData.delete(this._modelUserData);\n        this.deleteRenderer();\n    }\n}\nimport * as $ from './cubismusermodel';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismUserModel = $.CubismUserModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport let s_instance = null;\nexport class LAppWavFileHandler {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppWavFileHandler();\n        }\n        return s_instance;\n    }\n    static releaseInstance() {\n        if (s_instance != null) {\n            s_instance = void 0;\n        }\n        s_instance = null;\n    }\n    update(deltaTimeSeconds) {\n        let goalOffset;\n        let rms;\n        if (this._pcmData == null ||\n            this._sampleOffset >= this._wavFileInfo._samplesPerChannel) {\n            this._lastRms = 0.0;\n            return false;\n        }\n        this._userTimeSeconds += deltaTimeSeconds;\n        goalOffset = Math.floor(this._userTimeSeconds * this._wavFileInfo._samplingRate);\n        if (goalOffset > this._wavFileInfo._samplesPerChannel) {\n            goalOffset = this._wavFileInfo._samplesPerChannel;\n        }\n        rms = 0.0;\n        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n            for (let sampleCount = this._sampleOffset; sampleCount < goalOffset; sampleCount++) {\n                const pcm = this._pcmData[channelCount][sampleCount];\n                rms += pcm * pcm;\n            }\n        }\n        rms = Math.sqrt(rms /\n            (this._wavFileInfo._numberOfChannels *\n                (goalOffset - this._sampleOffset)));\n        this._lastRms = rms;\n        this._sampleOffset = goalOffset;\n        return true;\n    }\n    start(filePath) {\n        this._sampleOffset = 0;\n        this._userTimeSeconds = 0.0;\n        this._lastRms = 0.0;\n        this.loadWavFile(filePath);\n    }\n    getRms() {\n        return this._lastRms;\n    }\n    loadWavFile(filePath) {\n        return new Promise(resolveValue => {\n            let ret = false;\n            if (this._pcmData != null) {\n                this.releasePcmData();\n            }\n            const asyncFileLoad = () => __awaiter(this, void 0, void 0, function* () {\n                return fetch(filePath).then(responce => {\n                    return responce.arrayBuffer();\n                });\n            });\n            const asyncWavFileManager = (() => __awaiter(this, void 0, void 0, function* () {\n                this._byteReader._fileByte = yield asyncFileLoad();\n                this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n                this._byteReader._fileSize = this._byteReader._fileByte.byteLength;\n                this._byteReader._readOffset = 0;\n                if (this._byteReader._fileByte == null ||\n                    this._byteReader._fileSize < 4) {\n                    resolveValue(false);\n                    return;\n                }\n                this._wavFileInfo._fileName = filePath;\n                try {\n                    if (!this._byteReader.getCheckSignature('RIFF')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"RIFF\".');\n                    }\n                    this._byteReader.get32LittleEndian();\n                    if (!this._byteReader.getCheckSignature('WAVE')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"WAVE\".');\n                    }\n                    if (!this._byteReader.getCheckSignature('fmt ')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"fmt\".');\n                    }\n                    const fmtChunkSize = this._byteReader.get32LittleEndian();\n                    if (this._byteReader.get16LittleEndian() != 1) {\n                        ret = false;\n                        throw new Error('File is not linear PCM.');\n                    }\n                    this._wavFileInfo._numberOfChannels =\n                        this._byteReader.get16LittleEndian();\n                    this._wavFileInfo._samplingRate =\n                        this._byteReader.get32LittleEndian();\n                    this._byteReader.get32LittleEndian();\n                    this._byteReader.get16LittleEndian();\n                    this._wavFileInfo._bitsPerSample =\n                        this._byteReader.get16LittleEndian();\n                    if (fmtChunkSize > 16) {\n                        this._byteReader._readOffset += fmtChunkSize - 16;\n                    }\n                    while (!this._byteReader.getCheckSignature('data') &&\n                        this._byteReader._readOffset < this._byteReader._fileSize) {\n                        this._byteReader._readOffset +=\n                            this._byteReader.get32LittleEndian() + 4;\n                    }\n                    if (this._byteReader._readOffset >= this._byteReader._fileSize) {\n                        ret = false;\n                        throw new Error('Cannot find \"data\" Chunk.');\n                    }\n                    {\n                        const dataChunkSize = this._byteReader.get32LittleEndian();\n                        this._wavFileInfo._samplesPerChannel =\n                            (dataChunkSize * 8) /\n                                (this._wavFileInfo._bitsPerSample *\n                                    this._wavFileInfo._numberOfChannels);\n                    }\n                    this._pcmData = new Array(this._wavFileInfo._numberOfChannels);\n                    for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n                        this._pcmData[channelCount] = new Float32Array(this._wavFileInfo._samplesPerChannel);\n                    }\n                    for (let sampleCount = 0; sampleCount < this._wavFileInfo._samplesPerChannel; sampleCount++) {\n                        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n                            this._pcmData[channelCount][sampleCount] = this.getPcmSample();\n                        }\n                    }\n                    ret = true;\n                    resolveValue(ret);\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }))().then(() => {\n                resolveValue(ret);\n            });\n        });\n    }\n    getPcmSample() {\n        let pcm32;\n        switch (this._wavFileInfo._bitsPerSample) {\n            case 8:\n                pcm32 = this._byteReader.get8() - 128;\n                pcm32 <<= 24;\n                break;\n            case 16:\n                pcm32 = this._byteReader.get16LittleEndian() << 16;\n                break;\n            case 24:\n                pcm32 = this._byteReader.get24LittleEndian() << 8;\n                break;\n            default:\n                pcm32 = 0;\n                break;\n        }\n        return pcm32 / 2147483647;\n    }\n    getPcmDataChannel(usechannel) {\n        if (!this._pcmData || !(usechannel < this._pcmData.length)) {\n            return null;\n        }\n        return Float32Array.from(this._pcmData[usechannel]);\n    }\n    getWavSamplingRate() {\n        if (!this._wavFileInfo || this._wavFileInfo._samplingRate < 1) {\n            return null;\n        }\n        return this._wavFileInfo._samplingRate;\n    }\n    releasePcmData() {\n        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n            this._pcmData[channelCount] = null;\n        }\n        delete this._pcmData;\n        this._pcmData = null;\n    }\n    constructor() {\n        this.loadFiletoBytes = (arrayBuffer, length) => {\n            this._byteReader._fileByte = arrayBuffer;\n            this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n            this._byteReader._fileSize = length;\n        };\n        this._pcmData = null;\n        this._userTimeSeconds = 0.0;\n        this._lastRms = 0.0;\n        this._sampleOffset = 0.0;\n        this._wavFileInfo = new WavFileInfo();\n        this._byteReader = new ByteReader();\n    }\n}\nexport class WavFileInfo {\n    constructor() {\n        this._fileName = '';\n        this._numberOfChannels = 0;\n        this._bitsPerSample = 0;\n        this._samplingRate = 0;\n        this._samplesPerChannel = 0;\n    }\n}\nexport class ByteReader {\n    constructor() {\n        this._fileByte = null;\n        this._fileDataView = null;\n        this._fileSize = 0;\n        this._readOffset = 0;\n    }\n    get8() {\n        const ret = this._fileDataView.getUint8(this._readOffset);\n        this._readOffset++;\n        return ret;\n    }\n    get16LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 2;\n        return ret;\n    }\n    get24LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\n            (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 3;\n        return ret;\n    }\n    get32LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 3) << 24) |\n            (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\n            (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 4;\n        return ret;\n    }\n    getCheckSignature(reference) {\n        const getSignature = new Uint8Array(4);\n        const referenceString = new TextEncoder().encode(reference);\n        if (reference.length != 4) {\n            return false;\n        }\n        for (let signatureOffset = 0; signatureOffset < 4; signatureOffset++) {\n            getSignature[signatureOffset] = this.get8();\n        }\n        return (getSignature[0] == referenceString[0] &&\n            getSignature[1] == referenceString[1] &&\n            getSignature[2] == referenceString[2] &&\n            getSignature[3] == referenceString[3]);\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CubismDefaultParameterId } from '@framework/cubismdefaultparameterid';\nimport { CubismModelSettingJson } from '@framework/cubismmodelsettingjson';\nimport { BreathParameterData, CubismBreath } from '@framework/effect/cubismbreath';\nimport { CubismEyeBlink } from '@framework/effect/cubismeyeblink';\nimport { CubismFramework } from '@framework/live2dcubismframework';\nimport { CubismUserModel } from '@framework/model/cubismusermodel';\nimport { ACubismMotion } from '@framework/motion/acubismmotion';\nimport { InvalidMotionQueueEntryHandleValue } from '@framework/motion/cubismmotionqueuemanager';\nimport { csmMap } from '@framework/type/csmmap';\nimport { csmVector } from '@framework/type/csmvector';\nimport { CSM_ASSERT, CubismLogError, CubismLogInfo } from '@framework/utils/cubismdebug';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppWavFileHandler } from './lappwavfilehandler';\nimport { CubismMoc } from '@framework/model/cubismmoc';\nvar LoadStep;\n(function (LoadStep) {\n    LoadStep[LoadStep[\"LoadAssets\"] = 0] = \"LoadAssets\";\n    LoadStep[LoadStep[\"LoadModel\"] = 1] = \"LoadModel\";\n    LoadStep[LoadStep[\"WaitLoadModel\"] = 2] = \"WaitLoadModel\";\n    LoadStep[LoadStep[\"LoadExpression\"] = 3] = \"LoadExpression\";\n    LoadStep[LoadStep[\"WaitLoadExpression\"] = 4] = \"WaitLoadExpression\";\n    LoadStep[LoadStep[\"LoadPhysics\"] = 5] = \"LoadPhysics\";\n    LoadStep[LoadStep[\"WaitLoadPhysics\"] = 6] = \"WaitLoadPhysics\";\n    LoadStep[LoadStep[\"LoadPose\"] = 7] = \"LoadPose\";\n    LoadStep[LoadStep[\"WaitLoadPose\"] = 8] = \"WaitLoadPose\";\n    LoadStep[LoadStep[\"SetupEyeBlink\"] = 9] = \"SetupEyeBlink\";\n    LoadStep[LoadStep[\"SetupBreath\"] = 10] = \"SetupBreath\";\n    LoadStep[LoadStep[\"LoadUserData\"] = 11] = \"LoadUserData\";\n    LoadStep[LoadStep[\"WaitLoadUserData\"] = 12] = \"WaitLoadUserData\";\n    LoadStep[LoadStep[\"SetupEyeBlinkIds\"] = 13] = \"SetupEyeBlinkIds\";\n    LoadStep[LoadStep[\"SetupLipSyncIds\"] = 14] = \"SetupLipSyncIds\";\n    LoadStep[LoadStep[\"SetupLayout\"] = 15] = \"SetupLayout\";\n    LoadStep[LoadStep[\"LoadMotion\"] = 16] = \"LoadMotion\";\n    LoadStep[LoadStep[\"WaitLoadMotion\"] = 17] = \"WaitLoadMotion\";\n    LoadStep[LoadStep[\"CompleteInitialize\"] = 18] = \"CompleteInitialize\";\n    LoadStep[LoadStep[\"CompleteSetupModel\"] = 19] = \"CompleteSetupModel\";\n    LoadStep[LoadStep[\"LoadTexture\"] = 20] = \"LoadTexture\";\n    LoadStep[LoadStep[\"WaitLoadTexture\"] = 21] = \"WaitLoadTexture\";\n    LoadStep[LoadStep[\"CompleteSetup\"] = 22] = \"CompleteSetup\";\n})(LoadStep || (LoadStep = {}));\nexport class LAppModel extends CubismUserModel {\n    loadAssets(dir, fileName) {\n        this._modelHomeDir = dir;\n        fetch(`${this._modelHomeDir}${fileName}`)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => {\n            const setting = new CubismModelSettingJson(arrayBuffer, arrayBuffer.byteLength);\n            this._state = LoadStep.LoadModel;\n            this.setupModel(setting);\n        })\n            .catch(error => {\n            CubismLogError(`Failed to load file ${this._modelHomeDir}${fileName}`);\n        });\n    }\n    setupModel(setting) {\n        this._updating = true;\n        this._initialized = false;\n        this._modelSetting = setting;\n        if (this._modelSetting.getModelFileName() != '') {\n            const modelFileName = this._modelSetting.getModelFileName();\n            fetch(`${this._modelHomeDir}${modelFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${modelFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                this.loadModel(arrayBuffer, this._mocConsistency);\n                this._state = LoadStep.LoadExpression;\n                loadCubismExpression();\n            });\n            this._state = LoadStep.WaitLoadModel;\n        }\n        else {\n            LAppPal.printMessage('Model data does not exist.');\n        }\n        const loadCubismExpression = () => {\n            if (this._modelSetting.getExpressionCount() > 0) {\n                const count = this._modelSetting.getExpressionCount();\n                for (let i = 0; i < count; i++) {\n                    const expressionName = this._modelSetting.getExpressionName(i);\n                    const expressionFileName = this._modelSetting.getExpressionFileName(i);\n                    fetch(`${this._modelHomeDir}${expressionFileName}`)\n                        .then(response => {\n                        if (response.ok) {\n                            return response.arrayBuffer();\n                        }\n                        else if (response.status >= 400) {\n                            CubismLogError(`Failed to load file ${this._modelHomeDir}${expressionFileName}`);\n                            return new ArrayBuffer(0);\n                        }\n                    })\n                        .then(arrayBuffer => {\n                        const motion = this.loadExpression(arrayBuffer, arrayBuffer.byteLength, expressionName);\n                        if (this._expressions.getValue(expressionName) != null) {\n                            ACubismMotion.delete(this._expressions.getValue(expressionName));\n                            this._expressions.setValue(expressionName, null);\n                        }\n                        this._expressions.setValue(expressionName, motion);\n                        this._expressionCount++;\n                        if (this._expressionCount >= count) {\n                            this._state = LoadStep.LoadPhysics;\n                            loadCubismPhysics();\n                        }\n                    });\n                }\n                this._state = LoadStep.WaitLoadExpression;\n            }\n            else {\n                this._state = LoadStep.LoadPhysics;\n                loadCubismPhysics();\n            }\n        };\n        const loadCubismPhysics = () => {\n            if (this._modelSetting.getPhysicsFileName() != '') {\n                const physicsFileName = this._modelSetting.getPhysicsFileName();\n                fetch(`${this._modelHomeDir}${physicsFileName}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${physicsFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.LoadPose;\n                    loadCubismPose();\n                });\n                this._state = LoadStep.WaitLoadPhysics;\n            }\n            else {\n                this._state = LoadStep.LoadPose;\n                loadCubismPose();\n            }\n        };\n        const loadCubismPose = () => {\n            if (this._modelSetting.getPoseFileName() != '') {\n                const poseFileName = this._modelSetting.getPoseFileName();\n                fetch(`${this._modelHomeDir}${poseFileName}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${poseFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadPose(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.SetupEyeBlink;\n                    setupEyeBlink();\n                });\n                this._state = LoadStep.WaitLoadPose;\n            }\n            else {\n                this._state = LoadStep.SetupEyeBlink;\n                setupEyeBlink();\n            }\n        };\n        const setupEyeBlink = () => {\n            if (this._modelSetting.getEyeBlinkParameterCount() > 0) {\n                this._eyeBlink = CubismEyeBlink.create(this._modelSetting);\n                this._state = LoadStep.SetupBreath;\n            }\n            setupBreath();\n        };\n        const setupBreath = () => {\n            this._breath = CubismBreath.create();\n            const breathParameters = new csmVector();\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBreath), 0.5, 0.5, 3.2345, 1));\n            this._breath.setParameters(breathParameters);\n            this._state = LoadStep.LoadUserData;\n            loadUserData();\n        };\n        const loadUserData = () => {\n            if (this._modelSetting.getUserDataFile() != '') {\n                const userDataFile = this._modelSetting.getUserDataFile();\n                fetch(`${this._modelHomeDir}${userDataFile}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${userDataFile}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.SetupEyeBlinkIds;\n                    setupEyeBlinkIds();\n                });\n                this._state = LoadStep.WaitLoadUserData;\n            }\n            else {\n                this._state = LoadStep.SetupEyeBlinkIds;\n                setupEyeBlinkIds();\n            }\n        };\n        const setupEyeBlinkIds = () => {\n            const eyeBlinkIdCount = this._modelSetting.getEyeBlinkParameterCount();\n            for (let i = 0; i < eyeBlinkIdCount; ++i) {\n                this._eyeBlinkIds.pushBack(this._modelSetting.getEyeBlinkParameterId(i));\n            }\n            this._state = LoadStep.SetupLipSyncIds;\n            setupLipSyncIds();\n        };\n        const setupLipSyncIds = () => {\n            const lipSyncIdCount = this._modelSetting.getLipSyncParameterCount();\n            for (let i = 0; i < lipSyncIdCount; ++i) {\n                this._lipSyncIds.pushBack(this._modelSetting.getLipSyncParameterId(i));\n            }\n            this._state = LoadStep.SetupLayout;\n            setupLayout();\n        };\n        const setupLayout = () => {\n            const layout = new csmMap();\n            if (this._modelSetting == null || this._modelMatrix == null) {\n                CubismLogError('Failed to setupLayout().');\n                return;\n            }\n            this._modelSetting.getLayoutMap(layout);\n            this._modelMatrix.setupFromLayout(layout);\n            this._state = LoadStep.LoadMotion;\n            loadCubismMotion();\n        };\n        const loadCubismMotion = () => {\n            this._state = LoadStep.WaitLoadMotion;\n            this._model.saveParameters();\n            this._allMotionCount = 0;\n            this._motionCount = 0;\n            const group = [];\n            const motionGroupCount = this._modelSetting.getMotionGroupCount();\n            for (let i = 0; i < motionGroupCount; i++) {\n                group[i] = this._modelSetting.getMotionGroupName(i);\n                this._allMotionCount += this._modelSetting.getMotionCount(group[i]);\n            }\n            for (let i = 0; i < motionGroupCount; i++) {\n                this.preLoadMotionGroup(group[i]);\n            }\n            if (motionGroupCount == 0) {\n                this._state = LoadStep.LoadTexture;\n                this._motionManager.stopAllMotions();\n                this._updating = false;\n                this._initialized = true;\n                this.createRenderer();\n                this.setupTextures();\n                this.getRenderer().startUp(this._subdelegate.getGlManager().getGl());\n            }\n        };\n    }\n    setupTextures() {\n        const usePremultiply = true;\n        if (this._state == LoadStep.LoadTexture) {\n            const textureCount = this._modelSetting.getTextureCount();\n            for (let modelTextureNumber = 0; modelTextureNumber < textureCount; modelTextureNumber++) {\n                if (this._modelSetting.getTextureFileName(modelTextureNumber) == '') {\n                    console.log('getTextureFileName null');\n                    continue;\n                }\n                let texturePath = this._modelSetting.getTextureFileName(modelTextureNumber);\n                texturePath = this._modelHomeDir + texturePath;\n                const onLoad = (textureInfo) => {\n                    this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\n                    this._textureCount++;\n                    if (this._textureCount >= textureCount) {\n                        this._state = LoadStep.CompleteSetup;\n                    }\n                };\n                this._subdelegate\n                    .getTextureManager()\n                    .createTextureFromPngFile(texturePath, usePremultiply, onLoad);\n                this.getRenderer().setIsPremultipliedAlpha(usePremultiply);\n            }\n            this._state = LoadStep.WaitLoadTexture;\n        }\n    }\n    reloadRenderer() {\n        this.deleteRenderer();\n        this.createRenderer();\n        this.setupTextures();\n    }\n    update() {\n        if (this._state != LoadStep.CompleteSetup)\n            return;\n        const deltaTimeSeconds = LAppPal.getDeltaTime();\n        this._userTimeSeconds += deltaTimeSeconds;\n        this._dragManager.update(deltaTimeSeconds);\n        this._dragX = this._dragManager.getX();\n        this._dragY = this._dragManager.getY();\n        let motionUpdated = false;\n        this._model.loadParameters();\n        if (this._motionManager.isFinished()) {\n            this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\n        }\n        else {\n            motionUpdated = this._motionManager.updateMotion(this._model, deltaTimeSeconds);\n        }\n        this._model.saveParameters();\n        if (!motionUpdated) {\n            if (this._eyeBlink != null) {\n                this._eyeBlink.updateParameters(this._model, deltaTimeSeconds);\n            }\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.updateMotion(this._model, deltaTimeSeconds);\n        }\n        this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30);\n        this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\n        this._model.addParameterValueById(this._idParamAngleZ, this._dragX * this._dragY * -30);\n        this._model.addParameterValueById(this._idParamBodyAngleX, this._dragX * 10);\n        this._model.addParameterValueById(this._idParamEyeBallX, this._dragX);\n        this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\n        if (this._breath != null) {\n            this._breath.updateParameters(this._model, deltaTimeSeconds);\n        }\n        if (this._physics != null) {\n            this._physics.evaluate(this._model, deltaTimeSeconds);\n        }\n        if (this._lipsync) {\n            let value = 0.0;\n            this._wavFileHandler.update(deltaTimeSeconds);\n            value = this._wavFileHandler.getRms();\n            for (let i = 0; i < this._lipSyncIds.getSize(); ++i) {\n                this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\n            }\n        }\n        if (this._pose != null) {\n            this._pose.updateParameters(this._model, deltaTimeSeconds);\n        }\n        this._model.update();\n    }\n    startMotion(group, no, priority, onFinishedMotionHandler, onBeganMotionHandler) {\n        if (priority == LAppDefine.PriorityForce) {\n            this._motionManager.setReservePriority(priority);\n        }\n        else if (!this._motionManager.reserveMotion(priority)) {\n            if (this._debugMode) {\n                LAppPal.printMessage(\"[APP]can't start motion.\");\n            }\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        const motionFileName = this._modelSetting.getMotionFileName(group, no);\n        const name = `${group}_${no}`;\n        let motion = this._motions.getValue(name);\n        let autoDelete = false;\n        if (motion == null) {\n            fetch(`${this._modelHomeDir}${motionFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                motion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, null, onFinishedMotionHandler, onBeganMotionHandler, this._modelSetting, group, no, this._motionConsistency);\n            });\n            if (motion) {\n                motion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                autoDelete = true;\n            }\n            else {\n                CubismLogError(\"Can't start motion {0} .\", motionFileName);\n                this._motionManager.setReservePriority(LAppDefine.PriorityNone);\n                return InvalidMotionQueueEntryHandleValue;\n            }\n        }\n        else {\n            motion.setBeganMotionHandler(onBeganMotionHandler);\n            motion.setFinishedMotionHandler(onFinishedMotionHandler);\n        }\n        const voice = this._modelSetting.getMotionSoundFileName(group, no);\n        if (voice.localeCompare('') != 0) {\n            let path = voice;\n            path = this._modelHomeDir + path;\n            this._wavFileHandler.start(path);\n        }\n        if (this._debugMode) {\n            LAppPal.printMessage(`[APP]start motion: [${group}_${no}]`);\n        }\n        return this._motionManager.startMotionPriority(motion, autoDelete, priority);\n    }\n    startRandomMotion(group, priority, onFinishedMotionHandler, onBeganMotionHandler) {\n        if (this._modelSetting.getMotionCount(group) == 0) {\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        const no = Math.floor(Math.random() * this._modelSetting.getMotionCount(group));\n        return this.startMotion(group, no, priority, onFinishedMotionHandler, onBeganMotionHandler);\n    }\n    setExpression(expressionId) {\n        const motion = this._expressions.getValue(expressionId);\n        if (this._debugMode) {\n            LAppPal.printMessage(`[APP]expression: [${expressionId}]`);\n        }\n        if (motion != null) {\n            this._expressionManager.startMotion(motion, false);\n        }\n        else {\n            if (this._debugMode) {\n                LAppPal.printMessage(`[APP]expression[${expressionId}] is null`);\n            }\n        }\n    }\n    setRandomExpression() {\n        if (this._expressions.getSize() == 0) {\n            return;\n        }\n        const no = Math.floor(Math.random() * this._expressions.getSize());\n        for (let i = 0; i < this._expressions.getSize(); i++) {\n            if (i == no) {\n                const name = this._expressions._keyValues[i].first;\n                this.setExpression(name);\n                return;\n            }\n        }\n    }\n    motionEventFired(eventValue) {\n        CubismLogInfo('{0} is fired on LAppModel!!', eventValue.s);\n    }\n    hitTest(hitArenaName, x, y) {\n        if (this._opacity < 1) {\n            return false;\n        }\n        const count = this._modelSetting.getHitAreasCount();\n        for (let i = 0; i < count; i++) {\n            if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\n                const drawId = this._modelSetting.getHitAreaId(i);\n                return this.isHit(drawId, x, y);\n            }\n        }\n        return false;\n    }\n    preLoadMotionGroup(group) {\n        for (let i = 0; i < this._modelSetting.getMotionCount(group); i++) {\n            const motionFileName = this._modelSetting.getMotionFileName(group, i);\n            const name = `${group}_${i}`;\n            if (this._debugMode) {\n                LAppPal.printMessage(`[APP]load motion: ${motionFileName} => [${name}]`);\n            }\n            fetch(`${this._modelHomeDir}${motionFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                const tmpMotion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, name, null, null, this._modelSetting, group, i, this._motionConsistency);\n                if (tmpMotion != null) {\n                    tmpMotion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                    if (this._motions.getValue(name) != null) {\n                        ACubismMotion.delete(this._motions.getValue(name));\n                    }\n                    this._motions.setValue(name, tmpMotion);\n                    this._motionCount++;\n                }\n                else {\n                    this._allMotionCount--;\n                }\n                if (this._motionCount >= this._allMotionCount) {\n                    this._state = LoadStep.LoadTexture;\n                    this._motionManager.stopAllMotions();\n                    this._updating = false;\n                    this._initialized = true;\n                    this.createRenderer();\n                    this.setupTextures();\n                    this.getRenderer().startUp(this._subdelegate.getGlManager().getGl());\n                }\n            });\n        }\n    }\n    releaseMotions() {\n        this._motions.clear();\n    }\n    releaseExpressions() {\n        this._expressions.clear();\n    }\n    doDraw() {\n        if (this._model == null)\n            return;\n        const canvas = this._subdelegate.getCanvas();\n        const viewport = [0, 0, canvas.width, canvas.height];\n        this.getRenderer().setRenderState(this._subdelegate.getFrameBuffer(), viewport);\n        this.getRenderer().drawModel();\n    }\n    draw(matrix) {\n        if (this._model == null) {\n            return;\n        }\n        if (this._state == LoadStep.CompleteSetup) {\n            matrix.multiplyByMatrix(this._modelMatrix);\n            this.getRenderer().setMvpMatrix(matrix);\n            this.doDraw();\n        }\n    }\n    hasMocConsistencyFromFile() {\n        return __awaiter(this, void 0, void 0, function* () {\n            CSM_ASSERT(this._modelSetting.getModelFileName().localeCompare(``));\n            if (this._modelSetting.getModelFileName() != '') {\n                const modelFileName = this._modelSetting.getModelFileName();\n                const response = yield fetch(`${this._modelHomeDir}${modelFileName}`);\n                const arrayBuffer = yield response.arrayBuffer();\n                this._consistency = CubismMoc.hasMocConsistency(arrayBuffer);\n                if (!this._consistency) {\n                    CubismLogInfo('Inconsistent MOC3.');\n                }\n                else {\n                    CubismLogInfo('Consistent MOC3.');\n                }\n                return this._consistency;\n            }\n            else {\n                LAppPal.printMessage('Model data does not exist.');\n            }\n        });\n    }\n    setSubdelegate(subdelegate) {\n        this._subdelegate = subdelegate;\n    }\n    constructor() {\n        super();\n        this._modelSetting = null;\n        this._modelHomeDir = null;\n        this._userTimeSeconds = 0.0;\n        this._eyeBlinkIds = new csmVector();\n        this._lipSyncIds = new csmVector();\n        this._motions = new csmMap();\n        this._expressions = new csmMap();\n        this._hitArea = new csmVector();\n        this._userArea = new csmVector();\n        this._idParamAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleX);\n        this._idParamAngleY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleY);\n        this._idParamAngleZ = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleZ);\n        this._idParamEyeBallX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallX);\n        this._idParamEyeBallY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallY);\n        this._idParamBodyAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBodyAngleX);\n        if (LAppDefine.MOCConsistencyValidationEnable) {\n            this._mocConsistency = true;\n        }\n        if (LAppDefine.MotionConsistencyValidationEnable) {\n            this._motionConsistency = true;\n        }\n        this._state = LoadStep.LoadAssets;\n        this._expressionCount = 0;\n        this._textureCount = 0;\n        this._motionCount = 0;\n        this._allMotionCount = 0;\n        this._wavFileHandler = new LAppWavFileHandler();\n        this._consistency = false;\n    }\n}\n","import { CubismMatrix44 } from './cubismmatrix44';\nexport class CubismViewMatrix extends CubismMatrix44 {\n    constructor() {\n        super();\n        this._screenLeft = 0.0;\n        this._screenRight = 0.0;\n        this._screenTop = 0.0;\n        this._screenBottom = 0.0;\n        this._maxLeft = 0.0;\n        this._maxRight = 0.0;\n        this._maxTop = 0.0;\n        this._maxBottom = 0.0;\n        this._maxScale = 0.0;\n        this._minScale = 0.0;\n    }\n    adjustTranslate(x, y) {\n        if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\n            x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\n        }\n        if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\n            x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\n        }\n        if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\n            y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\n        }\n        if (this._tr[5] * this._maxBottom + (this._tr[13] + y) >\n            this._screenBottom) {\n            y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    adjustScale(cx, cy, scale) {\n        const maxScale = this.getMaxScale();\n        const minScale = this.getMinScale();\n        const targetScale = scale * this._tr[0];\n        if (targetScale < minScale) {\n            if (this._tr[0] > 0.0) {\n                scale = minScale / this._tr[0];\n            }\n        }\n        else if (targetScale > maxScale) {\n            if (this._tr[0] > 0.0) {\n                scale = maxScale / this._tr[0];\n            }\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            cx,\n            cy,\n            0.0,\n            1.0\n        ]);\n        const tr2 = new Float32Array([\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        const tr3 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            -cx,\n            -cy,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr3, this._tr, this._tr);\n        CubismMatrix44.multiply(tr2, this._tr, this._tr);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    setScreenRect(left, right, bottom, top) {\n        this._screenLeft = left;\n        this._screenRight = right;\n        this._screenBottom = bottom;\n        this._screenTop = top;\n    }\n    setMaxScreenRect(left, right, bottom, top) {\n        this._maxLeft = left;\n        this._maxRight = right;\n        this._maxTop = top;\n        this._maxBottom = bottom;\n    }\n    setMaxScale(maxScale) {\n        this._maxScale = maxScale;\n    }\n    setMinScale(minScale) {\n        this._minScale = minScale;\n    }\n    getMaxScale() {\n        return this._maxScale;\n    }\n    getMinScale() {\n        return this._minScale;\n    }\n    isMaxScale() {\n        return this.getScaleX() >= this._maxScale;\n    }\n    isMinScale() {\n        return this.getScaleX() <= this._minScale;\n    }\n    getScreenLeft() {\n        return this._screenLeft;\n    }\n    getScreenRight() {\n        return this._screenRight;\n    }\n    getScreenBottom() {\n        return this._screenBottom;\n    }\n    getScreenTop() {\n        return this._screenTop;\n    }\n    getMaxLeft() {\n        return this._maxLeft;\n    }\n    getMaxRight() {\n        return this._maxRight;\n    }\n    getMaxBottom() {\n        return this._maxBottom;\n    }\n    getMaxTop() {\n        return this._maxTop;\n    }\n}\nimport * as $ from './cubismviewmatrix';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismViewMatrix = $.CubismViewMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from '@framework/math/cubismmatrix44';\nimport { csmVector } from '@framework/type/csmvector';\nimport * as LAppDefine from './lappdefine';\nimport { LAppModel } from './lappmodel';\nimport { LAppPal } from './lapppal';\nexport class LAppLive2DManager {\n    releaseAllModel() {\n        this._models.clear();\n    }\n    onDrag(x, y) {\n        const model = this._models.at(0);\n        if (model) {\n            model.setDragging(x, y);\n        }\n    }\n    onTap(x, y) {\n        if (LAppDefine.DebugLogEnable) {\n            LAppPal.printMessage(`[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`);\n        }\n        const model = this._models.at(0);\n        if (model.hitTest(LAppDefine.HitAreaNameHead, x, y)) {\n            if (LAppDefine.DebugLogEnable) {\n                LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameHead}]`);\n            }\n            model.setRandomExpression();\n        }\n        else if (model.hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n            if (LAppDefine.DebugLogEnable) {\n                LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameBody}]`);\n            }\n            model.startRandomMotion(LAppDefine.MotionGroupTapBody, LAppDefine.PriorityNormal, this.finishedMotion, this.beganMotion);\n        }\n    }\n    onUpdate() {\n        const { width, height } = this._subdelegate.getCanvas();\n        const projection = new CubismMatrix44();\n        const model = this._models.at(0);\n        if (model.getModel()) {\n            if (model.getModel().getCanvasWidth() > 1.0 && width < height) {\n                model.getModelMatrix().setWidth(2.0);\n                projection.scale(1.0, width / height);\n            }\n            else {\n                projection.scale(height / width, 1.0);\n            }\n            if (this._viewMatrix != null) {\n                projection.multiplyByMatrix(this._viewMatrix);\n            }\n        }\n        model.update();\n        model.draw(projection);\n    }\n    nextScene() {\n        const no = (this._sceneIndex + 1) % LAppDefine.ModelDirSize;\n        this.changeScene(no);\n    }\n    changeScene(index) {\n        this._sceneIndex = index;\n        if (LAppDefine.DebugLogEnable) {\n            console.trace('DEBUG');\n            LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\n        }\n        const model = LAppDefine.ModelDir[index];\n        const modelPath = LAppDefine.ResourcesPath + model + '/';\n        let modelJsonName = LAppDefine.ModelDir[index];\n        modelJsonName += '.model3.json';\n        this.releaseAllModel();\n        const instance = new LAppModel();\n        instance.setSubdelegate(this._subdelegate);\n        instance.loadAssets(modelPath, modelJsonName);\n        this._models.pushBack(instance);\n    }\n    setViewMatrix(m) {\n        for (let i = 0; i < 16; i++) {\n            this._viewMatrix.getArray()[i] = m.getArray()[i];\n        }\n    }\n    addModel(sceneIndex = 0) {\n        this._sceneIndex = sceneIndex;\n        this.changeScene(this._sceneIndex);\n    }\n    constructor() {\n        this.beganMotion = (self) => {\n            LAppPal.printMessage('Motion Began:');\n            console.log(self);\n        };\n        this.finishedMotion = (self) => {\n            LAppPal.printMessage('Motion Finished:');\n            console.log(self);\n        };\n        this._subdelegate = null;\n        this._viewMatrix = new CubismMatrix44();\n        this._models = new csmVector();\n        this._sceneIndex = 0;\n    }\n    release() { }\n    initialize(subdelegate) {\n        this._subdelegate = subdelegate;\n        this.changeScene(this._sceneIndex);\n    }\n}\n","import { csmVector } from '@framework/type/csmvector';\nexport class LAppTextureManager {\n    constructor() {\n        this._textures = new csmVector();\n    }\n    release() {\n        for (let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\n            this._glManager.getGl().deleteTexture(ite.ptr().id);\n        }\n        this._textures = null;\n    }\n    createTextureFromPngFile(fileName, usePremultiply, callback) {\n        for (let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\n            if (ite.ptr().fileName == fileName &&\n                ite.ptr().usePremultply == usePremultiply) {\n                ite.ptr().img = new Image();\n                ite\n                    .ptr()\n                    .img.addEventListener('load', () => callback(ite.ptr()), {\n                    passive: true\n                });\n                ite.ptr().img.src = fileName;\n                return;\n            }\n        }\n        const img = new Image();\n        img.addEventListener('load', () => {\n            const tex = this._glManager.getGl().createTexture();\n            this._glManager\n                .getGl()\n                .bindTexture(this._glManager.getGl().TEXTURE_2D, tex);\n            this._glManager\n                .getGl()\n                .texParameteri(this._glManager.getGl().TEXTURE_2D, this._glManager.getGl().TEXTURE_MIN_FILTER, this._glManager.getGl().LINEAR_MIPMAP_LINEAR);\n            this._glManager\n                .getGl()\n                .texParameteri(this._glManager.getGl().TEXTURE_2D, this._glManager.getGl().TEXTURE_MAG_FILTER, this._glManager.getGl().LINEAR);\n            if (usePremultiply) {\n                this._glManager\n                    .getGl()\n                    .pixelStorei(this._glManager.getGl().UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n            }\n            this._glManager\n                .getGl()\n                .texImage2D(this._glManager.getGl().TEXTURE_2D, 0, this._glManager.getGl().RGBA, this._glManager.getGl().RGBA, this._glManager.getGl().UNSIGNED_BYTE, img);\n            this._glManager\n                .getGl()\n                .generateMipmap(this._glManager.getGl().TEXTURE_2D);\n            this._glManager\n                .getGl()\n                .bindTexture(this._glManager.getGl().TEXTURE_2D, null);\n            const textureInfo = new TextureInfo();\n            if (textureInfo != null) {\n                textureInfo.fileName = fileName;\n                textureInfo.width = img.width;\n                textureInfo.height = img.height;\n                textureInfo.id = tex;\n                textureInfo.img = img;\n                textureInfo.usePremultply = usePremultiply;\n                if (this._textures != null) {\n                    this._textures.pushBack(textureInfo);\n                }\n            }\n            callback(textureInfo);\n        }, { passive: true });\n        img.src = fileName;\n    }\n    releaseTextures() {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n            this._textures.set(i, null);\n        }\n        this._textures.clear();\n    }\n    releaseTextureByTexture(texture) {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            if (this._textures.at(i).id != texture) {\n                continue;\n            }\n            this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n            this._textures.set(i, null);\n            this._textures.remove(i);\n            break;\n        }\n    }\n    releaseTextureByFilePath(fileName) {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            if (this._textures.at(i).fileName == fileName) {\n                this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n                this._textures.set(i, null);\n                this._textures.remove(i);\n                break;\n            }\n        }\n    }\n    setGlManager(glManager) {\n        this._glManager = glManager;\n    }\n}\nexport class TextureInfo {\n    constructor() {\n        this.id = null;\n        this.width = 0;\n        this.height = 0;\n    }\n}\n","export class LAppSprite {\n    constructor(x, y, width, height, textureId) {\n        this._rect = new Rect();\n        this._rect.left = x - width * 0.5;\n        this._rect.right = x + width * 0.5;\n        this._rect.up = y + height * 0.5;\n        this._rect.down = y - height * 0.5;\n        this._texture = textureId;\n        this._vertexBuffer = null;\n        this._uvBuffer = null;\n        this._indexBuffer = null;\n        this._positionLocation = null;\n        this._uvLocation = null;\n        this._textureLocation = null;\n        this._positionArray = null;\n        this._uvArray = null;\n        this._indexArray = null;\n        this._firstDraw = true;\n    }\n    release() {\n        this._rect = null;\n        const gl = this._subdelegate.getGlManager().getGl();\n        gl.deleteTexture(this._texture);\n        this._texture = null;\n        gl.deleteBuffer(this._uvBuffer);\n        this._uvBuffer = null;\n        gl.deleteBuffer(this._vertexBuffer);\n        this._vertexBuffer = null;\n        gl.deleteBuffer(this._indexBuffer);\n        this._indexBuffer = null;\n    }\n    getTexture() {\n        return this._texture;\n    }\n    render(programId) {\n        if (this._texture == null) {\n            return;\n        }\n        const gl = this._subdelegate.getGlManager().getGl();\n        if (this._firstDraw) {\n            this._positionLocation = gl.getAttribLocation(programId, 'position');\n            gl.enableVertexAttribArray(this._positionLocation);\n            this._uvLocation = gl.getAttribLocation(programId, 'uv');\n            gl.enableVertexAttribArray(this._uvLocation);\n            this._textureLocation = gl.getUniformLocation(programId, 'texture');\n            gl.uniform1i(this._textureLocation, 0);\n            {\n                this._uvArray = new Float32Array([\n                    1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0\n                ]);\n                this._uvBuffer = gl.createBuffer();\n            }\n            {\n                const maxWidth = this._subdelegate.getCanvas().width;\n                const maxHeight = this._subdelegate.getCanvas().height;\n                this._positionArray = new Float32Array([\n                    (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5)\n                ]);\n                this._vertexBuffer = gl.createBuffer();\n            }\n            {\n                this._indexArray = new Uint16Array([0, 1, 2, 3, 2, 0]);\n                this._indexBuffer = gl.createBuffer();\n            }\n            this._firstDraw = false;\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this._uvArray, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(this._uvLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this._positionArray, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(this._positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexArray, gl.DYNAMIC_DRAW);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.drawElements(gl.TRIANGLES, this._indexArray.length, gl.UNSIGNED_SHORT, 0);\n    }\n    isHit(pointX, pointY) {\n        const { height } = this._subdelegate.getCanvas();\n        const y = height - pointY;\n        return (pointX >= this._rect.left &&\n            pointX <= this._rect.right &&\n            y <= this._rect.up &&\n            y >= this._rect.down);\n    }\n    setSubdelegate(subdelegate) {\n        this._subdelegate = subdelegate;\n    }\n}\nexport class Rect {\n}\n","export class TouchManager {\n    constructor() {\n        this._startX = 0.0;\n        this._startY = 0.0;\n        this._lastX = 0.0;\n        this._lastY = 0.0;\n        this._lastX1 = 0.0;\n        this._lastY1 = 0.0;\n        this._lastX2 = 0.0;\n        this._lastY2 = 0.0;\n        this._lastTouchDistance = 0.0;\n        this._deltaX = 0.0;\n        this._deltaY = 0.0;\n        this._scale = 1.0;\n        this._touchSingle = false;\n        this._flipAvailable = false;\n    }\n    getCenterX() {\n        return this._lastX;\n    }\n    getCenterY() {\n        return this._lastY;\n    }\n    getDeltaX() {\n        return this._deltaX;\n    }\n    getDeltaY() {\n        return this._deltaY;\n    }\n    getStartX() {\n        return this._startX;\n    }\n    getStartY() {\n        return this._startY;\n    }\n    getScale() {\n        return this._scale;\n    }\n    getX() {\n        return this._lastX;\n    }\n    getY() {\n        return this._lastY;\n    }\n    getX1() {\n        return this._lastX1;\n    }\n    getY1() {\n        return this._lastY1;\n    }\n    getX2() {\n        return this._lastX2;\n    }\n    getY2() {\n        return this._lastY2;\n    }\n    isSingleTouch() {\n        return this._touchSingle;\n    }\n    isFlickAvailable() {\n        return this._flipAvailable;\n    }\n    disableFlick() {\n        this._flipAvailable = false;\n    }\n    touchesBegan(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._startX = deviceX;\n        this._startY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._flipAvailable = true;\n        this._touchSingle = true;\n    }\n    touchesMoved(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._touchSingle = true;\n    }\n    getFlickDistance() {\n        return this.calculateDistance(this._startX, this._startY, this._lastX, this._lastY);\n    }\n    calculateDistance(x1, y1, x2, y2) {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\n    calculateMovingAmount(v1, v2) {\n        if (v1 > 0.0 != v2 > 0.0) {\n            return 0.0;\n        }\n        const sign = v1 > 0.0 ? 1.0 : -1.0;\n        const absoluteValue1 = Math.abs(v1);\n        const absoluteValue2 = Math.abs(v2);\n        return (sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2));\n    }\n}\n","import { CubismMatrix44 } from '@framework/math/cubismmatrix44';\nimport { CubismViewMatrix } from '@framework/math/cubismviewmatrix';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppSprite } from './lappsprite';\nimport { TouchManager } from './touchmanager';\nexport class LAppView {\n    constructor() {\n        this._programId = null;\n        this._back = null;\n        this._gear = null;\n        this._touchManager = new TouchManager();\n        this._deviceToScreen = new CubismMatrix44();\n        this._viewMatrix = new CubismViewMatrix();\n    }\n    initialize(subdelegate) {\n        this._subdelegate = subdelegate;\n        const { width, height } = subdelegate.getCanvas();\n        const ratio = width / height;\n        const left = -ratio;\n        const right = ratio;\n        const bottom = LAppDefine.ViewLogicalLeft;\n        const top = LAppDefine.ViewLogicalRight;\n        this._viewMatrix.setScreenRect(left, right, bottom, top);\n        this._viewMatrix.scale(LAppDefine.ViewScale, LAppDefine.ViewScale);\n        this._deviceToScreen.loadIdentity();\n        if (width > height) {\n            const screenW = Math.abs(right - left);\n            this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\n        }\n        else {\n            const screenH = Math.abs(top - bottom);\n            this._deviceToScreen.scaleRelative(screenH / height, -screenH / height);\n        }\n        this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\n        this._viewMatrix.setMaxScale(LAppDefine.ViewMaxScale);\n        this._viewMatrix.setMinScale(LAppDefine.ViewMinScale);\n        this._viewMatrix.setMaxScreenRect(LAppDefine.ViewLogicalMaxLeft, LAppDefine.ViewLogicalMaxRight, LAppDefine.ViewLogicalMaxBottom, LAppDefine.ViewLogicalMaxTop);\n    }\n    release() {\n        this._viewMatrix = null;\n        this._touchManager = null;\n        this._deviceToScreen = null;\n        this._gear.release();\n        this._gear = null;\n        this._back.release();\n        this._back = null;\n        this._subdelegate.getGlManager().getGl().deleteProgram(this._programId);\n        this._programId = null;\n    }\n    render() {\n        this._subdelegate.getGlManager().getGl().useProgram(this._programId);\n        if (this._back) {\n            this._back.render(this._programId);\n        }\n        if (this._gear) {\n            this._gear.render(this._programId);\n        }\n        this._subdelegate.getGlManager().getGl().flush();\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        if (lapplive2dmanager != null) {\n            lapplive2dmanager.setViewMatrix(this._viewMatrix);\n            lapplive2dmanager.onUpdate();\n        }\n    }\n    initializeSprite() {\n        const width = this._subdelegate.getCanvas().width;\n        const height = this._subdelegate.getCanvas().height;\n        const textureManager = this._subdelegate.getTextureManager();\n        const resourcesPath = LAppDefine.ResourcesPath;\n        let imageName = '';\n        imageName = LAppDefine.BackImageName;\n        const initBackGroundTexture = (textureInfo) => {\n            const x = width * 0.5;\n            const y = height * 0.5;\n            const fwidth = textureInfo.width * 2.0;\n            const fheight = height * 0.95;\n            this._back = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n            this._back.setSubdelegate(this._subdelegate);\n        };\n        textureManager.createTextureFromPngFile(resourcesPath + imageName, false, initBackGroundTexture);\n        imageName = LAppDefine.GearImageName;\n        const initGearTexture = (textureInfo) => {\n            const x = width - textureInfo.width * 0.5;\n            const y = height - textureInfo.height * 0.5;\n            const fwidth = textureInfo.width;\n            const fheight = textureInfo.height;\n            this._gear = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n            this._gear.setSubdelegate(this._subdelegate);\n        };\n        textureManager.createTextureFromPngFile(resourcesPath + imageName, false, initGearTexture);\n        if (this._programId == null) {\n            this._programId = this._subdelegate.createShader();\n        }\n    }\n    onTouchesBegan(pointX, pointY) {\n        this._touchManager.touchesBegan(pointX * window.devicePixelRatio, pointY * window.devicePixelRatio);\n    }\n    onTouchesMoved(pointX, pointY) {\n        const posX = pointX * window.devicePixelRatio;\n        const posY = pointY * window.devicePixelRatio;\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        const viewX = this.transformViewX(this._touchManager.getX());\n        const viewY = this.transformViewY(this._touchManager.getY());\n        this._touchManager.touchesMoved(posX, posY);\n        lapplive2dmanager.onDrag(viewX, viewY);\n    }\n    onTouchesEnded(pointX, pointY) {\n        const posX = pointX * window.devicePixelRatio;\n        const posY = pointY * window.devicePixelRatio;\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        lapplive2dmanager.onDrag(0.0, 0.0);\n        const x = this.transformViewX(posX);\n        const y = this.transformViewY(posY);\n        if (LAppDefine.DebugTouchLogEnable) {\n            LAppPal.printMessage(`[APP]touchesEnded x: ${x} y: ${y}`);\n        }\n        lapplive2dmanager.onTap(x, y);\n        if (this._gear.isHit(posX, posY)) {\n            lapplive2dmanager.nextScene();\n        }\n    }\n    transformViewX(deviceX) {\n        const screenX = this._deviceToScreen.transformX(deviceX);\n        return this._viewMatrix.invertTransformX(screenX);\n    }\n    transformViewY(deviceY) {\n        const screenY = this._deviceToScreen.transformY(deviceY);\n        return this._viewMatrix.invertTransformY(screenY);\n    }\n    transformScreenX(deviceX) {\n        return this._deviceToScreen.transformX(deviceX);\n    }\n    transformScreenY(deviceY) {\n        return this._deviceToScreen.transformY(deviceY);\n    }\n}\n","import * as LAppDefine from './lappdefine';\nimport { LAppGlManager } from './lappglmanager';\nimport { LAppLive2DManager } from './lapplive2dmanager';\nimport { LAppPal } from './lapppal';\nimport { LAppTextureManager } from './lapptexturemanager';\nimport { LAppView } from './lappview';\nexport class LAppSubdelegate {\n    constructor() {\n        this._canvas = null;\n        this._glManager = new LAppGlManager();\n        this._textureManager = new LAppTextureManager();\n        this._live2dManager = new LAppLive2DManager();\n        this._view = new LAppView();\n        this._frameBuffer = null;\n        this._captured = false;\n    }\n    release() {\n        this._resizeObserver.unobserve(this._canvas);\n        this._resizeObserver.disconnect();\n        this._resizeObserver = null;\n        this._live2dManager.release();\n        this._live2dManager = null;\n        this._view.release();\n        this._view = null;\n        this._textureManager.release();\n        this._textureManager = null;\n        this._glManager.release();\n        this._glManager = null;\n    }\n    initialize(canvas) {\n        if (!this._glManager.initialize(canvas)) {\n            return false;\n        }\n        this._canvas = canvas;\n        if (LAppDefine.CanvasSize === 'auto') {\n            this.resizeCanvas();\n        }\n        else {\n            canvas.width = LAppDefine.CanvasSize.width;\n            canvas.height = LAppDefine.CanvasSize.height;\n        }\n        this._textureManager.setGlManager(this._glManager);\n        const gl = this._glManager.getGl();\n        if (!this._frameBuffer) {\n            this._frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.initialize(this);\n        this._view.initializeSprite();\n        this._live2dManager.initialize(this);\n        this._resizeObserver = new ResizeObserver((entries, observer) => this.resizeObserverCallback.call(this, entries, observer));\n        this._resizeObserver.observe(this._canvas);\n        return true;\n    }\n    onResize() {\n        this.resizeCanvas();\n        this._view.initialize(this);\n        this._view.initializeSprite();\n    }\n    resizeObserverCallback(entries, observer) {\n        if (LAppDefine.CanvasSize === 'auto') {\n            this._needResize = true;\n        }\n    }\n    update() {\n        if (this._glManager.getGl().isContextLost()) {\n            return;\n        }\n        if (this._needResize) {\n            this.onResize();\n            this._needResize = false;\n        }\n        const gl = this._glManager.getGl();\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.clearDepth(1.0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.render();\n    }\n    createShader() {\n        const gl = this._glManager.getGl();\n        const vertexShaderId = gl.createShader(gl.VERTEX_SHADER);\n        if (vertexShaderId == null) {\n            LAppPal.printMessage('failed to create vertexShader');\n            return null;\n        }\n        const vertexShader = 'precision mediump float;' +\n            'attribute vec3 position;' +\n            'attribute vec2 uv;' +\n            'varying vec2 vuv;' +\n            'void main(void)' +\n            '{' +\n            '   gl_Position = vec4(position, 1.0);' +\n            '   vuv = uv;' +\n            '}';\n        gl.shaderSource(vertexShaderId, vertexShader);\n        gl.compileShader(vertexShaderId);\n        const fragmentShaderId = gl.createShader(gl.FRAGMENT_SHADER);\n        if (fragmentShaderId == null) {\n            LAppPal.printMessage('failed to create fragmentShader');\n            return null;\n        }\n        const fragmentShader = 'precision mediump float;' +\n            'varying vec2 vuv;' +\n            'uniform sampler2D texture;' +\n            'void main(void)' +\n            '{' +\n            '   gl_FragColor = texture2D(texture, vuv);' +\n            '}';\n        gl.shaderSource(fragmentShaderId, fragmentShader);\n        gl.compileShader(fragmentShaderId);\n        const programId = gl.createProgram();\n        gl.attachShader(programId, vertexShaderId);\n        gl.attachShader(programId, fragmentShaderId);\n        gl.deleteShader(vertexShaderId);\n        gl.deleteShader(fragmentShaderId);\n        gl.linkProgram(programId);\n        gl.useProgram(programId);\n        return programId;\n    }\n    getTextureManager() {\n        return this._textureManager;\n    }\n    getFrameBuffer() {\n        return this._frameBuffer;\n    }\n    getCanvas() {\n        return this._canvas;\n    }\n    getGlManager() {\n        return this._glManager;\n    }\n    getLive2DManager() {\n        return this._live2dManager;\n    }\n    resizeCanvas() {\n        this._canvas.width = this._canvas.clientWidth * window.devicePixelRatio;\n        this._canvas.height = this._canvas.clientHeight * window.devicePixelRatio;\n        const gl = this._glManager.getGl();\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    onPointBegan(pageX, pageY) {\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        this._captured = true;\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesBegan(localX, localY);\n    }\n    onPointMoved(pageX, pageY) {\n        if (!this._captured) {\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesMoved(localX, localY);\n    }\n    onPointEnded(pageX, pageY) {\n        this._captured = false;\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesEnded(localX, localY);\n    }\n    onTouchCancel(pageX, pageY) {\n        this._captured = false;\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesEnded(localX, localY);\n    }\n    isContextLost() {\n        return this._glManager.getGl().isContextLost();\n    }\n}\n","import { csmVector } from '@framework/type/csmvector';\nimport { CubismFramework, Option } from '@framework/live2dcubismframework';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppSubdelegate } from './lappsubdelegate';\nimport { CubismLogError } from '@framework/utils/cubismdebug';\nexport let s_instance = null;\nexport class LAppDelegate {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppDelegate();\n        }\n        return s_instance;\n    }\n    static releaseInstance() {\n        if (s_instance != null) {\n            s_instance.release();\n        }\n        s_instance = null;\n    }\n    onPointerBegan(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointBegan(e.pageX, e.pageY);\n        }\n    }\n    onPointerMoved(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointMoved(e.pageX, e.pageY);\n        }\n    }\n    onPointerEnded(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointEnded(e.pageX, e.pageY);\n        }\n    }\n    onPointerCancel(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onTouchCancel(e.pageX, e.pageY);\n        }\n    }\n    onResize() {\n        for (let i = 0; i < this._subdelegates.getSize(); i++) {\n            this._subdelegates.at(i).onResize();\n        }\n    }\n    run() {\n        const loop = () => {\n            if (s_instance == null) {\n                return;\n            }\n            LAppPal.updateTime();\n            for (let i = 0; i < this._subdelegates.getSize(); i++) {\n                this._subdelegates.at(i).update();\n            }\n            requestAnimationFrame(loop);\n        };\n        loop();\n    }\n    release() {\n        this.releaseEventListener();\n        this.releaseSubdelegates();\n        CubismFramework.dispose();\n        this._cubismOption = null;\n    }\n    releaseEventListener() {\n        document.removeEventListener('pointerup', this.pointBeganEventListener);\n        this.pointBeganEventListener = null;\n        document.removeEventListener('pointermove', this.pointMovedEventListener);\n        this.pointMovedEventListener = null;\n        document.removeEventListener('pointerdown', this.pointEndedEventListener);\n        this.pointEndedEventListener = null;\n        document.removeEventListener('pointerdown', this.pointCancelEventListener);\n        this.pointCancelEventListener = null;\n    }\n    releaseSubdelegates() {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().release();\n        }\n        this._subdelegates.clear();\n        this._subdelegates = null;\n    }\n    initialize() {\n        this.initializeCubism();\n        this.initializeSubdelegates();\n        this.initializeEventListener();\n        return true;\n    }\n    initializeEventListener() {\n        this.pointBeganEventListener = this.onPointerBegan.bind(this);\n        this.pointMovedEventListener = this.onPointerMoved.bind(this);\n        this.pointEndedEventListener = this.onPointerEnded.bind(this);\n        this.pointCancelEventListener = this.onPointerCancel.bind(this);\n        document.addEventListener('pointerdown', this.pointBeganEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointermove', this.pointMovedEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointerup', this.pointEndedEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointercancel', this.pointCancelEventListener, {\n            passive: true\n        });\n    }\n    initializeCubism() {\n        LAppPal.updateTime();\n        this._cubismOption.logFunction = LAppPal.printMessage;\n        this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\n        CubismFramework.startUp(this._cubismOption);\n        CubismFramework.initialize();\n    }\n    initializeSubdelegates() {\n        let width = 100;\n        let height = 100;\n        if (LAppDefine.CanvasNum > 3) {\n            const widthunit = Math.ceil(Math.sqrt(LAppDefine.CanvasNum));\n            const heightUnit = Math.ceil(LAppDefine.CanvasNum / widthunit);\n            width = 100.0 / widthunit;\n            height = 100.0 / heightUnit;\n        }\n        else {\n            width = 100.0 / LAppDefine.CanvasNum;\n        }\n        this._canvases.prepareCapacity(LAppDefine.CanvasNum);\n        this._subdelegates.prepareCapacity(LAppDefine.CanvasNum);\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            const canvas = document.createElement('canvas');\n            this._canvases.pushBack(canvas);\n            canvas.style.width = `${width}vw`;\n            canvas.style.height = `${height}vh`;\n            document.body.appendChild(canvas);\n        }\n        for (let i = 0; i < this._canvases.getSize(); i++) {\n            const subdelegate = new LAppSubdelegate();\n            subdelegate.initialize(this._canvases.at(i));\n            this._subdelegates.pushBack(subdelegate);\n        }\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            if (this._subdelegates.at(i).isContextLost()) {\n                CubismLogError(`The context for Canvas at index ${i} was lost, possibly because the acquisition limit for WebGLRenderingContext was reached.`);\n            }\n        }\n    }\n    constructor() {\n        this._cubismOption = new Option();\n        this._subdelegates = new csmVector();\n        this._canvases = new csmVector();\n    }\n}\n","import { LAppDelegate } from '@demo/lappdelegate.js';\nimport { LAppSubdelegate } from '@demo/lappsubdelegate.js';\nimport * as LAppDefine from '@demo/lappdefine.js';\nimport { LAppModel } from '@demo/lappmodel.js';\nimport { LAppPal } from '@demo/lapppal';\nimport logger from '../logger.js';\nclass AppSubdelegate extends LAppSubdelegate {\n    initialize(canvas) {\n        if (!this._glManager.initialize(canvas)) {\n            return false;\n        }\n        this._canvas = canvas;\n        if (LAppDefine.CanvasSize === 'auto') {\n            this.resizeCanvas();\n        }\n        else {\n            canvas.width = LAppDefine.CanvasSize.width;\n            canvas.height = LAppDefine.CanvasSize.height;\n        }\n        this._textureManager.setGlManager(this._glManager);\n        const gl = this._glManager.getGl();\n        if (!this._frameBuffer) {\n            this._frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.initialize(this);\n        this._view._gear = {\n            render: () => { },\n            isHit: () => { },\n            release: () => { }\n        };\n        this._view._back = {\n            render: () => { },\n            release: () => { }\n        };\n        this._live2dManager._subdelegate = this;\n        this._resizeObserver = new window.ResizeObserver((entries, observer) => this.resizeObserverCallback.call(this, entries, observer));\n        this._resizeObserver.observe(this._canvas);\n        return true;\n    }\n    onResize() {\n        this.resizeCanvas();\n        this._view.initialize(this);\n    }\n    update() {\n        if (this._glManager.getGl().isContextLost()) {\n            return;\n        }\n        if (this._needResize) {\n            this.onResize();\n            this._needResize = false;\n        }\n        const gl = this._glManager.getGl();\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.clearDepth(1.0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.render();\n    }\n}\nexport class AppDelegate extends LAppDelegate {\n    run() {\n        const loop = () => {\n            LAppPal.updateTime();\n            for (let i = 0; i < this._subdelegates.getSize(); i++) {\n                this._subdelegates.at(i).update();\n            }\n            this._drawFrameId = window.requestAnimationFrame(loop);\n        };\n        loop();\n    }\n    stop() {\n        if (this._drawFrameId) {\n            window.cancelAnimationFrame(this._drawFrameId);\n            this._drawFrameId = null;\n        }\n    }\n    release() {\n        this.stop();\n        this.releaseEventListener();\n        this._subdelegates.clear();\n        this._cubismOption = null;\n    }\n    releaseEventListener() {\n        document.removeEventListener('pointerdown', this.pointBeganEventListener, {\n            passive: true\n        });\n        this.pointBeganEventListener = null;\n        document.removeEventListener('pointermove', this.pointMovedEventListener, {\n            passive: true\n        });\n        this.pointMovedEventListener = null;\n        document.removeEventListener('pointerup', this.pointEndedEventListener, {\n            passive: true\n        });\n        this.pointEndedEventListener = null;\n        document.removeEventListener('pointercancel', this.pointCancelEventListener, {\n            passive: true\n        });\n        this.pointCancelEventListener = null;\n    }\n    initializeSubdelegates() {\n        this._canvases.prepareCapacity(LAppDefine.CanvasNum);\n        this._subdelegates.prepareCapacity(LAppDefine.CanvasNum);\n        const canvas = document.getElementById('live2d');\n        this._canvases.pushBack(canvas);\n        canvas.style.width = canvas.width;\n        canvas.style.height = canvas.height;\n        for (let i = 0; i < this._canvases.getSize(); i++) {\n            const subdelegate = new AppSubdelegate();\n            const result = subdelegate.initialize(this._canvases.at(i));\n            if (!result) {\n                logger.error('Failed to initialize AppSubdelegate');\n                return;\n            }\n            this._subdelegates.pushBack(subdelegate);\n        }\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            if (this._subdelegates.at(i).isContextLost()) {\n                logger.error(`The context for Canvas at index ${i} was lost, possibly because the acquisition limit for WebGLRenderingContext was reached.`);\n            }\n        }\n    }\n    changeModel(modelSettingPath) {\n        const segments = modelSettingPath.split('/');\n        const modelJsonName = segments.pop();\n        const modelPath = segments.join('/') + '/';\n        const live2dManager = this._subdelegates.at(0).getLive2DManager();\n        live2dManager.releaseAllModel();\n        const instance = new LAppModel();\n        instance.setSubdelegate(live2dManager._subdelegate);\n        instance.loadAssets(modelPath, modelJsonName);\n        live2dManager._models.pushBack(instance);\n    }\n    get subdelegates() {\n        return this._subdelegates;\n    }\n}\n"],"names":["csmVector","constructor","initialCapacity","this","_ptr","_capacity","_size","Array","at","index","set","value","get","offset","ret","i","push","pushBack","prepareCapacity","DefaultSize","clear","length","getSize","assign","newSize","resize","updateSize","callPlacementNew","JSON","parse","stringify","sub","splice","insert","position","begin","end","dstSi","_index","srcSi","srcEi","addCount","addSize","_vector","remove","erase","ite","iterator","getOffset","newVector","iterator$1","v","undefined","preIncrement","preDecrement","increment","decrement","ptr","substitution","notEqual","Live2DCubismFramework","CubismBlendMode","$.csmVector","$.iterator","csmString","append","c","s","substr","expansion","getBytes","encodeURIComponent","replace","getLength","isLess","isGreat","isEqual","isEmpty","$.csmString","CubismId","createIdInternal","id","getString","_id","isNotEqual","$.CubismId","CubismIdManager","_ids","release","registerIds","ids","registerId","result","findId","getId","isExist","$.CubismIdManager","CubismMatrix44","_tr","Float32Array","loadIdentity","multiply","a","b","dst","j","k","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","x","y","tr1","translate","translateX","translateY","scaleRelative","scale","multiplyByMatrix","m","clone","cloneMatrix","$.CubismMatrix44","csmRect","w","h","width","height","getCenterX","getCenterY","getRight","getBottom","setRect","r","expand","$.csmRect","CubismRenderer","create","renderer","initialize","model","_model","drawModel","getModel","saveProfile","doDrawModel","restoreProfile","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","g","getModelColor","getModelColorWithOpacity","opacity","modelColorRGBA","isPremultipliedAlpha","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","n","_anisotropy","getAnisotropy","useHighPrecisionMask","high","_useHighPrecisionMask","isUsingHighPrecisionMask","CubismTextureColor","CubismClippingContext","clippingDrawableIndices","clipCount","_clippingIdList","_clippingIdCount","_allClippedDrawRect","_layoutBounds","_clippedDrawableIndexList","_matrixForMask","_matrixForDraw","_bufferIndex","addClippedDrawable","drawableIndex","$.CubismBlendMode","$.CubismRenderer","$.CubismTextureColor","CubismLogPrintIn","level","fmt","args","CubismDebug","print","CubismLogPrint","CSM_ASSERT","expr","console","assert","CubismLogDebug","CubismLogInfo","CubismLogWarning","CubismLogError","LogLevel","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","LogLevel_Error","logLevel","format","CubismFramework","getLoggingLevel","logPrint","coreLogFunction","dumpBytes","data","$.CubismDebug","csmPair","key","first","second","csmMap","size","_keyValues","_dummyValue","appendKey","findIndex","getValue","found","setValue","fitToSize","dumpAsInt","idx","_map","iteold","$.csmMap","$.csmPair","CubismJsonExtension","parseJsonObject","obj","map","Object","keys","forEach","convValue","Boolean","put","JsonBoolean","String","JsonString","Number","JsonFloat","parseJsonArray","JsonMap","JsonNullvalue","arr","JsonArray","add","CSM_JSON_ERROR_TYPE_MISMATCH","Value$2","Value","getRawString","defaultValue","indent","toInt","toFloat","toBoolean","getVector","getMap","getValueByIndex","errorValue","setErrorNotForClientCall","getValueByString","nullValue","getKeys","dummyKeys","isError","isNull","isBool","isFloat","isString","isArray","isMap","equals","isStatic","errorStr","JsonError","staticInitializeNotForClientCall","trueValue","falseValue","staticReleaseNotForClientCall","CubismJson","buffer","_parseCallback","_error","_lineCount","_root","parseBytes","json","delete","instance","getRoot","arrayBufferToString","uint8Array","Uint8Array","str","len","pad","toString","decodeURIComponent","parseCallback","endPos","decodeBuffer","parseValue","strbuf","getParseError","checkEndOfFile","outEndPos","f","o","afterString","strtod","slice","indexOf","parseString","parseArray","parseObject","string","c2","bufStart","localRetEndPos2","ok","FOR_LOOP","FOR_LOOP2","FOR_LOOP3","localRetEndpos2","super","_value","parseFloat","_stringBuffer","parseInt","Math","round","_boolValue","_isStatic","_array","stringBuffer","iter","_keys","endPtr","testC","test","substring","number","isNaN","d","NaN","$.CubismJson","$.JsonArray","$.JsonBoolean","$.JsonError","$.JsonFloat","$.JsonMap","$.JsonNullvalue","$.JsonString","$.Value","s_isStarted","s_isInitialized","s_option","s_cubismIdManager","Constant","freeze","vertexOffset","vertexStep","csmDelete","address","startUp","option","Live2DCubismCore","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","minor","patch","versionNumber","cleanUp","memorySize","Memory","initializeAmountOfMemory","dispose","staticRelease","isStarted","isInitialized","message","csmGetLogFunction","loggingLevel","LogLevel_Off","getIdManager","Option","$.Constant","$.csmDelete","$.CubismFramework","ResourcesPath","ModelDir","ModelDirSize","HitAreaNameHead","HitAreaNameBody","CubismLoggingLevel","LogLevel_Verbose","LAppPal","loadFileAsBytes","filePath","callback","fetch","then","response","arrayBuffer","byteLength","getDeltaTime","deltaTime","updateTime","currentFrame","Date","now","lastFrame","printMessage","trace","lastUpdate","LAppGlManager","_gl","canvas","getContext","alert","getGl","CubismDefaultParameterId","HitAreaPrefix","HitAreaHead","HitAreaBody","PartsIdCore","PartsArmPrefix","PartsArmLPrefix","PartsArmRPrefix","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeLOpen","ParamEyeLSmile","ParamEyeROpen","ParamEyeRSmile","ParamEyeBallX","ParamEyeBallY","ParamEyeBallForm","ParamBrowLY","ParamBrowRY","ParamBrowLX","ParamBrowRX","ParamBrowLAngle","ParamBrowRAngle","ParamBrowLForm","ParamBrowRForm","ParamMouthForm","ParamMouthOpenY","ParamCheek","ParamBodyAngleX","ParamBodyAngleY","ParamBodyAngleZ","ParamBreath","ParamArmLA","ParamArmRA","ParamArmLB","ParamArmRB","ParamHandL","ParamHandR","ParamHairFront","ParamHairSide","ParamHairBack","ParamHairFluffy","ParamShoulderY","ParamBustX","ParamBustY","ParamBaseX","ParamBaseY","ParamNONE","FrequestNode","EyeState","$.CubismDefaultParameterId","ICubismModelSetting","$.ICubismModelSetting","CubismModelSettingJson","fileReferences","groups","layout","hitAreas","moc","textures","physics","pose","expressions","motions","userData","name","target","idle","tapBody","pinchIn","pinchOut","shake","flickHead","parameter","soundPath","fadeInTime","fadeOutTime","centerX","centerY","lipSync","eyeBlink","initParameter","initPartsVisible","val","_json","getJson","_jsonValue","getModelFileName","isExistModelFile","FrequestNode_Moc","getTextureCount","isExistTextureFiles","FrequestNode_Textures","getTextureDirectory","pathArray","split","arrayLength","textureDirectoryStr","getTextureFileName","getHitAreasCount","isExistHitAreas","FrequestNode_HitAreas","getHitAreaId","getHitAreaName","getPhysicsFileName","isExistPhysicsFile","FrequestNode_Physics","getPoseFileName","isExistPoseFile","FrequestNode_Pose","getExpressionCount","isExistExpressionFile","FrequestNode_Expressions","getExpressionName","getExpressionFileName","getMotionGroupCount","isExistMotionGroups","FrequestNode_Motions","getMotionGroupName","getMotionCount","groupName","isExistMotionGroupName","getMotionFileName","getMotionSoundFileName","isExistMotionSoundFile","getMotionFadeInTimeValue","isExistMotionFadeIn","getMotionFadeOutTimeValue","isExistMotionFadeOut","getUserDataFile","isExistUserDataFile","getLayoutMap","outLayoutMap","getEyeBlinkParameterCount","isExistEyeBlinkParameters","num","FrequestNode_Groups","refI","getEyeBlinkParameterId","getLipSyncParameterCount","isExistLipSyncParameters","getLipSyncParameterId","node","$.CubismModelSettingJson","$.FrequestNode","CubismBreath","setParameters","breathParameters","_breathParameters","getParameters","updateParameters","deltaTimeSeconds","_currentTime","t","PI","addParameterValueById","parameterId","peak","sin","cycle","weight","BreathParameterData","$.BreathParameterData","$.CubismBreath","CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","random","$.CubismEyeBlink","$.EyeState","FadeIn","Link","CubismPose","pose3json","root","_fadeTimeSeconds","poseListInfo","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","linkListInfo","linkCount","linkIndex","linkPart","linkId","link","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","partsIndex","partIndex","paramIndex","parameterIndex","setPartOpacityByIndex","setParameterValueByIndex","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","getParameterValueByIndex","a1","assignment","getParameterIndex","getPartIndex","clonePartData","$.CubismPose","$.PartData","CubismModelMatrix","_width","_height","setHeight","setWidth","scaleX","scaleY","setPosition","setCenterPosition","top","setY","bottom","left","setX","right","setupFromLayout","$.CubismModelMatrix","CubismVector2","vector2","substract","multiplyByScaler","scalar","division","divisionByScalar","sqrt","getDistanceWith","dot","normalize","pow","rhs","$.CubismVector2","CubismMath","range","min","max","cos","abs","cbrt","cx","isNegativeNumber","Infinity","exp","log","getEasingSine","clamp","degreesToRadian","degrees","radianToDegrees","radian","directionToRadian","from","to","atan2","directionToDegrees","degree","radianToDirection","totalAngle","quadraticEquation","Epsilon","cardanoAlgorithmForBezier","ba","ca","p","p3","q","q2","discriminant","center","threshold","mp3","mp33","cosphi","acos","t1","root1","root2","root3","u1","sd","mod","dividend","divisor","isFinite","warn","absDividend","absDivisor","floor","sign","$.CubismMath","CubismTargetPoint","_faceTargetX","_faceTargetY","_faceX","_faceY","_faceVX","_faceVY","_lastTimeSeconds","update","maxV","deltaTimeWeight","maxA","timeToMaxSpeed","dx","dy","vy","ax","ay","curV","getX","getY","$.CubismTargetPoint","ACubismMotion","motion","setBeganMotionHandler","onBeganMotionHandler","_onBeganMotion","getBeganMotionHandler","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_isLoop","_isLoopFadeIn","_previousLoopState","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","setupMotionQueueEntry","fadeWeight","updateFadeWeight","doUpdateParameters","getEndTime","setIsFinished","setIsStarted","setStartTime","setFadeInStartTime","adjustEndTime","_motion","getFadeInStartTime","setState","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getDuration","getLoopDuration","setOffsetTime","offsetSeconds","setLoop","loop","getLoop","setLoopFadeIn","loopFadeIn","getLoopFadeIn","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","isExistModelOpacity","getModelOpacityIndex","getModelOpacityId","getModelOpacityValue","duration","endTime","getStartTime","setEndTime","$.ACubismMotion","ExpressionKeyParameters","ExpressionKeyBlend","CubismExpressionMotion","expression","_parameters","blendType","ExpressionBlendType","Additive","Multiply","multiplyParameterValueById","Overwrite","calculateExpressionParameters","expressionParameterValues","expressionIndex","_fadeWeight","expressionParameterValue","currentParameterValue","overwriteValue","getParameterValueById","expressionParameters","getExpressionParameters","additiveValue","DefaultAdditiveValue","multiplyValue","DefaultMultiplyValue","calculateValue","newAdditiveValue","newMultiplyValue","newOverwriteValue","getFadeWeight","parameterCount","param","item","ExpressionParameter","source","destination","$.CubismExpressionMotion","$.ExpressionBlendType","$.ExpressionParameter","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","getCubismMotion","$.CubismMotionQueueEntry","CubismMotionQueueManager","_eventCallBack","_eventCustomData","_motions","startMotion","autoDelete","InvalidMotionQueueEntryHandleValue","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntries","getCubismMotionQueueEntry","setEventCallback","customData","doUpdateMotion","updated","firedList","CubismMotionCurveTarget","CubismMotionSegmentType","$.CubismMotionQueueManager","$.InvalidMotionQueueEntryHandleValue","ExpressionParameterValue","CubismExpressionMotionManager","_currentPriority","_reservePriority","_expressionParameterValues","_fadeWeights","getCurrentPriority","getReservePriority","setFadeWeight","expressionFadeWeight","setReservePriority","priority","startMotionPriority","updateMotion","expressionWeight","difference","expressionMotion","$.CubismExpressionMotionManager","CubismMotionPoint","time","CubismMotionSegment","evaluate","basePointIndex","segmentType","CubismMotionCurve","type","CubismMotionCurveTarget_Model","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","curveCount","eventCount","fps","curves","segments","points","events","$.CubismMotionCurve","$.CubismMotionCurveTarget","$.CubismMotionData","$.CubismMotionEvent","$.CubismMotionPoint","$.CubismMotionSegment","$.CubismMotionSegmentType","Meta","Curves","FadeInTime","FadeOutTime","Segments","UserData","CubismMotionJson","getMotionDuration","isMotionLoop","hasConsistency","actualCurveListSize","actualTotalSegmentCount","actualTotalPointCount","curvePosition","segmentPosition","getMotionCurveSegmentCount","getMotionCurveSegment","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Bezier","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","getMotionCurveCount","getMotionTotalSegmentCount","getMotionTotalPointCount","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","getMotionFps","isExistMotionFadeInTime","isExistMotionFadeOutTime","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","getMotionCurveId","isExistMotionCurveFadeInTime","isExistMotionCurveFadeOutTime","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","segmentIndex","getEventCount","getTotalEventValueSize","getEventTime","userDataIndex","getEventValue","$.CubismMotionJson","IdNameOpacity","lerpPoints","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","isCorrection","curve","totalSegmentCount","pointPosition","endIndex","motionPoint","correctEndPoint","segment","MotionBehavior","CubismPhysicsTargetType","CubismPhysicsSource","CubismMotion","shouldCheckMotionConsistency","_motionData","_sourceFrameRate","_loopDurationSeconds","_modelCurveIdEyeBlink","_modelCurveIdLipSync","_modelCurveIdOpacity","_motionBehavior","MotionBehavior_V2","timeOffsetSeconds","lipSyncValue","MAX_VALUE","eyeBlinkValue","maxTargetSize","lipSyncFlags","eyeBlinkFlags","_eyeBlinkParameterIds","_lipSyncParameterIds","tmpFadeIn","tmpFadeOut","_modelOpacity","setModelOapcity","CubismMotionCurveTarget_Parameter","sourceValue","isRepeat","getParameterRepeatValue","fin","fout","CubismMotionCurveTarget_PartOpacity","updateForNextLoop","_lastWeight","setIsLoop","isLoop","setIsLoopFadeIn","isLoopFadeIn","setMotionBehavior","motionBehavior","getMotionBehavior","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","_debugMode","MotionBehavior_V1","motionJson","areBeziersRestructed","totalPointCount","userdatacount","u","localeCompare","setDebugMode","debugMode","$.CubismMotion","CubismMotionManager","reserveMotion","$.CubismMotionManager","PhysicsJsonEffectiveForces","gravity","wind","CubismPhysicsParameter","CubismPhysicsNormalization","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","$.CubismPhysicsInput","$.CubismPhysicsNormalization","$.CubismPhysicsOutput","$.CubismPhysicsParameter","$.CubismPhysicsParticle","$.CubismPhysicsRig","$.CubismPhysicsSource","$.CubismPhysicsSubRig","$.CubismPhysicsTargetType","$.PhysicsJsonEffectiveForces","Position","Angle","Type","EffectiveForces","Gravity","Wind","PhysicsSettings","Normalization","Minimum","Maximum","Default","Reflect","Weight","Input","Output","Vertices","CubismPhysicsJson","getGravity","getWind","getFps","getSubRigCount","getTotalInputCount","getTotalOutputCount","getVertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","getNormalizationPositionMaximumValue","getNormalizationPositionDefaultValue","getNormalizationAngleMinimumValue","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","getInputWeight","inputIndex","getInputReflect","getInputType","getInputSourceId","getOutputCount","getOutputVertexIndex","outputIndex","getOutputAngleScale","getOutputWeight","getOutputDestinationId","getOutputType","getOutputReflect","getParticleCount","getParticleMobility","vertexIndex","getParticleDelay","getParticleAcceleration","getParticleRadius","getParticlePosition","$.CubismPhysicsJson","PhysicsTypeTagAngle","CubismPhysics","_physicsRig","physicsJson","subRigCount","_currentRigOutputs","_previousRigOutputs","particleIndex","minimum","maximum","defalut","inputCount","baseInputIndex","sourceParameterIndex","reflect","CubismPhysicsSource_X","getNormalizedParameterValue","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","outputCount","baseOutputIndex","currentRigOutput","PhysicsOutput","previousRigOutput","destinationParameterIndex","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particleCount","baseParticleIndex","mobility","delay","acceleration","radius","stabilization","_b","_c","_d","_f","radAngle","outputValue","totalTranslation","currentSetting","currentInputs","currentOutputs","currentParticles","parameterValues","parameters","values","parameterMaximumValues","maximumValues","parameterMinimumValues","minimumValues","parameterDefaultValues","defaultValues","_parameterCaches","getParameterCount","_parameterInputCaches","settingIndex","angle","updateParticlesForStabilization","_options","translation","outParameterCaches","prototype","subarray","updateOutputParameterValue","outParamIndex","physicsDeltaTime","_currentRemainTime","inputWeight","updateParticles","interpolate","outParameterValues","setOptions","options","getOption","Options","strand","targetTranslation","targetAngle","parameterMinimumValue","parameterMaximumValue","parameterDefaultValue","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getDefaultValue","maxValue","minValue","getRangeValue","strandCount","windDirection","thresholdValue","airResistance","direction","newDirection","totalRadian","currentGravity","parameterValueMinimum","parameterValueMaximum","output","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","pLength","$.CubismPhysics","$.Options","CubismClippingManager","clippingContextFactory","_renderTextureCount","_clippingMaskBufferSize","_clippingContextListForMask","_clippingContextListForDraw","_channelColors","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","_clippingContexttConstructor","tmp","_clearedFrameBufferFlags","renderTextureCount","getDrawableCount","getDrawableMaskCounts","clippingContext","findSameClip","getDrawableMasks","drawableMasks","drawableMaskCounts","count","sameCount","clipId","setupMatrixForHighPrecision","isRightHanded","usingClipCount","clipIndex","cc","calcClippedDrawTotalBounds","_isUsing","setupLayoutBounds","clipContext","allClippedDrawRect","layoutBoundsOnTex01","margin","ppu","getPixelsPerUnit","maskPixelSize","getClippingManager","getClippingMaskBufferSize","physicalMaskWidth","physicalMaskHeight","createMatrixForMask","useClippingMaskMaxCount","_layoutChannelIndex","layoutCountMaxValue","countPerSheetDiv","reduceLayoutTextureCount","ceil","divCount","modCount","curClipIndex","renderTextureIndex","channelIndex","layoutCount","xpos","ypos","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","clippedDrawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","getDrawableVertices","minX","minY","maxX","maxY","pi","getClippingContextListForDraw","getRenderTextureCount","getChannelFlagAsColor","channelNo","setClippingMaskBufferSize","s_instance","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgramForDraw","srcColor","dstColor","srcAlpha","dstAlpha","generateShaders","masked","getClippingContextBufferForDraw","invertedMask","getDrawableInvertedMaskBit","shaderSet","getDrawableBlendMode","CubismBlendMode_Normal","ShaderNames","ShaderNames_NormalPremultipliedAlpha","gl","ONE","ONE_MINUS_SRC_ALPHA","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","ZERO","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","DST_COLOR","useProgram","shaderProgram","_bufferData","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","vertexArray","bufferData","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","uvArray","getDrawableVertexUvs","attributeTexCoordLocation","activeTexture","TEXTURE1","tex","getColorBuffer","bindTexture","TEXTURE_2D","uniform1i","samplerTexture1Location","uniformMatrix4fv","uniformClipMatrixLocation","colorChannel","uniform4f","uniformChannelFlagLocation","textureNo","getDrawableTextureIndex","textureId","getBindedTextures","TEXTURE0","samplerTexture0Location","matrix4x4","uniformMatrixLocation","baseColor","getDrawableOpacity","multiplyColor","getMultiplyColor","screenColor","getScreenColor","uniformBaseColorLocation","uniformMultiplyColorLocation","uniformScreenColorLocation","indexArray","getDrawableVertexIndices","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","setupShaderProgramForMask","ShaderNames_SetupMask","getClippingContextBufferForMask","rect","ONE_MINUS_SRC_COLOR","deleteProgram","CubismShaderSet","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","setGl","CubismShaderManager_WebGL","getInstance","deleteInstance","_shaderMap","getShader","setGlContext","s_viewport","s_fbo","$.CubismShaderSet","$.CubismShader_WebGL","$.CubismShaderManager_WebGL","$.ShaderNames","CubismClippingManager_WebGL","getMaskRenderTexture","_maskTexture","frameNo","_currentFrameNo","_maskRenderTextures","_maskColorBuffers","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","CubismClippingContext_WebGL","setupClippingContext","viewport","_currentMaskRenderTexture","preDraw","allClipedDrawRect","clipContextRenderTexture","clipDrawCount","clipDrawIndex","getDrawableDynamicFlagVertexPositionsDidChange","getDrawableCulling","clearColor","COLOR_BUFFER_BIT","setClippingContextBufferForMask","drawMeshWebGL","getClippingMaskCount","texture","manager","_owner","CubismRendererProfile_WebGL","setGlEnable","enabled","disable","setGlEnableVertexAttribArray","disableVertexAttribArray","save","_lastArrayBufferBinding","getParameter","ARRAY_BUFFER_BINDING","_lastElementArrayBufferBinding","ELEMENT_ARRAY_BUFFER_BINDING","_lastProgram","CURRENT_PROGRAM","_lastActiveTexture","ACTIVE_TEXTURE","_lastTexture1Binding2D","TEXTURE_BINDING_2D","_lastTexture0Binding2D","_lastVertexAttribArrayEnabled","getVertexAttrib","VERTEX_ATTRIB_ARRAY_ENABLED","_lastScissorTest","isEnabled","SCISSOR_TEST","_lastStencilTest","STENCIL_TEST","_lastDepthTest","DEPTH_TEST","_lastCullFace","CULL_FACE","_lastBlend","BLEND","_lastFrontFace","FRONT_FACE","_lastColorMask","COLOR_WRITEMASK","_lastBlending","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","_lastFBO","FRAMEBUFFER_BINDING","_lastViewport","VIEWPORT","restore","frontFace","colorMask","CubismRenderer_WebGL","maskBufferCount","isUsingMasking","_clippingManager","_sortedDrawableIndexList","modelTextureNo","glTexture","_textures","_clippingContextBufferForMask","_clippingContextBufferForDraw","_rendererProfile","firstDraw","WebGLBuffer","deleteBuffer","drawableCount","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","CCW","isGeneratingMask","indexCount","getDrawableVertexIndexCount","drawElements","TRIANGLES","UNSIGNED_SHORT","doStaticRelease","setRenderState","fbo","CW","_extension","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","clip","getExtension","$.CubismClippingContext_WebGL","$.CubismClippingManager_WebGL","$.CubismRenderTextureResource","$.CubismRenderer_WebGL","ParameterRepeatData","isOverridden","isParameterRepeated","DrawableColorData","color","isOverwritten","PartColorData","DrawableCullingData","CubismModel","drawables","resetDynamicFlags","canvasinfo","PixelsPerUnit","getCanvasWidth","CanvasWidth","getCanvasHeight","CanvasHeight","saveParameters","savedParameterCount","_savedParameters","_parameterValues","getOverrideFlagForModelMultiplyColors","getOverrideFlagForDrawableMultiplyColors","_userMultiplyColors","getDrawableMultiplyColor","getOverrideFlagForModelScreenColors","getOverrideFlagForDrawableScreenColors","_userScreenColors","getDrawableScreenColor","setMultiplyColorByTextureColor","setMultiplyColorByRGBA","setScreenColorByTextureColor","setScreenColorByRGBA","getPartMultiplyColor","_userPartMultiplyColors","getPartScreenColor","_userPartScreenColors","setPartColor","partColors","drawableColors","_partChildDrawables","setPartMultiplyColorByTextureColor","setPartMultiplyColorByRGBA","setPartScreenColorByTextureColor","setPartScreenColorByRGBA","getOverrideFlagForModelParameterRepeat","_isOverriddenParameterRepeat","setOverrideFlagForModelParameterRepeat","getOverrideFlagForParameterRepeat","_userParameterRepeatDataList","setOverrideFlagForParameterRepeat","getRepeatFlagForParameterRepeat","setRepeatFlagForParameterRepeat","getOverwriteFlagForModelMultiplyColors","_isOverriddenModelMultiplyColors","getOverwriteFlagForModelScreenColors","_isOverriddenModelScreenColors","setOverwriteFlagForModelMultiplyColors","setOverrideFlagForModelMultiplyColors","setOverwriteFlagForModelScreenColors","setOverrideFlagForModelScreenColors","getOverwriteFlagForDrawableMultiplyColors","drawableindex","getOverwriteFlagForDrawableScreenColors","setOverwriteFlagForDrawableMultiplyColors","setOverrideFlagForDrawableMultiplyColors","setOverwriteFlagForDrawableScreenColors","setOverrideFlagForDrawableScreenColors","getOverwriteColorForPartMultiplyColors","getOverrideColorForPartMultiplyColors","getOverwriteColorForPartScreenColors","getOverrideColorForPartScreenColors","setOverwriteColorForPartColors","setOverrideColorForPartColors","setOverwriteColorForPartMultiplyColors","setOverrideColorForPartMultiplyColors","setOverwriteColorForPartScreenColors","setOverrideColorForPartScreenColors","getOverrideFlagForModelCullings","getOverrideFlagForDrawableCullings","_userCullings","constantFlags","Utils","hasIsDoubleSidedBit","setDrawableCulling","getOverwriteFlagForModelCullings","_isOverriddenCullings","setOverwriteFlagForModelCullings","isOverriddenCullings","setOverrideFlagForModelCullings","getOverwriteFlagForDrawableCullings","setOverwriteFlagForDrawableCullings","setOverrideFlagForDrawableCullings","getModelOapcity","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartId","getPartCount","getPartParentPartIndices","parentIndices","_partOpacities","setPartOpacityById","getPartOpacityById","_notExistParameterId","_notExistParameterValues","getParameterType","types","getParameterMaximumValue","getParameterMinimumValue","getParameterDefaultValue","getParameterId","getParameterClampValue","addParameterValueByIndex","repeats","valueSize","overValue","getParameterRepeats","multiplyParameterValueByIndex","getDrawableIndex","drawableId","_drawableIds","getDrawableId","renderOrders","getDrawableTextureIndices","textureIndices","dynamicFlags","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","multiplyColors","screenColors","getDrawableParentPartIndex","parentPartIndices","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","getDrawableDynamicFlagBlendColorDidChange","hasBlendColorDidChangeBit","loadParameters","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","userCulling","userMultiplyColor","userScreenColor","parentIndex","$.CubismModel","CubismMoc","mocBytes","shouldCheckMocConsistency","cubismMoc","hasMocConsistency","Moc","fromArrayBuffer","_mocVersion","csmGetMocVersion","_moc","_release","createModel","cubismModel","Model","fromMoc","_modelCount","deleteModel","getLatestMocVersion","csmGetLatestMocVersion","getMocVersion","$.CubismMoc","CubismModelUserDataJson","getUserDataCount","getTotalUserDataSize","getUserDataTargetType","getUserDataId","getUserDataValue","$.CubismModelUserDataJson","CubismModelUserDataNode","CubismModelUserData","parseUserData","modelUserData","getArtMeshUserDatas","_artMeshUserDataNode","typeOfArtMesh","nodeCount","addNode","targetId","_userDataNodes","$.CubismModelUserData","$.CubismModelUserDataNode","CubismUserModel","_initialized","setInitialized","isUpdating","_updating","setUpdating","setDragging","_dragManager","setAcceleration","z","_accelerationX","_accelerationY","_accelerationZ","getModelMatrix","_modelMatrix","setOpacity","_opacity","getOpacity","loadModel","loadMotion","group","loadExpression","loadPose","_pose","loadUserData","_modelUserData","loadPhysics","_physics","isHit","pointX","pointY","drawIndex","vertices","tx","ty","getRenderer","_renderer","createRenderer","deleteRenderer","motionEventFired","eventValue","cubismDefaultMotionEventCallback","caller","_motionManager","_expressionManager","_eyeBlink","_breath","_lipsync","_lastLipSyncValue","_dragX","_dragY","_mocConsistency","$.CubismUserModel","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","apply","LAppWavFileHandler","releaseInstance","goalOffset","rms","_pcmData","_sampleOffset","_wavFileInfo","_samplesPerChannel","_lastRms","_samplingRate","channelCount","_numberOfChannels","sampleCount","pcm","start","loadWavFile","getRms","resolveValue","releasePcmData","asyncFileLoad","responce","_byteReader","_fileByte","_fileDataView","DataView","_fileSize","_readOffset","_fileName","getCheckSignature","Error","get32LittleEndian","fmtChunkSize","get16LittleEndian","_bitsPerSample","dataChunkSize","getPcmSample","pcm32","get8","get24LittleEndian","getPcmDataChannel","usechannel","getWavSamplingRate","loadFiletoBytes","WavFileInfo","ByteReader","getUint8","reference","getSignature","referenceString","TextEncoder","encode","signatureOffset","LoadStep","LAppModel","loadAssets","dir","fileName","_modelHomeDir","setting","_state","LoadModel","setupModel","catch","error","_modelSetting","modelFileName","status","ArrayBuffer","LoadExpression","loadCubismExpression","WaitLoadModel","expressionName","expressionFileName","_expressions","_expressionCount","LoadPhysics","loadCubismPhysics","WaitLoadExpression","physicsFileName","LoadPose","loadCubismPose","WaitLoadPhysics","poseFileName","SetupEyeBlink","setupEyeBlink","WaitLoadPose","SetupBreath","setupBreath","_idParamAngleX","_idParamAngleY","_idParamAngleZ","_idParamBodyAngleX","LoadUserData","userDataFile","SetupEyeBlinkIds","setupEyeBlinkIds","WaitLoadUserData","eyeBlinkIdCount","_eyeBlinkIds","SetupLipSyncIds","setupLipSyncIds","lipSyncIdCount","_lipSyncIds","SetupLayout","setupLayout","LoadMotion","loadCubismMotion","WaitLoadMotion","_allMotionCount","_motionCount","motionGroupCount","preLoadMotionGroup","LoadTexture","setupTextures","_subdelegate","getGlManager","usePremultiply","textureCount","modelTextureNumber","texturePath","onLoad","textureInfo","_textureCount","CompleteSetup","getTextureManager","createTextureFromPngFile","WaitLoadTexture","reloadRenderer","motionUpdated","startRandomMotion","_idParamEyeBallX","_idParamEyeBallY","_wavFileHandler","no","motionFileName","_motionConsistency","voice","path","setExpression","expressionId","setRandomExpression","hitTest","hitArenaName","drawId","tmpMotion","releaseMotions","releaseExpressions","doDraw","getCanvas","getFrameBuffer","draw","matrix","hasMocConsistencyFromFile","_consistency","setSubdelegate","subdelegate","_hitArea","_userArea","LoadAssets","LAppLive2DManager","releaseAllModel","_models","onDrag","onTap","toFixed","LAppDefine.HitAreaNameHead","LAppDefine.HitAreaNameBody","finishedMotion","beganMotion","onUpdate","projection","_viewMatrix","nextScene","_sceneIndex","LAppDefine.ModelDirSize","changeScene","modelPath","LAppDefine.ResourcesPath","LAppDefine.ModelDir","modelJsonName","setViewMatrix","addModel","sceneIndex","self","LAppTextureManager","_glManager","deleteTexture","usePremultply","img","Image","addEventListener","passive","LINEAR_MIPMAP_LINEAR","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","generateMipmap","TextureInfo","releaseTextures","releaseTextureByTexture","releaseTextureByFilePath","setGlManager","glManager","CubismViewMatrix","_screenLeft","_screenRight","_screenTop","_screenBottom","_maxLeft","_maxRight","_maxTop","_maxBottom","_maxScale","_minScale","adjustTranslate","adjustScale","cy","maxScale","getMaxScale","minScale","getMinScale","targetScale","tr2","tr3","setScreenRect","setMaxScreenRect","setMaxScale","setMinScale","isMaxScale","isMinScale","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","$.CubismViewMatrix","LAppSprite","_rect","Rect","up","down","_texture","_vertexBuffer","_uvBuffer","_indexBuffer","_positionLocation","_uvLocation","_textureLocation","_positionArray","_uvArray","_indexArray","_firstDraw","getTexture","render","programId","maxWidth","maxHeight","Uint16Array","STATIC_DRAW","TouchManager","_startX","_startY","_lastX","_lastY","_lastX1","_lastY1","_lastX2","_lastY2","_lastTouchDistance","_deltaX","_deltaY","_scale","_touchSingle","_flipAvailable","getDeltaX","getDeltaY","getStartX","getStartY","getX1","getY1","getX2","getY2","isSingleTouch","isFlickAvailable","disableFlick","touchesBegan","deviceX","deviceY","touchesMoved","getFlickDistance","calculateDistance","y1","y2","calculateMovingAmount","v1","v2","absoluteValue1","absoluteValue2","LAppView","_programId","_back","_gear","_touchManager","_deviceToScreen","ratio","screenW","screenH","flush","lapplive2dmanager","getLive2DManager","initializeSprite","textureManager","resourcesPath","imageName","fwidth","fheight","onTouchesBegan","window","devicePixelRatio","onTouchesMoved","posX","posY","viewX","transformViewX","viewY","transformViewY","onTouchesEnded","screenX","screenY","transformScreenX","transformScreenY","LAppSubdelegate","_canvas","_textureManager","_live2dManager","_view","_frameBuffer","_captured","_resizeObserver","unobserve","disconnect","resizeCanvas","blendFunc","SRC_ALPHA","ResizeObserver","entries","observer","resizeObserverCallback","call","observe","onResize","_needResize","isContextLost","depthFunc","LEQUAL","DEPTH_BUFFER_BIT","clearDepth","vertexShaderId","fragmentShaderId","clientWidth","clientHeight","drawingBufferWidth","drawingBufferHeight","onPointBegan","pageX","pageY","localX","offsetLeft","localY","offsetTop","onPointMoved","onPointEnded","onTouchCancel","LAppDelegate","onPointerBegan","_subdelegates","onPointerMoved","onPointerEnded","onPointerCancel","run","requestAnimationFrame","releaseEventListener","releaseSubdelegates","_cubismOption","document","removeEventListener","pointBeganEventListener","pointMovedEventListener","pointEndedEventListener","pointCancelEventListener","initializeCubism","initializeSubdelegates","initializeEventListener","bind","LAppDefine.CubismLoggingLevel","_canvases","createElement","style","body","appendChild","AppSubdelegate","AppDelegate","_drawFrameId","stop","cancelAnimationFrame","getElementById","logger","changeModel","modelSettingPath","pop","join","live2dManager","subdelegates"],"mappings":"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"}